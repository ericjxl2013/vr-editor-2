{"version":3,"sources":["node_modules/_browser-pack@6.1.0@browser-pack/_prelude.js","src/game/babylonloader.ts","src/game/config.ts","src/game/game.ts","src/game/index.ts","src/game/loader.ts","src/game/scenes.ts","src/index.ts","src/lib/ajax.ts","src/lib/editor.ts","src/lib/events.ts","src/lib/guid.ts","src/lib/index.ts","src/lib/observer.ts","src/lib/tools.ts","src/lib/very-camera.ts","src/lib/very-light.ts","src/main.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","lib_1","config_1","BabylonLoader","loadFromBabylonAsset","loadBabylon","asset","assetID","get","dataBabylon","babylonCacheData","parseBabylon","assembleBabylon","ossfile","getJsonAsset","Config","projectID","then","response","data","JSON","parse","babylonData","parsedData_1","materials","forEach","material","id","geometries","vertexData","geometry","meshes","mesh","transformNodes","transformNode","babylonParsedData","hasBabylobData","getBabylonData","hasParsedBabylonData","getParsedBabylonData","meshParseRecursion","tempMeshID","entities","parentID","parent","editor","childs","getChildren","myChildren","k","push","eulerAngle","Tools","radianToEulerAngle","rotation","entityData","name","resource_id","babylon_id","asset_id","position","x","y","z","scale","scaling","children","enabled","isEnabled","checkCollisions","pickable","isPickable","isVisible","tags","type","entity","origin","addSceneData","scenesData","createdAtTime","updateSceneData","now","Date","getFullYear","getRealTime","getMonth","getDate","getHours","getMinutes","str","toString","createCameraWraper","scene","canvas","camera","BABYLON","UniversalCamera","Vector3","maxZ","attachControl","cameraWraper","VeryCamera","orthoSize","createLightWraper","light","createLight","VeryLight","toLowerCase","PointLight","Zero","SpotLight","Math","PI","HemisphericLight","Up","DirectionalLight","Forward","loadLight","parsedLight","Light","Parse","loadReflectionProbe","parsedReflectionProbe","rootUrl","ReflectionProbe","loadAnimation","parsedAnimation","internalClass","_TypeStore","GetClass","loadMaterial","parsedMaterial","Material","loadMultiMaterial","parsedMultiMaterial","MultiMaterial","ParseMultiMaterial","loadMorphTargetManager","managerData","MorphTargetManager","loadSkeleton","parsedSkeleton","Skeleton","loadGeometry","Geometry","loadTransformNode","parsedTransformNode","TransformNode","loadMesh","parsedMesh","Mesh","loadCamera","parsedCamera","Camera","loadAnimationGroup","parsedAnimationGroup","AnimationGroup","setBabylonParent","index","cache","index_1","cache_1","cameras","_waitingParentId","getLastEntryByID","lights","prefix","assetsData","projectData","sceneIndex","__awaiter","console","warn","log","babylon","mats","key","assets","newMat","textureUrl","diffuseTexture","texture_id","assetID_1","getUrl","file","hash","_d","sent","specularTexture","assetID_2","reflectionTexture","assetID_3","refractionTexture","assetID_4","emissiveTexture","assetID_5","bumpTexture","assetID_6","opacityTexture","assetID_7","ambientTexture","assetID_8","lightmapTexture","assetID_9","VR","BabylonEngine","Scene","array","parsedVertexData","newTransformNodes_1","node","newMeshes_1","parentMeshes","tempMeshDic_1","tempMeshID_1","element","newID_1","oldID_1","GUID","create","element2","parentId","tempMesh","parentNode","parent_1","len","_c","once","addCamera","projectName","userID","username","sceneName","tableAssetsID","tableName","tableData","loader_1","Game","prototype","createScene","datas","_this","this","_engine","VE_Manager","dispose","Engine","_canvas","engine","window","addEventListener","resize","_scene","Time","start","clearColor","Color4","displayLoadingUI","startVeryEngine","bind","hideLoadingUI","onKeyboardObservable","add","kbInfo","KeyboardEventTypes","KEYDOWN","event","keyCode","ctrlKey","altKey","toggleDebug","runRenderLoop","activeCamera","render","entrance","VeryEngine","init","error","objects","onBeforeRenderObservable","count","objectID","getObjectID","getVeryObject","update","animate","width","clientWidth","_showFps","updateFpsPos","scenes","debugLayer","hide","show","embedMode","_fps","innerHTML","getFps","toFixed","canvasElement","fps","Loader","Canvas","_table","document","getElementById","__exportStar","method","assets_data","onLoad","asset_data","assetsLength","Object","getOwnPropertyNames","emit","fn","Observer","meshEntity","childIndex","entitiesIndex","lightWraper","arr","empty","box","babylonloader_1","intensity","has","diffuse","Color3","FromArray","specular","angle","exponent","setEnabled","eulerAngleToRadian","LIGHTTYPEID_HEMISPHERICLIGHT","direction","copyFrom","up","childAndParent","activeCameras","FreeCamera","applyGravity","viewport","Viewport","mode","fov","inertia","MeshBuilder","CreateBox","size","CreateSphere","segments","diameter","CreateGround","height","subdivisions","CreateCylinder","details","insertChild","loadingBabylonFlag","toLoadEntity","assembleSceneMesh","item","_a","parsedBabylon","meshID","meshData","recordRotation","vector3ToArray","scal","materialId","geometryId","getGeometryByID","getMaterialByID","matAssetID","Scenes","Ajax","url","AjaxRequest","post","put","delete","param","value","params","args","_super","Events","__extends","_onLoad","_progress","_xhr","status","notJson","responseText","json","ex","msg","message","_onError","evt","_onAbort","_onProgress","progress","lengthComputable","loaded","total","abort","XMLHttpRequest","cookies","withCredentials","upload","query","keys","indexOf","join","parts","split","ends","slice","undefined","open","ignoreContentType","setRequestHeader","headers","FormData","stringify","send","events_1","Editor","_hooks","methodRemove","_i","arguments","Array","apply","stack","defineProperty","_suspendEvents","val","on","events","_events","EventHandle","self","arg0","arg1","arg2","arg3","arg4","arg5","arg6","arg7","unbind","info","splice","owner","replace","random","patchData","parserObject","set","_dataType","_dataType2","debug","className","path","oldValue","_data","SEPARATOR","parseInt","updateChildData","_data2","isNumber","Number","isNaN","startsWith","newPath","unset","insert","ind","remove","removeValue","move","indOld","indNew","key2","propagate","that","state","_parent","_parentKey","_parentField","_silent","silence","silenceRestore","destroy","_destroyed","options","reparenting","_pathsWithDuplicates","_path","_keys","pathsWithDuplicates","para","multiplyByFloats","ORTHOGRAPHIC_CAMERA","_orthoSize","orthoRight","getEngine","getRenderWidth","orthoLeft","orthoTop","getRenderHeight","orthoBottom","_clearColor","renderCamera","_render","_backupViewport","clone","w","h","_width","_height","inputs","clear","getTypeID","getAbsolutePosition","game_1","dataLoaded","dataLoaded2","location","pathname","substring","getJsonConfig","catch","lastScene","last","tempData","temp","createElement","output","innerText","textContent","escape2Html","table","fpsLabel","setTimeout"],"mappings":"CAAA,SAAAA,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAE,EAAA,mBAAAC,SAAAA,QAAA,IAAAF,GAAAC,EAAA,OAAAA,EAAAF,GAAA,GAAA,GAAAI,EAAA,OAAAA,EAAAJ,GAAA,GAAA,IAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,KAAA,MAAAK,EAAAE,KAAA,mBAAAF,EAAA,IAAAG,EAAAX,EAAAG,GAAA,CAAAS,QAAA,IAAAb,EAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,OAAAI,EAAAH,EAAAI,GAAA,GAAAL,IAAAA,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAS,QAAA,IAAA,IAAAL,EAAA,mBAAAD,SAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,EAAA,CAAA,CAAAa,EAAA,CAAA,SAAAT,EAAAU,EAAAJ,gB,67CCCA,IAAAK,EAAAX,EAAA,UAEAY,EAAAZ,EAAA,YAEAa,GAmBkBA,EAAAC,qBAAd,aAKcD,EAAAE,YAAd,SAA0BC,GACtB,IAAIC,EAAkBD,EAAME,IAAI,MAC5BC,EAAmB,KACnBN,EAAcO,iBAAiBH,IAC/BE,EAAcN,EAAcO,iBAAiBH,GAC7CJ,EAAcQ,aAAaJ,EAASE,GACpCN,EAAcS,gBAAgBL,EAASE,IAGnCI,QAAQC,aAAaZ,EAAAa,OAAOC,UAAUV,EAAME,IAAI,MAAMF,EAAME,IAAI,QAAQF,EAAME,IAAI,cAAcS,KAAK,SAAAC,GACjG,IAAIC,EAAKC,KAAKC,MAAMH,GACpBT,EAAcU,EACdhB,EAAcO,iBAAiBH,GAAWE,EAC1CN,EAAcQ,aAAaJ,EAASE,GACpCN,EAAcS,gBAAgBL,EAASE,MA0NzCN,EAAAQ,aAAd,SAA2BJ,EAAiBe,GACxC,IACQC,EADJD,IACIC,EAAkB,GAElBD,EAAYE,YACZD,EAAWC,UAAY,GACvBF,EAAYE,UAAUC,QAAQ,SAACC,GAC3BH,EAAWC,UAAUE,EAASC,IAAMD,KAIxCJ,EAAYM,YAAcN,EAAYM,WAAWC,aACjDN,EAAWK,WAAa,GACxBN,EAAYM,WAAWC,WAAWJ,QAAQ,SAACK,GACvCP,EAAWK,WAAWE,EAASH,IAAMG,KAIzCR,EAAYS,SACZR,EAAWQ,OAAS,GACpBT,EAAYS,OAAON,QAAQ,SAACO,GACxBT,EAAWQ,OAAOC,EAAKL,IAAMK,KAIjCV,EAAYW,iBACZV,EAAWU,eAAiB,GAC5BX,EAAYW,eAAeR,QAAQ,SAACS,GAChCX,EAAWU,eAAeC,EAAcP,IAAMO,KAGtD/B,EAAcgC,kBAAkB5B,GAAWgB,IAIrCpB,EAAAiC,eAAd,SAA6B7B,GACzB,OAAOA,KAAWJ,EAAcO,kBAGtBP,EAAAkC,eAAd,SAA6B9B,GACzB,OAAIA,KAAWJ,EAAcO,iBAClBP,EAAcO,iBAAiBH,GAE/B,MAIDJ,EAAAmC,qBAAd,SAAmC/B,GAC/B,OAAOA,KAAWJ,EAAcgC,mBAGtBhC,EAAAoC,qBAAd,SAAmChC,GAC/B,OAAIA,KAAWJ,EAAcgC,kBAClBhC,EAAcgC,kBAAkB5B,GAEhC,MAKAJ,EAAAqC,mBAAf,SAAkCR,EAAsCzB,EAAiBkC,EAAiBC,EAAiBvB,GACvH,GAAIa,EAAM,CAEN,IAAIW,EAAmB,GAEnBA,EADgB,OAAhBX,EAAKY,OACMZ,EAAKY,OAAQjB,GAEbkB,OAAOhD,KAAK,iBACPW,IAAI,eAQxB,IAFA,IAAIsC,EAASd,EAAKe,cACdC,EAAa,GACRC,EAAI,EAAGA,EAAIH,EAAOhD,OAAQmD,IAC/BD,EAAWE,KAAKJ,EAAOG,GAAGtB,IAG9B,IAAIwB,EAAalD,EAAAmD,MAAMC,mBAAmBrB,EAAKsB,UAE3CC,EAAa,CACbC,KAAMxB,EAAKwB,KACXC,YAAazB,EAAKL,GAClB+B,WAAYjB,EAAWT,EAAKL,IAC5BgC,SAAUpD,EACVqC,OAAQD,EACRiB,SAAU,CAAC5B,EAAK4B,SAASC,EAAG7B,EAAK4B,SAASE,EAAG9B,EAAK4B,SAASG,GAC3DT,SAAU,CAACH,EAAWU,EAAGV,EAAWW,EAAGX,EAAWY,GAClDC,MAAO,CAAChC,EAAKiC,QAAQJ,EAAG7B,EAAKiC,QAAQH,EAAG9B,EAAKiC,QAAQF,GACrDG,SAAUlB,EACVmB,QAASnC,EAAKoC,YACdC,gBAAiBrC,EAAKqC,gBACtBC,SAAUtC,EAAKuC,WACfC,UAAWxC,EAAKwC,UAChBC,KAAM,GACNC,KAAM,QAGNC,EAAS9B,OAAOhD,KAAK,eAAgB0D,GACzCb,EAASQ,KAAKyB,GACdxD,EAAK+B,KAAKyB,EAAOC,QAEjB,IAAS3B,EAAI,EAAGA,EAAIH,EAAOhD,OAAQmD,IAC/B9C,EAAcqC,mBAAyCM,EAAOG,GAAI1C,EAASkC,EAAYC,EAAUvB,KAM/FhB,EAAA0E,aAAd,SAA2BpB,EAAqBtC,GAC5ChB,EAAc2E,WAAWpC,SAASe,GAAetC,EACjDhB,EAAc2E,WAAqB,SAAI3E,EAAc4E,iBAG3C5E,EAAA6E,gBAAd,SAA8BvB,EAAqBtC,GAC/ChB,EAAc2E,WAAWpC,SAASe,GAAetC,EACjDhB,EAAc2E,WAAqB,SAAI3E,EAAc4E,iBAG3C5E,EAAA4E,cAAd,WACI,IAAIE,EAAM,IAAIC,KAOd,OANQD,EAAIE,cAMD,IALHhF,EAAciF,YAAYH,EAAII,WAAa,GAK9B,IAJblF,EAAciF,YAAYH,EAAIK,WAIP,IAHvBnF,EAAciF,YAAYH,EAAIM,YAGG,IAFjCpF,EAAciF,YAAYH,EAAIO,eAK3BrF,EAAAiF,YAAf,SAA2BK,GACvB,OAAIA,EAAM,GACC,IAAMA,EAEVA,EAAIC,YAKDvF,EAAAwF,mBAAd,SAAiCnC,EAAcoC,EAAsBC,GACjE,IAAIC,EAAS,IAAIC,QAAQC,gBAAgBxC,EAAM,IAAIuC,QAAQE,QAAQ,EAAG,KAAM,KAAML,GAGlFE,EAAOI,KAAO,IACdJ,EAAOK,cAAcN,GAAQ,GAC7B,IAAIO,EAAe,IAAInG,EAAAoG,WAAWP,EAAQF,EAAOC,GAIjD,OAFAO,EAAaE,UAAY,GAElBF,GAIGjG,EAAAoG,kBAAd,SAAgC7B,EAAclB,EAAcoC,GACxD,IAAIY,EAAQrG,EAAcsG,YAAY/B,EAAMlB,EAAMoC,GAIlD,OAFkB,IAAI3F,EAAAyG,UAAUF,EAAOZ,IAO7BzF,EAAAsG,YAAd,SAA0B/B,EAAclB,EAAcoC,GAclD,MAVa,WADblB,EAAOA,EAAKiC,eAEA,IAAIZ,QAAQa,WAAWpD,EAAMuC,QAAQE,QAAQY,OAAQjB,GAC7C,SAATlB,EACC,IAAIqB,QAAQe,UAAUtD,EAAMuC,QAAQE,QAAQY,OAAQ,IAAId,QAAQE,QAAQ,GAAI,EAAG,GAAc,IAAVc,KAAKC,GAAW,EAAGpB,GAC9F,gBAATlB,EACC,IAAIqB,QAAQkB,iBAAiBzD,EAAMuC,QAAQE,QAAQiB,KAAMtB,GAEzD,IAAIG,QAAQoB,iBAAiB3D,EAAMuC,QAAQE,QAAQmB,UAAWxB,IAOhEzF,EAAAkH,UAAd,SAAwBC,EAAkB1B,GAEtC,OAAI0B,MAAAA,EAIG,KAHSvB,QAAQwB,MAAMC,MAAMF,EAAa1B,IAMvCzF,EAAAsH,oBAAd,SAAkCC,EAA4B9B,EAAsB+B,GAEhF,OAAID,MAAAA,EAIG,KAHmB3B,QAAQ6B,gBAAgBJ,MAAME,EAAuB9B,EAAO+B,IAM5ExH,EAAA0H,cAAd,SAA4BC,GAExB,GAAIA,MAAAA,EASJ,OAAO,KARH,IAAMC,EAAgBhC,QAAQiC,WAAWC,SAAS,qBAClD,OAAIF,EACgBA,EAAcP,MAAMM,GAG7B,MAML3H,EAAA+H,aAAd,SAA2BC,EAAqBvC,EAAsB+B,GAElE,OAAIQ,MAAAA,EAIG,KAHOpC,QAAQqC,SAASZ,MAAMW,EAAgBvC,EAAO+B,IAMlDxH,EAAAkI,kBAAd,SAAgCC,EAA0B1C,GAEtD,OAAI0C,MAAAA,EAIG,KAHQvC,QAAQwC,cAAcC,mBAAmBF,EAAqB1C,IAMnEzF,EAAAsI,uBAAd,SAAqCC,EAAkB9C,GAEnD,OAAI8C,MAAAA,EAIG,KAHe3C,QAAQ4C,mBAAmBnB,MAAMkB,EAAa9C,IAM1DzF,EAAAyI,aAAd,SAA2BC,EAAqBjD,GAE5C,OAAIiD,MAAAA,EAIG,KAHY9C,QAAQ+C,SAAStB,MAAMqB,EAAgBjD,IAMhDzF,EAAA4I,aAAd,SAA2BlH,EAAiB+D,EAAsB+B,GAE9D,OAAI9F,MAAAA,EAIG,KAHYkE,QAAQiD,SAASxB,MAAM3F,EAAY+D,EAAO+B,IAMnDxH,EAAA8I,kBAAd,SAAgCC,EAA0BtD,EAAsB+B,GAE5E,OAAIuB,MAAAA,EAIG,KAHQnD,QAAQoD,cAAc3B,MAAM0B,EAAqBtD,EAAO+B,IAO7DxH,EAAAiJ,SAAd,SAAuBC,EAAiBzD,EAAsB+B,GAE1D,OAAI0B,MAAAA,EAIG,KAH8BtD,QAAQuD,KAAK9B,MAAM6B,EAAYzD,EAAO+B,IAOjExH,EAAAoJ,WAAd,SAAyBC,EAAmB5D,GAExC,OAAI4D,MAAAA,EAIG,KAHUzD,QAAQ0D,OAAOjC,MAAMgC,EAAc5D,IAM1CzF,EAAAuJ,mBAAd,SAAiCC,EAA2B/D,GAExD,OAAI+D,MAAAA,EAIG,KAHkB5D,QAAQ6D,eAAepC,MAAMmC,EAAsB/D,IAOlEzF,EAAA0J,iBAAd,SAA+BjE,GAG3B,IAFA,IAAIkE,EAAOC,EAAQ,EAEVC,EAAQ,EAAGC,EAAQrE,EAAMsE,QAAQpK,OAAQkK,EAAQC,EAAOD,IAAS,CACtE,IAAIlE,EAASF,EAAMsE,QAAQF,GACvBlE,EAAOqE,mBACPrE,EAAOlD,OAASgD,EAAMwE,iBAAiBtE,EAAOqE,kBAC9CrE,EAAOqE,iBAAmB,MAIlC,IAAKL,EAAQ,EAAGC,EAAQnE,EAAMyE,OAAOvK,OAAQgK,EAAQC,EAAOD,IAAS,CACjE,IAAItD,EAAQZ,EAAMyE,OAAOP,GACrBtD,GAASA,EAAM2D,mBACf3D,EAAM5D,OAASgD,EAAMwE,iBAAiB5D,EAAM2D,kBAC5C3D,EAAM2D,iBAAmB,MAMjC,IAAKL,EAAQ,EAAGC,EAAQnE,EAAM3D,eAAenC,OAAQgK,EAAQC,EAAOD,IAAS,CACzE,IAAI5H,EAAgB0D,EAAM3D,eAAe6H,GACrC5H,EAAciI,mBACdjI,EAAcU,OAASgD,EAAMwE,iBAAiBlI,EAAciI,kBAC5DjI,EAAciI,iBAAmB,MAGzC,IAAKL,EAAQ,EAAGC,EAAQnE,EAAM7D,OAAOjC,OAAQgK,EAAQC,EAAOD,IAAS,CACjE,IAAI9H,EAAO4D,EAAM7D,OAAO+H,GACpB9H,EAAKmI,mBACLnI,EAAKY,OAASgD,EAAMwE,iBAAiBpI,EAAKmI,kBAC1CnI,EAAKmI,iBAAmB,QAxkBtBhK,EAAAmK,OAAiB,WAEjBnK,EAAAoK,WAAkB,GAClBpK,EAAAqK,YAAmB,GACnBrK,EAAA2E,WAAkB,GAClB3E,EAAAsK,WAAqB,EAGrBtK,EAAAO,iBAA2C,GAC3CP,EAAAgC,kBAA4C,GAgC5ChC,EAAAS,gBAAgB,SAAML,EAAiBE,GAAgB,OAAAiK,OAAA,OAAA,OAAA,EAAA,W,sHAC7C,OAAhBjK,EAAA,MAAA,CAAA,EAAA,I,GACAkK,QAAQC,KAAKnK,GACbkK,QAAQE,IAAIpK,EAAYsB,QACxB4I,QAAQE,IAAIpK,EAAYe,WACxBmJ,QAAQE,IAAIpK,EAAY4J,SASpBlK,EAAcoK,WAAWO,QAAQvK,GAAjC,MAAA,CAAA,EAAA,I,SACIwK,EAAO5K,EAAcoK,WAAWO,QAAQvK,GAAoB,U,KAEhDwK,E,yDACRA,EAAKC,GAAKrH,UAAYxD,EAAcoK,WAAWU,OAAOF,EAAKC,GAAKrH,WAC5DuH,EAAS/K,EAAcoK,WAAWU,OAAOF,EAAKC,GAAKrH,UAAUxC,KAE7DgK,EAAW,GACXD,EAAOE,gBAAkBF,EAAOE,eAAeC,YAC3CC,EAAQJ,EAAOE,eAAeC,WACvB,CAAA,EAAMxK,QAAQ0K,OAAOrL,EAAAa,OAAOC,UAAUsK,EAAQnL,EAAcoK,WAAWU,OAAOK,GAAS9H,KAAKrD,EAAcoK,WAAWU,OAAOK,GAASE,KAAKC,QAFrJ,CAAA,EAAA,IAJJ,CAAA,EAAA,K,cAMIN,EAAWO,EAAAC,OACXT,EAAOE,eAAe5H,KAAM2H,E,wBAE5BD,EAAOU,iBAAmBV,EAAOU,gBAAgBP,YAC7CQ,EAAQX,EAAOU,gBAAgBP,WACxB,CAAA,EAAMxK,QAAQ0K,OAAOrL,EAAAa,OAAOC,UAAU6K,EAAQ1L,EAAcoK,WAAWU,OAAOY,GAASrI,KAAKrD,EAAcoK,WAAWU,OAAOY,GAASL,KAAKC,QAFrJ,CAAA,EAAA,G,OAEAN,EAAWO,EAAAC,OACXT,EAAOU,gBAAgBpI,KAAM2H,E,wBAE7BD,EAAOY,mBAAqBZ,EAAOY,kBAAkBT,YACjDU,EAAQb,EAAOY,kBAAkBT,WAC1B,CAAA,EAAMxK,QAAQ0K,OAAOrL,EAAAa,OAAOC,UAAU+K,EAAQ5L,EAAcoK,WAAWU,OAAOc,GAASvI,KAAKrD,EAAcoK,WAAWU,OAAOc,GAASP,KAAKC,QAFrJ,CAAA,EAAA,G,OAEAN,EAAWO,EAAAC,OACXT,EAAOY,kBAAkBtI,KAAM2H,E,wBAE/BD,EAAOc,mBAAqBd,EAAOc,kBAAkBX,YACjDY,EAAQf,EAAOc,kBAAkBX,WAC1B,CAAA,EAAMxK,QAAQ0K,OAAOrL,EAAAa,OAAOC,UAAUiL,EAAQ9L,EAAcoK,WAAWU,OAAOgB,GAASzI,KAAKrD,EAAcoK,WAAWU,OAAOgB,GAAST,KAAKC,QAFrJ,CAAA,EAAA,G,OAEAN,EAAWO,EAAAC,OACXT,EAAOc,kBAAkBxI,KAAM2H,E,wBAE/BD,EAAOgB,iBAAmBhB,EAAOgB,gBAAgBb,YAC7Cc,EAAQjB,EAAOgB,gBAAgBb,WACxB,CAAA,EAAMxK,QAAQ0K,OAAOrL,EAAAa,OAAOC,UAAUmL,EAAQhM,EAAcoK,WAAWU,OAAOkB,GAAS3I,KAAKrD,EAAcoK,WAAWU,OAAOkB,GAASX,KAAKC,QAFrJ,CAAA,EAAA,I,QAEAN,EAAWO,EAAAC,OACXT,EAAOgB,gBAAgB1I,KAAM2H,E,0BAE7BD,EAAOkB,aAAelB,EAAOkB,YAAYf,YACrCgB,EAAQnB,EAAOkB,YAAYf,WACpB,CAAA,EAAMxK,QAAQ0K,OAAOrL,EAAAa,OAAOC,UAAUqL,EAAQlM,EAAcoK,WAAWU,OAAOoB,GAAS7I,KAAKrD,EAAcoK,WAAWU,OAAOoB,GAASb,KAAKC,QAFrJ,CAAA,EAAA,I,QAEAN,EAAWO,EAAAC,OACXT,EAAOkB,YAAY5I,KAAM2H,E,0BAEzBD,EAAOoB,gBAAkBpB,EAAOoB,eAAejB,YAC3CkB,EAAQrB,EAAOoB,eAAejB,WACvB,CAAA,EAAMxK,QAAQ0K,OAAOrL,EAAAa,OAAOC,UAAUuL,EAAQpM,EAAcoK,WAAWU,OAAOsB,GAAS/I,KAAKrD,EAAcoK,WAAWU,OAAOsB,GAASf,KAAKC,QAFrJ,CAAA,EAAA,I,QAEAN,EAAWO,EAAAC,OACXT,EAAOoB,eAAe9I,KAAM2H,E,0BAE5BD,EAAOsB,gBAAkBtB,EAAOsB,eAAenB,YAC3CoB,EAAQvB,EAAOsB,eAAenB,WACvB,CAAA,EAAMxK,QAAQ0K,OAAOrL,EAAAa,OAAOC,UAAUyL,EAAQtM,EAAcoK,WAAWU,OAAOwB,GAASjJ,KAAKrD,EAAcoK,WAAWU,OAAOwB,GAASjB,KAAKC,QAFrJ,CAAA,EAAA,I,QAEAN,EAAWO,EAAAC,OACXT,EAAOsB,eAAehJ,KAAM2H,E,0BAE5BD,EAAOwB,iBAAmBxB,EAAOwB,gBAAgBrB,YAC7CsB,EAAQzB,EAAOwB,gBAAgBrB,WACxB,CAAA,EAAMxK,QAAQ0K,OAAOrL,EAAAa,OAAOC,UAAU2L,EAAQxM,EAAcoK,WAAWU,OAAO0B,GAASnJ,KAAKrD,EAAcoK,WAAWU,OAAO0B,GAASnB,KAAKC,QAFrJ,CAAA,EAAA,I,QAEAN,EAAWO,EAAAC,OACXT,EAAOwB,gBAAgBlJ,KAAM2H,E,mBAGjChL,EAAc+H,aAAagD,EAAQ0B,GAAGC,cAAcC,MAAO,I,4CAkFvE,IA3EIrM,EAAYmB,YAAcnB,EAAYmB,WAAWC,YACjDpB,EAAYmB,WAAWC,WAAWkL,MAAMtL,QAAQ,SAACuL,GAC7C7M,EAAc4I,aAAaiE,EAAkBJ,GAAGC,cAAcC,MAAO,MAKzEG,EAAuD,GACvDxM,EAAYwB,gBACZxB,EAAYwB,eAAeR,QAAQ,SAACyH,GAChC,IAAIgE,EAAO/M,EAAc8I,kBAAkBC,EAAqB0D,GAAGC,cAAcC,MAAO,IACxFG,EAAkB/J,KAAKgK,KAK3BC,EAA8C,GAC9CC,EAAiD,GAEjDC,EAAiE,GAEjEC,EAAwC,GAExC7M,EAAYsB,SACZtB,EAAYsB,OAAON,QAAQ,SAAC8L,GAExB,IACQC,EACAC,EAFJtN,EAAc2E,WAAWpC,SAAS6K,EAAQ5L,KACtC6L,EAAQvN,EAAAyN,KAAKC,SACbF,EAAQF,EAAQ5L,GAEpB2L,EAAWE,GAASC,EACpBF,EAAQ5L,GAAK6L,EAEb/M,EAAYsB,OAAON,QAAQ,SAACmM,GACpBA,EAASC,WAAaJ,IACtBG,EAASC,SAAWL,EACpB7C,QAAQE,IAAI,wBAIpByC,EAAWC,EAAQ5L,IAAM4L,EAAQ5L,KAMzClB,EAAYsB,OAAON,QAAQ,SAAC8L,GACxB,IAAIO,EAAW3N,EAAciJ,SAASmE,EAASX,GAAGC,cAAcC,MAAO,IACvEK,EAAUjK,KAAK4K,GACfT,EAAYE,EAAQ5L,IAAMmM,KAO9BC,EADAC,EAAS,KAEwB,WAAjCnL,OAAOhD,KAAK,mBACZmO,EAASnL,OAAOhD,KAAK,kBAAkB,IAEtCmO,EAKGA,EAAOd,OACPa,EAAaC,EAAOd,MALxBc,EAASnL,OAAOhD,KAAK,iBAUrB6C,EAAkB,GAClBvB,EAAc,GAGT2I,EAAQ,EAAGC,EAAQkD,EAAkBnN,OAAQgK,EAAQC,EAAOD,KAC7D5H,EAAgB+K,EAAkBnD,KACjB5H,EAAciI,mBAC/BjI,EAAcU,OAASgK,GAAGC,cAAcC,MAAM1C,iBAAiBlI,EAAciI,kBAC7EjI,EAAciI,iBAAmB,MAIzC,IAAShL,EAAI,EAAG8O,EAAMd,EAAUrN,OAAQX,EAAI8O,EAAK9O,IACxB,OAAjBgO,EAAUhO,KACNgO,EAAUhO,GAAIgL,kBACVkD,EAAYF,EAAUhO,GAAIgL,kBAC1BgD,EAAUhO,GAAIyD,OAASyK,EAAYF,EAAUhO,GAAIgL,mBAMrDgD,EAAUhO,GAAIyD,OAASmL,EACvBX,EAAalK,KAAKiK,EAAUhO,KAEhCgO,EAAUhO,GAAIgL,iBAAmB,MAOzC,IAAShL,EAAI,EAAGA,EAAIiO,EAAatN,OAAQX,IACrCgB,EAAcqC,mBAAmB4K,EAAajO,GAAIoB,EAAS+M,EAAY5K,EAAUvB,GAGrF0B,OAAOhD,KAAK,oBAAoB,GAChCgD,OAAOhD,KAAK,eAAgB,SAAU,CAACgD,OAAOhD,KAAK,eAA+B,QAAjBqO,EAAEd,EAAa,UAAE,IAAAc,OAAA,EAAAA,EAAEvM,MACpFkB,OAAOsL,KAAK,kBAAmB,WAC3BtL,OAAOhD,KAAK,oBAAoB,KAGpCgD,OAAOhD,KAAK,oB,mCAwXxBM,GAjlBI,SAAAA,KAfSP,EAAAO,cAAAA,G,6HCHb,IAAAY,GA+BkBA,EAAAqN,UAAd,SAAwBtI,GACpB/E,EAAOmJ,QAAQhH,KAAK4C,IA9BV/E,EAAAuJ,OAAiB,WAGjBvJ,EAAAC,UAAoB,GACpBD,EAAAsN,YAAsB,GACtBtN,EAAAyJ,YAAmB,GAEnBzJ,EAAAuN,OAAiB,GACjBvN,EAAAwN,SAAmB,GAEnBxN,EAAAwJ,WAAkB,GAElBxJ,EAAA+D,WAAkB,GAClB/D,EAAA0J,WAAqB,EACrB1J,EAAAyN,UAAoB,GAEpBzN,EAAA0N,cAAwB,GACxB1N,EAAA2N,UAAoB,GACpB3N,EAAA4N,UAAiB,KAGjB5N,EAAAmJ,QAAwB,GAa1CnJ,GAVI,SAAAA,KA1BSnB,EAAAmB,OAAAA,G,mGCAb,IAAAb,EAAAZ,EAAA,YACAsP,EAAAtP,EAAA,YAMAuP,GAqBIA,EAAAC,UAAAC,YAAA,SAAYC,GAAZ,IAAAC,EAAAC,KAGQA,KAAKC,UAELvC,GAAGwC,WAAWC,UAEdH,KAAKC,QAAQE,WAEjBH,KAAKC,QAAU,IAAIpJ,QAAQuJ,OAAOJ,KAAKK,SAAS,GAChD3C,GAAGC,cAAcyC,OAASJ,KAAKC,QAE/B,IAAIK,EAASN,KAAKC,QA0DlB,OAzDAM,OAAOC,iBAAiB,SAAU,WAC9BF,EAAOG,WAGXT,KAAKU,OAAS,IAAI7J,QAAQ+G,MAAMoC,KAAKC,SACrCvC,GAAGC,cAAcC,MAAQoC,KAAKU,OAC9BhD,GAAGiD,KAAKC,QAERZ,KAAKU,OAAOG,WAAa,IAAIhK,QAAQiK,OAAO,IAAM,IAAK,IAAM,IAAK,IAAM,IAAK,GAY7ER,EAAOS,mBAIPpN,OAAOhD,KAAK,YAAaK,EAAAa,OAAO+D,WAAWoK,KAAKgB,gBAAgBC,KAAKjB,MAAMF,GAG3EQ,EAAOY,gBAGPlB,KAAKU,OAAOS,qBAAqBC,IAAI,SAAAC,GAC7BA,EAAO7L,OAASqB,QAAQyK,mBAAmBC,SACd,KAAzBF,EAAOG,MAAMC,SAAkBJ,EAAOG,MAAME,SAAWL,EAAOG,MAAMG,SACpElG,QAAQE,IAAI,kBACZoE,EAAK6B,iBAKjB5B,KAAKC,QAAQ4B,cAAc,WAKnB9B,EAAKW,QACDX,EAAKW,OAAOoB,cACZ/B,EAAKW,OAAOqB,WAWjB/B,MAIXL,EAAAC,UAAAoB,gBAAA,SAAgBlB,GACZ,IAAIkC,EAA0B,IAAItE,GAAGuE,WAGrC,IACID,EAASE,KAAKpC,EAHA,QAIhB,MAAOjQ,GACL4L,QAAQ0G,MAAMtS,GAGlB,IAAIuS,EAAyB1E,GAAGwC,WAAWkC,QARzB,QAUlBpC,KAAKU,OAAO2B,yBAAyBjB,IAAI,WAKrC,IAAK,IAAInR,EAAY,EAAGA,EAAImS,EAAQE,MAAOrS,IAAK,CAC5C,IAAIsS,EAAmBH,EAAQI,YAAYvS,GAC3CmS,EAAQK,cAAcF,GAAUG,YAKxC1C,KAAKU,OAAOS,qBAAqBC,IAAI,SAAAC,GAC7BA,EAAO7L,OAASqB,QAAQyK,mBAAmBC,SAC3C9F,QAAQE,IAAI0F,EAAOG,MAAM1F,QAQrC6D,EAAAC,UAAA+C,QAAA,WAAA,IAAA5C,EAAAC,KAoBI,OAnBAA,KAAKC,QAAQ4B,cAAc,WAKvB,GAJI9B,EAAKM,QAAQuC,QAAU7C,EAAKM,QAAQwC,aACpC9C,EAAKE,QAAQQ,SAGbV,EAAKW,OAAQ,CAEb,IAAK,IAAIzQ,EAAI,EAAG8O,EAAM/N,EAAAa,OAAOmJ,QAAQpK,OAAQX,EAAI8O,EAAK9O,IAClDe,EAAAa,OAAOmJ,QAAQ/K,GAAGwQ,QAAO,GAE7BV,EAAKW,OAAOqB,SAGZhC,EAAK+C,UACL/C,EAAKgD,iBAKN/C,MAMXL,EAAAC,UAAAgC,YAAA,WACI,IAEQlL,EASR,OAXIsJ,KAAKC,WAEDvJ,EAAQsJ,KAAKC,QAAQ+C,OAAO,IACtBC,WAAW3N,YACjBoB,EAAMuM,WAAWC,OAIjBxM,EAAMuM,WAAWE,KAAK,CAAEC,WAAW,KAGpCpD,MAMXL,EAAAC,UAAAmD,aAAA,WACQ/C,KAAKqD,OAGLrD,KAAKqD,KAAKC,UAAYtD,KAAKC,QAAQsD,SAASC,UAAY,SAGpE7D,GA3KI,SAAAA,EAAY8D,EAAkCC,GALtC1D,KAAA8C,UAAoB,EAMxB,IAAIpD,EAAAiE,OACJ3D,KAAKK,QAAUoD,EACf/F,GAAGC,cAAciG,OAAS5D,KAAKK,QAC/BL,KAAKqD,KAAOK,EAEZ1D,KAAK6D,OAASC,SAASC,eAAe,aAfjCrT,EAAAiP,KAAAA,G,iaCTbqE,EAAA5T,EAAA,UAAAM,GACAsT,EAAA5T,EAAA,YAAAM,GACAsT,EAAA5T,EAAA,YAAAM,GACAsT,EAAA5T,EAAA,YAAAM,GACAsT,EAAA5T,EAAA,mBAAAM,I,+hDCGI,SAHJiT,IAGI,IAAA5D,EAAAC,KAEIrM,OAAOsQ,OAAO,aAAc,SAACC,GACrBA,EAAYnI,QACZoI,EAAOD,EAAYnI,UAI3B,IAAIoI,EAAS,SAAUlS,GACnB0B,OAAOhD,KAAK,kBAAmB,IAE/B,IAcSmL,EAXYsI,EAHjB9B,EAAQ,EACR+B,EAAuBC,OAAOC,oBAAoBtS,GAAMrB,OAa5D,IAASkL,KAAO7J,EAXKmS,EAYZnS,EAAK6J,GAXVnI,OAAOhD,KAAK,YAAayT,EAAY,WACjC9B,IACA3O,OAAOhD,KAAK,kBAAoB2R,EAAQ+B,EAAgB,GAAM,IACjDA,GAAT/B,IACA3O,OAAOhD,KAAK,kBAAmB,GAC/BgD,OAAO6Q,KAAK,mBAY5B7Q,OAAOsQ,OAAO,YAAa,SAAUhS,EAAUwS,EAAY3E,GAYvD,IAAK,IAAIhE,KAAO7J,EAAKuB,SAAU,CAC3B,IAAIiC,EAAS,IAAI1E,EAAA2T,SAASzS,EAAKuB,SAASsI,IAIb,SAAvBrG,EAAOnE,IAAI,SACXqC,OAAOhD,KAAK,uBAAwB8E,GAG5C6M,EAAMqC,EAAW/T,OAEjB,IAAI,IAAIX,EADR2K,EAAM,EACM3K,EAAE0U,EAAW/T,OAAOX,IAG5B0D,OAAOhD,KAAK,oBAAqBgU,EAAW1U,GAAGwU,EAAG3E,GAKtDnM,OAAO6Q,KAAK,mBAIhB,IAAII,EAAqC,GACrCC,EAAwC,GAC5ClR,OAAOsQ,OAAO,uBAAwB,SAACxO,GAGnC,IAEQqP,EA4CA5N,EAgDI6N,EAkCJC,EAoHIC,EApPe,UAAvBxP,EAAOnE,IAAI,UAEPwT,EAAcI,EAAAjU,cAAcoG,kBAAkB5B,EAAOnE,IAAI,WAAYmE,EAAOnE,IAAI,QAASoM,GAAGC,cAAcC,QAGlGtG,MAAM6N,UAAY1P,EAAO2P,IAAI,aAAe3P,EAAOnE,IAAI,aAAe,EAC9EmE,EAAO2P,IAAI,YAA+C,IAAjC3P,EAAOnE,IAAI,WAAWV,SAC/CkU,EAAYxN,MAAM+N,QAAUxO,QAAQyO,OAAOC,UAAU9P,EAAOnE,IAAI,aAEhEmE,EAAO2P,IAAI,aAAiD,IAAlC3P,EAAOnE,IAAI,YAAYV,SACjDkU,EAAYxN,MAAMkO,SAAW3O,QAAQyO,OAAOC,UAAU9P,EAAOnE,IAAI,cAEjEwT,EAAYxN,iBAAiBT,QAAQe,YACjCnC,EAAO2P,IAAI,WACXN,EAAYxN,MAAMmO,MAAQhQ,EAAOnE,IAAI,UAErCmE,EAAO2P,IAAI,cACXN,EAAYxN,MAAMoO,SAAWjQ,EAAOnE,IAAI,cAIhDwT,EAAYrS,GAAKgD,EAAOnE,IAAI,eAC5BuT,EAAcpP,EAAOnE,IAAI,gBAAkBwT,EAC3CrP,EAAOuI,KAAO8G,EAEVrP,EAAO2P,IAAI,YACXN,EAAYa,WAAWlQ,EAAOnE,IAAI,YAElCmE,EAAO2P,IAAI,aAAiD,IAAlC3P,EAAOnE,IAAI,YAAYV,SACjDkU,EAAYpQ,SAAWmC,QAAQE,QAAQwO,UAAU9P,EAAOnE,IAAI,cAE5DmE,EAAO2P,IAAI,aAAiD,IAAlC3P,EAAOnE,IAAI,YAAYV,SACjDkU,EAAY1Q,SAAWrD,EAAAmD,MAAM0R,mBAAmB/O,QAAQE,QAAQwO,UAAU9P,EAAOnE,IAAI,cAEjFwT,EAAYtP,OAASqB,QAAQwB,MAAMwN,8BACRf,EAAYxN,MAAOwO,UAAUC,SAASjB,EAAYkB,KAGjFvQ,EAAO2P,IAAI,UAA2C,IAA/B3P,EAAOnE,IAAI,SAASV,SAC3CkU,EAAY/P,QAAU8B,QAAQE,QAAQwO,UAAU9P,EAAOnE,IAAI,WAG/D2U,EAAexQ,EAAQqP,IACO,WAAvBrP,EAAOnE,IAAI,SAGd4F,EAAegO,EAAAjU,cAAcwF,mBAAmBhB,EAAOnE,IAAI,QAASoM,GAAGC,cAAcC,MAAOF,GAAGC,cAAciG,QAQjHlG,GAAGC,cAAcC,MAAMsI,cAAclS,KAAKkD,EAAaN,QAEvDM,EAAazE,GAAKgD,EAAOnE,IAAI,eAC7BuT,EAAcpP,EAAOnE,IAAI,gBAAkB4F,EAC3CzB,EAAOuI,KAAO9G,EAEVzB,EAAO2P,IAAI,YACXlO,EAAayO,WAAWlQ,EAAOnE,IAAI,YAEnCmE,EAAO2P,IAAI,aAAiD,IAAlC3P,EAAOnE,IAAI,YAAYV,SACjDsG,EAAaxC,SAAWmC,QAAQE,QAAQwO,UAAU9P,EAAOnE,IAAI,cAE7DmE,EAAO2P,IAAI,aAAiD,IAAlC3P,EAAOnE,IAAI,YAAYV,SACjDsG,EAAa9C,SAAWrD,EAAAmD,MAAM0R,mBAAmB/O,QAAQE,QAAQwO,UAAU9P,EAAOnE,IAAI,eAEtFmE,EAAO2P,IAAI,UAA2C,IAA/B3P,EAAOnE,IAAI,SAASV,SAC3CsG,EAAanC,QAAU8B,QAAQE,QAAQwO,UAAU9P,EAAOnE,IAAI,WAG5DmE,EAAO2P,IAAI,oBACPlO,EAAaN,kBAAkBC,QAAQsP,aACvCjP,EAAaN,OAAOzB,gBAAkBM,EAAOnE,IAAI,oBAGrDmE,EAAO2P,IAAI,iBACPlO,EAAaN,kBAAkBC,QAAQsP,aACvCjP,EAAaN,OAAOwP,aAAe3Q,EAAOnE,IAAI,iBAIlDmE,EAAO2P,IAAI,cAEPL,EAAMtP,EAAOnE,IAAI,cACVyT,EAAInU,QAAyB,IAAfmU,EAAInU,SACzBsG,EAAaN,OAAOyP,SAAW,IAAIxP,QAAQyP,SAASvB,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAIA,EAAI,KAKpFtP,EAAO2P,IAAI,eACPL,EAAMtP,EAAOnE,IAAI,gBACVyT,EAAInU,QAAyB,IAAfmU,EAAInU,SACzBsG,EAAa2J,WAAa,IAAIhK,QAAQiK,OAAOiE,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAIA,EAAI,KAG7E7N,EAAa2J,WAAa,IAAIhK,QAAQiK,OAAO,GAAK,IAAK,IAAM,IAAK,IAAM,IAAK,GAG7ErL,EAAO2P,IAAI,UACXlO,EAAaqP,KAAO9Q,EAAOnE,IAAI,SAE/BmE,EAAO2P,IAAI,SACXlO,EAAasP,IAAM/Q,EAAOnE,IAAI,QAE9BmE,EAAO2P,IAAI,aACXlO,EAAauP,QAAUhR,EAAOnE,IAAI,YAElCmE,EAAO2P,IAAI,eACXlO,EAAaE,UAAY3B,EAAOnE,IAAI,cAOxC4F,EAAauJ,QAAO,GAIpBzP,EAAAa,OAAOqN,UAAUhI,GAEjB+O,EAAexQ,EAAQyB,IACO,UAAvBzB,EAAOnE,IAAI,SAEd0T,EAAQ,IAAInO,QAAQoD,cAAcxE,EAAOnE,IAAI,QAASoM,GAAGC,cAAcC,QAC3EnI,EAAOuI,KAAOgH,GACRvS,GAAKgD,EAAOnE,IAAI,eACtB0T,EAAMtQ,SAAWmC,QAAQE,QAAQwO,UAAU9P,EAAOnE,IAAI,aACtD0T,EAAM5Q,SAAWrD,EAAAmD,MAAM0R,mBAAmB/O,QAAQE,QAAQwO,UAAU9P,EAAOnE,IAAI,cAC/E0T,EAAMjQ,QAAU8B,QAAQE,QAAQwO,UAAU9P,EAAOnE,IAAI,UACrD0T,EAAM9P,UAAUO,EAAOnE,IAAI,YAC3B2U,EAAexQ,EAAQuP,IACO,cAAvBvP,EAAOnE,IAAI,QACdmE,EAAOnE,IAAI,YAAwC,QAA1BmE,EAAOnE,IAAI,YAEhC2T,EAAMpO,QAAQ6P,YAAYC,UAAUlR,EAAOnE,IAAI,QAAS,CAAEsV,KAAM,KAAOlJ,GAAGC,cAAcC,OAG5FnI,EAAOuI,KAAOiH,GACdJ,EAAcpP,EAAOnE,IAAI,gBAAkB2T,GACvCxS,GAAKgD,EAAOnE,IAAI,eAEhBmE,EAAO2P,IAAI,YACXH,EAAIU,WAAWlQ,EAAOnE,IAAI,YAE1BmE,EAAO2P,IAAI,aAAiD,IAAlC3P,EAAOnE,IAAI,YAAYV,SACjDqU,EAAIvQ,SAAWmC,QAAQE,QAAQwO,UAAU9P,EAAOnE,IAAI,cAEpDmE,EAAO2P,IAAI,aAAiD,IAAlC3P,EAAOnE,IAAI,YAAYV,SACjDqU,EAAI7Q,SAAWrD,EAAAmD,MAAM0R,mBAAmB/O,QAAQE,QAAQwO,UAAU9P,EAAOnE,IAAI,eAE7EmE,EAAO2P,IAAI,UAA2C,IAA/B3P,EAAOnE,IAAI,SAASV,SAC3CqU,EAAIlQ,QAAU8B,QAAQE,QAAQwO,UAAU9P,EAAOnE,IAAI,WAEnDmE,EAAO2P,IAAI,qBACXH,EAAI9P,gBAAkBM,EAAOnE,IAAI,oBAEjCmE,EAAO2P,IAAI,cACXH,EAAI5P,WAAaI,EAAOnE,IAAI,aAE5BmE,EAAO2P,IAAI,eACXH,EAAI3P,UAAYG,EAAOnE,IAAI,cAG3BmE,EAAOnE,IAAI,eAGf2U,EAAexQ,EAAQwP,IAChBxP,EAAOnE,IAAI,YAAwC,WAA1BmE,EAAOnE,IAAI,YAEvC2T,EAAMpO,QAAQ6P,YAAYG,aAAapR,EAAOnE,IAAI,QAAS,CAAEwV,SAAU,GAAIC,SAAU,KAAOrJ,GAAGC,cAAcC,OAGjHnI,EAAOuI,KAAOiH,GACdJ,EAAcpP,EAAOnE,IAAI,gBAAkB2T,GACvCxS,GAAKgD,EAAOnE,IAAI,eAEhBmE,EAAO2P,IAAI,YACXH,EAAIU,WAAWlQ,EAAOnE,IAAI,YAE1BmE,EAAO2P,IAAI,aAAiD,IAAlC3P,EAAOnE,IAAI,YAAYV,SACjDqU,EAAIvQ,SAAWmC,QAAQE,QAAQwO,UAAU9P,EAAOnE,IAAI,cAEpDmE,EAAO2P,IAAI,aAAiD,IAAlC3P,EAAOnE,IAAI,YAAYV,SACjDqU,EAAI7Q,SAAWrD,EAAAmD,MAAM0R,mBAAmB/O,QAAQE,QAAQwO,UAAU9P,EAAOnE,IAAI,eAE7EmE,EAAO2P,IAAI,UAA2C,IAA/B3P,EAAOnE,IAAI,SAASV,SAC3CqU,EAAIlQ,QAAU8B,QAAQE,QAAQwO,UAAU9P,EAAOnE,IAAI,WAEnDmE,EAAO2P,IAAI,qBACXH,EAAI9P,gBAAkBM,EAAOnE,IAAI,oBAEjCmE,EAAO2P,IAAI,cACXH,EAAI5P,WAAaI,EAAOnE,IAAI,aAE5BmE,EAAO2P,IAAI,eACXH,EAAI3P,UAAYG,EAAOnE,IAAI,cAG3BmE,EAAOnE,IAAI,eAGf2U,EAAexQ,EAAQwP,IAChBxP,EAAOnE,IAAI,YAAwC,UAA1BmE,EAAOnE,IAAI,YAEvC2T,EAAMpO,QAAQ6P,YAAYM,aAAavR,EAAOnE,IAAI,QAAS,CAAEsR,MAAO,IAAMqE,OAAQ,IAAMC,aAAc,IAAMxJ,GAAGC,cAAcC,OAGjInI,EAAOuI,KAAOiH,GACdJ,EAAcpP,EAAOnE,IAAI,gBAAkB2T,GACvCxS,GAAKgD,EAAOnE,IAAI,eAEhBmE,EAAO2P,IAAI,YACXH,EAAIU,WAAWlQ,EAAOnE,IAAI,YAE1BmE,EAAO2P,IAAI,aAAiD,IAAlC3P,EAAOnE,IAAI,YAAYV,SACjDqU,EAAIvQ,SAAWmC,QAAQE,QAAQwO,UAAU9P,EAAOnE,IAAI,cAEpDmE,EAAO2P,IAAI,aAAiD,IAAlC3P,EAAOnE,IAAI,YAAYV,SACjDqU,EAAI7Q,SAAWrD,EAAAmD,MAAM0R,mBAAmB/O,QAAQE,QAAQwO,UAAU9P,EAAOnE,IAAI,eAE7EmE,EAAO2P,IAAI,UAA2C,IAA/B3P,EAAOnE,IAAI,SAASV,SAC3CqU,EAAIlQ,QAAU8B,QAAQE,QAAQwO,UAAU9P,EAAOnE,IAAI,WAEnDmE,EAAO2P,IAAI,qBACXH,EAAI9P,gBAAkBM,EAAOnE,IAAI,oBAEjCmE,EAAO2P,IAAI,cACXH,EAAI5P,WAAaI,EAAOnE,IAAI,aAE5BmE,EAAO2P,IAAI,eACXH,EAAI3P,UAAYG,EAAOnE,IAAI,cAG3BmE,EAAOnE,IAAI,eAGf2U,EAAexQ,EAAQwP,IAChBxP,EAAOnE,IAAI,YAAwC,aAA1BmE,EAAOnE,IAAI,aAEvC2T,EAAMpO,QAAQ6P,YAAYS,eAAe1R,EAAOnE,IAAI,QAAS,CAAE2V,OAAQ,IAAKF,SAAU,KAAOrJ,GAAGC,cAAcC,OAGlHnI,EAAOuI,KAAOiH,GACdJ,EAAcpP,EAAOnE,IAAI,gBAAkB2T,GACvCxS,GAAKgD,EAAOnE,IAAI,eAEhBmE,EAAO2P,IAAI,YACXH,EAAIU,WAAWlQ,EAAOnE,IAAI,YAE1BmE,EAAO2P,IAAI,aAAiD,IAAlC3P,EAAOnE,IAAI,YAAYV,SACjDqU,EAAIvQ,SAAWmC,QAAQE,QAAQwO,UAAU9P,EAAOnE,IAAI,cAEpDmE,EAAO2P,IAAI,aAAiD,IAAlC3P,EAAOnE,IAAI,YAAYV,SACjDqU,EAAI7Q,SAAWrD,EAAAmD,MAAM0R,mBAAmB/O,QAAQE,QAAQwO,UAAU9P,EAAOnE,IAAI,eAE7EmE,EAAO2P,IAAI,UAA2C,IAA/B3P,EAAOnE,IAAI,SAASV,SAC3CqU,EAAIlQ,QAAU8B,QAAQE,QAAQwO,UAAU9P,EAAOnE,IAAI,WAEnDmE,EAAO2P,IAAI,qBACXH,EAAI9P,gBAAkBM,EAAOnE,IAAI,oBAEjCmE,EAAO2P,IAAI,cACXH,EAAI5P,WAAaI,EAAOnE,IAAI,aAE5BmE,EAAO2P,IAAI,eACXH,EAAI3P,UAAYG,EAAOnE,IAAI,cAG3BmE,EAAOnE,IAAI,eAGf2U,EAAexQ,EAAQwP,IAGG,SAAvBxP,EAAOnE,IAAI,SAGlBqT,EAAW3Q,KAAKyB,KAIxB,IAAIwQ,EAAiB,SAACxQ,EAAkBuI,GAGpC,IADA,IAiBQoJ,EAjBJpS,EAAWS,EAAOnE,IAAI,YACjBrB,EAAI,EAAGA,EAAI+E,EAASpE,OAAQX,IACjC2U,EAAW5P,EAAS/E,IAAM,CACtB2K,MAAO3K,EACPyD,OAAQsK,GAGR6G,EAAc7P,EAAS/E,KACvBoX,EAAYrJ,EAAM6G,EAAc7P,EAAS/E,IAAKA,IAKjDwF,EAAOnE,IAAI,YAIR8V,EAAUxC,EAAWnP,EAAOnE,IAAI,kBACrB8V,EAAQ1T,QACnB2T,EAAYD,EAAQ1T,OAAQsK,EAAMoJ,EAAQxM,QAKlDyM,EAAc,SAAC3T,EAAgCsK,EAA8BpD,GAChE,OAAToD,IACAA,EAAKtK,OAASA,IAItBC,OAAOsQ,OAAO,oBAAqB,SAACxO,EAAiBgP,EAAY3E,GAC7D3O,EAAYsE,EAAOgP,EAAG3E,KAE1B,IAAIwC,EAAM,EACN1H,EAAM,EACN+J,EAAsB,GACtB2C,EAAiD,GACjDC,EAA8C,GAC9CpW,EAAc,SAAMsE,EAAiBgP,EAAY3E,GAAS,OAAAtE,EAAAuE,OAAA,OAAA,EAAA,W,kDACtD1O,EAAkBoE,EAAOnE,IAAI,YAC7BC,EAAmB,KAEnB2T,EAAAjU,cAAciC,eAAe7B,IAC7BE,EAAc2T,EAAAjU,cAAcoC,qBAAqBhC,GAGjDmW,EAAkB/R,EAAQlE,KAC1BqJ,GACU0H,IACGA,EAAT1H,EAAM,EAAW+J,EAAW,GAC5BF,EAAG3E,KAGHzO,KAAWiW,EACXC,EAAalW,GAAS2C,KAAKyB,IAE3B6R,EAAmBjW,IAAW,EAC9BkW,EAAalW,GAAW,CAACoE,GAInBnB,EAAK4Q,EAAAjU,cAAcoK,WAAWU,OAAO1K,GAASiD,KAClD3C,QAAQC,aAAaZ,EAAAa,OAAOC,UAAUT,EAAQiD,EAAK4Q,EAAAjU,cAAcoK,WAAWU,OAAO1K,GAASiL,KAAKC,MAAMxK,KAAK,SAAAC,GAC1GT,EAAcW,KAAKC,MAAMH,GACzBkT,EAAAjU,cAAcO,iBAAiBH,GAAWE,EAC1C2T,EAAAjU,cAAcQ,aAAaJ,EAASE,GACpC2T,EAAAjU,cAAcQ,aAAaJ,EAASE,GACpCA,EAAc2T,EAAAjU,cAAcoC,qBAAqBhC,GACjDkW,EAAalW,GAASkB,QAAQ,SAAMkV,GAAc,OAAAjM,EAAAuE,OAAA,OAAA,EAAA,W,iDAC9C,MAAA,CAAA,EAAMyH,EAAkBC,EAAMlW,I,cAA9BmW,EAAAjL,SACA7B,GACU0H,IACGA,EAAT1H,EAAM,EAAW+J,EAAW,GAC5BF,EAAG3E,I,uBASvB0H,EAAoB,SAAM/R,EAAkBkS,GAAkB,OAAAnM,EAAAuE,OAAA,OAAA,EAAA,W,kGAE1D4H,GACItW,EAAkBoE,EAAOnE,IAAI,YAE7BsW,EAAiBnS,EAAOnE,IAAI,cAC5BqW,EAAc9U,OAAO+U,KACjBC,EAAWF,EAAc9U,OAAO+U,IAE3BlT,SAAWe,EAAO2P,IAAI,aAAe3P,EAAOnE,IAAI,YAAcmE,EAAOnE,IAAI,YAAcuW,EAASnT,SAGrGoT,GAFAA,EAAiBrS,EAAOnE,IAAI,cACc,EAAxBwW,EAAelX,OAChBG,EAAAmD,MAAM6T,eAAehX,EAAAmD,MAAM0R,mBAAmB/O,QAAQE,QAAQwO,UAAUuC,KAExED,EAASzT,SAE9ByT,EAASzT,SAAW0T,EACpBD,EAAS/S,MAAQW,EAAO2P,IAAI,UAAY3P,EAAOnE,IAAI,SAAWmE,EAAOnE,IAAI,SAAWuW,EAASG,KAC7FH,EAASvT,KAAOmB,EAAO2P,IAAI,SAAW3P,EAAOnE,IAAI,QAAUmE,EAAOnE,IAAI,QAAUuW,EAASvT,KACzFuT,EAASpV,GAAKgD,EAAO2P,IAAI,gBAAkB3P,EAAOnE,IAAI,eAAiBmE,EAAOnE,IAAI,eAAiBuW,EAASpV,GAC5GoV,EAAS3S,UAAYO,EAAO2P,IAAI,WAAa3P,EAAOnE,IAAI,WAAauW,EAAS3S,UAC9E2S,EAASvS,UAAYG,EAAO2P,IAAI,aAAe3P,EAAOnE,IAAI,aAAeuW,EAASvS,UAElFuS,EAASzS,SAAWK,EAAO2P,IAAI,YAAc3P,EAAOnE,IAAI,YAAcuW,EAASzS,SAG/EyS,EAAS1S,gBAAkBM,EAAO2P,IAAI,mBAAqB3P,EAAOnE,IAAI,mBAAqBuW,EAAS1S,gBACpG0S,EAASI,WAAaxS,EAAO2P,IAAI,eAAiB3P,EAAOnE,IAAI,eAAiBuW,EAASI,WAEvFJ,EAASlJ,SAAWlJ,EAAO2P,IAAI,UAAY3P,EAAOnE,IAAI,UAAYuW,EAASlJ,SAIvEkJ,EAASK,YAC2D,OAAhExK,GAAGC,cAAcC,MAAMuK,gBAAgBN,EAASK,aAC5CP,EAAcjV,YAAciV,EAAcjV,WAAWmV,EAASK,cAC1DvV,EAAagV,EAAcjV,WAAWmV,EAASK,YACnDhD,EAAAjU,cAAc4I,aAAalH,EAAY+K,GAAGC,cAAcC,MAAO,MAMvEiK,EAASI,YAC2D,OAAhEvK,GAAGC,cAAcC,MAAMwK,gBAAgBP,EAASI,YADpD,CAAA,EAAA,IAGQ/C,EAAAjU,cAAcoK,WAAWO,QAAQvK,IAC7BwK,EAAOqJ,EAAAjU,cAAcoK,WAAWO,QAAQvK,GAAoB,YACpDwK,EAAKgM,EAASI,aAClBI,EAAaxM,EAAKgM,EAASI,YAAYxT,SACvCyQ,EAAAjU,cAAcoK,WAAWU,OAAOsM,IAC5BrM,EAASkJ,EAAAjU,cAAcoK,WAAWU,OAAOsM,GAAYpW,KAGzDgK,EAAW,GACXD,EAAOE,gBAAkBF,EAAOE,eAAeC,YAC3CC,EAAQJ,EAAOE,eAAeC,WACvB,CAAA,EAAMxK,QAAQ0K,OAAOrL,EAAAa,OAAOC,UAAUsK,EAAQ8I,EAAAjU,cAAcoK,WAAWU,OAAOK,GAAS9H,KAAK4Q,EAAAjU,cAAcoK,WAAWU,OAAOK,GAASE,KAAKC,QAFrJ,CAAA,EAAA,IALA,CAAA,EAAA,KAFJ,CAAA,EAAA,IAFJ,CAAA,EAAA,KAxCZ,CAAA,EAAA,KAJJ,CAAA,EAAA,I,OAuDwBN,EAAWyL,EAAAjL,OACXT,EAAOE,eAAe5H,KAAM2H,E,wBAE5BD,EAAOU,iBAAmBV,EAAOU,gBAAgBP,YAC7CQ,EAAQX,EAAOU,gBAAgBP,WACxB,CAAA,EAAMxK,QAAQ0K,OAAOrL,EAAAa,OAAOC,UAAU6K,EAAQuI,EAAAjU,cAAcoK,WAAWU,OAAOY,GAASrI,KAAK4Q,EAAAjU,cAAcoK,WAAWU,OAAOY,GAASL,KAAKC,QAFrJ,CAAA,EAAA,G,OAEAN,EAAWyL,EAAAjL,OACXT,EAAOU,gBAAgBpI,KAAM2H,E,wBAE7BD,EAAOY,mBAAqBZ,EAAOY,kBAAkBT,YACjDU,EAAQb,EAAOY,kBAAkBT,WAC1B,CAAA,EAAMxK,QAAQ0K,OAAOrL,EAAAa,OAAOC,UAAU+K,EAAQqI,EAAAjU,cAAcoK,WAAWU,OAAOc,GAASvI,KAAK4Q,EAAAjU,cAAcoK,WAAWU,OAAOc,GAASP,KAAKC,QAFrJ,CAAA,EAAA,G,OAEAN,EAAWyL,EAAAjL,OACXT,EAAOY,kBAAkBtI,KAAM2H,E,wBAE/BD,EAAOc,mBAAqBd,EAAOc,kBAAkBX,YACjDY,EAAQf,EAAOc,kBAAkBX,WAC1B,CAAA,EAAMxK,QAAQ0K,OAAOrL,EAAAa,OAAOC,UAAUiL,EAAQmI,EAAAjU,cAAcoK,WAAWU,OAAOgB,GAASzI,KAAK4Q,EAAAjU,cAAcoK,WAAWU,OAAOgB,GAAST,KAAKC,QAFrJ,CAAA,EAAA,G,OAEAN,EAAWyL,EAAAjL,OACXT,EAAOc,kBAAkBxI,KAAM2H,E,wBAE/BD,EAAOgB,iBAAmBhB,EAAOgB,gBAAgBb,YAC7Cc,EAAQjB,EAAOgB,gBAAgBb,WACxB,CAAA,EAAMxK,QAAQ0K,OAAOrL,EAAAa,OAAOC,UAAUmL,EAAQiI,EAAAjU,cAAcoK,WAAWU,OAAOkB,GAAS3I,KAAK4Q,EAAAjU,cAAcoK,WAAWU,OAAOkB,GAASX,KAAKC,QAFrJ,CAAA,EAAA,I,OAEAN,EAAWyL,EAAAjL,OACXT,EAAOgB,gBAAgB1I,KAAM2H,E,0BAE7BD,EAAOkB,aAAelB,EAAOkB,YAAYf,YACrCgB,EAAQnB,EAAOkB,YAAYf,WACpB,CAAA,EAAMxK,QAAQ0K,OAAOrL,EAAAa,OAAOC,UAAUqL,EAAQ+H,EAAAjU,cAAcoK,WAAWU,OAAOoB,GAAS7I,KAAK4Q,EAAAjU,cAAcoK,WAAWU,OAAOoB,GAASb,KAAKC,QAFrJ,CAAA,EAAA,I,QAEAN,EAAWyL,EAAAjL,OACXT,EAAOkB,YAAY5I,KAAM2H,E,0BAEzBD,EAAOoB,gBAAkBpB,EAAOoB,eAAejB,YAC3CkB,EAAQrB,EAAOoB,eAAejB,WACvB,CAAA,EAAMxK,QAAQ0K,OAAOrL,EAAAa,OAAOC,UAAUuL,EAAQ6H,EAAAjU,cAAcoK,WAAWU,OAAOsB,GAAS/I,KAAK4Q,EAAAjU,cAAcoK,WAAWU,OAAOsB,GAASf,KAAKC,QAFrJ,CAAA,EAAA,I,QAEAN,EAAWyL,EAAAjL,OACXT,EAAOoB,eAAe9I,KAAM2H,E,0BAE5BD,EAAOsB,gBAAkBtB,EAAOsB,eAAenB,YAC3CoB,EAAQvB,EAAOsB,eAAenB,WACvB,CAAA,EAAMxK,QAAQ0K,OAAOrL,EAAAa,OAAOC,UAAUyL,EAAQ2H,EAAAjU,cAAcoK,WAAWU,OAAOwB,GAASjJ,KAAK4Q,EAAAjU,cAAcoK,WAAWU,OAAOwB,GAASjB,KAAKC,QAFrJ,CAAA,EAAA,I,QAEAN,EAAWyL,EAAAjL,OACXT,EAAOsB,eAAehJ,KAAM2H,E,0BAE5BD,EAAOwB,iBAAmBxB,EAAOwB,gBAAgBrB,YAC7CsB,EAAQzB,EAAOwB,gBAAgBrB,WACxB,CAAA,EAAMxK,QAAQ0K,OAAOrL,EAAAa,OAAOC,UAAU2L,EAAQyH,EAAAjU,cAAcoK,WAAWU,OAAO0B,GAASnJ,KAAK4Q,EAAAjU,cAAcoK,WAAWU,OAAO0B,GAASnB,KAAKC,QAFrJ,CAAA,EAAA,I,QAEAN,EAAWyL,EAAAjL,OACXT,EAAOwB,gBAAgBlJ,KAAM2H,E,0BAGjCiJ,EAAAjU,cAAc+H,aAAagD,EAAQ0B,GAAGC,cAAcC,MAAO,I,eAEvDnC,QAAQC,KAAK,mB,wCAIrBD,QAAQC,KAAK,mB,0BAMrB5I,EAAOoS,EAAAjU,cAAciJ,SAAS2N,EAAUnK,GAAGC,cAAcC,MAAO,IACpEnI,EAAOuI,KAAOlL,EACd+R,EAAcpP,EAAOnE,IAAI,gBAAkBwB,EAC3CmT,EAAexQ,EAAQ3C,G,eAEvB2I,QAAQC,KAAK,mB,mCAvjBjC,IAAA3K,EAAAX,EAAA,UACA8U,EAAA9U,EAAA,mBACAY,EAAAZ,EAAA,YAEaM,EAAAiT,OAAAA,G,iJCAX,SAJF2E,KAAa5X,EAAA4X,OAAAA,G,wYCAbtE,EAAA5T,EAAA,SAAAM,GACAsT,EAAA5T,EAAA,UAAAM,I,sdCDA,IAAAK,EAAAX,EAAA,UAEAmY,GASkBA,EAAAjX,IAAd,SAAkBkX,GACd,OAAO,IAAIC,EAAY,CAAED,IAAKA,KAGpBD,EAAAG,KAAd,SAAmBF,EAAavW,GAC5B,OAAO,IAAIwW,EAAY,CACnBxE,OAAQ,OACRuE,IAAKA,EACLvW,KAAMA,KAIAsW,EAAAI,IAAd,SAAkBH,EAAavW,GAC3B,OAAO,IAAIwW,EAAY,CACnBxE,OAAQ,MACRuE,IAAKA,EACLvW,KAAMA,KAIAsW,EAAAK,OAAd,SAAqBJ,GACjB,OAAO,IAAIC,EAAY,CACnBxE,OAAQ,SACRuE,IAAKA,KAMCD,EAAAM,MAAd,SAAoBvU,EAAcwU,GAC9BP,EAAKQ,OAAOzU,GAAQwU,GAHVP,EAAAQ,OAAiC,GAMnDR,GAxCI,SAAAA,EAAmBS,GAIf,MAHsB,iBAAX,IACPA,EAAO,CAAER,IAAKQ,IAEX,IAAIP,EAAYO,GANlBtY,EAAA6X,KAAAA,EA6Cb,IAAAU,EAAAR,GAAAQ,EAAiClY,EAAAmY,OAAAC,EAAAV,EAAAQ,GA8FrBR,EAAA7I,UAAAwJ,QAAR,WAII,GAHApJ,KAAKqJ,UAAY,EACjBrJ,KAAKwE,KAAK,WAAY,GAEG,MAArBxE,KAAKsJ,KAAKC,QAAuC,MAArBvJ,KAAKsJ,KAAKC,OACtC,GAAIvJ,KAAKwJ,QACLxJ,KAAKwE,KAAK,OAAQxE,KAAKsJ,KAAKC,OAAQvJ,KAAKsJ,KAAKG,kBAC3C,CACH,IACI,IAAIC,EAAOxX,KAAKC,MAAM6N,KAAKsJ,KAAKG,cAClC,MAAOE,GAEL,YADA3J,KAAKwE,KAAK,QAASxE,KAAKsJ,KAAKC,QAAU,EAAG,IAAIhZ,MAAM,iBAGxDyP,KAAKwE,KAAK,OAAQxE,KAAKsJ,KAAKC,OAAQG,QAGxC,IACI,IACIE,GADAF,EAAOxX,KAAKC,MAAM6N,KAAKsJ,KAAKG,eACjBI,QAMXD,GAJAA,EADCA,IACKF,EAAKvH,OAAUuH,EAAK1X,UAAY0X,EAAK1X,SAASmQ,SAI9CnC,KAAKsJ,KAAKG,aAGpBzJ,KAAKwE,KAAK,QAASxE,KAAKsJ,KAAKC,OAAQK,GACvC,MAAOD,GACL3J,KAAKwE,KAAK,QAASxE,KAAKsJ,KAAKC,UAKjCd,EAAA7I,UAAAkK,SAAR,SAAiBC,GACb/J,KAAKwE,KAAK,QAAS,EAAGuF,IAGlBtB,EAAA7I,UAAAoK,SAAR,SAAiBD,GACb/J,KAAKwE,KAAK,QAAS,EAAGuF,IAGlBtB,EAAA7I,UAAAqK,YAAR,SAAoBF,GAChB,IAGIG,GAHCH,EAAII,mBAGLD,EAAWH,EAAIK,OAASL,EAAIM,SAEfrK,KAAKqJ,YAClBrJ,KAAKqJ,UAAYa,EACjBlK,KAAKwE,KAAK,WAAYxE,KAAKqJ,aAI5BZ,EAAA7I,UAAA0K,MAAP,WACItK,KAAKsJ,KAAKgB,SAIlB7B,GAlJI,SAAAA,EAAmBO,GAAnB,IAAAjJ,EACIkJ,EAAAtY,KAAAqP,OAAOA,KAEP,GATID,EAAAsJ,UAAoB,GASnBL,EACD,MAAM,IAAIzY,MAAM,kBAGpBwP,EAAKsJ,UAAY,EACjBtJ,EAAKyE,KAAK,WAAYzE,EAAKsJ,WAE3BtJ,EAAKuJ,KAAO,IAAIiB,eAGZvB,EAAKwB,UACLzK,EAAKuJ,KAAKmB,iBAAkB,GAGhC1K,EAAKuJ,KAAK9I,iBAAiB,OAAQT,EAAKqJ,QAAQnI,KAAKlB,IAAO,GAE5DA,EAAKuJ,KAAKoB,OAAOlK,iBAAiB,WAAYT,EAAKkK,YAAYhJ,KAAKlB,IAAO,GAC3EA,EAAKuJ,KAAK9I,iBAAiB,QAAST,EAAK+J,SAAS7I,KAAKlB,IAAO,GAC9DA,EAAKuJ,KAAK9I,iBAAiB,QAAST,EAAKiK,SAAS/I,KAAKlB,IAAO,GAG9D,IAAIyI,EAAcQ,EAAKR,IAGvB,GAAIQ,EAAK2B,OAASrG,OAAOsG,KAAK5B,EAAK2B,OAAO/Z,OAAQ,EACpB,IAAtB4X,EAAIqC,QAAQ,OACZrC,GAAO,KAGX,IAAImC,EAAQ,GACZ,IAAS7O,KAAOkN,EAAK2B,MACjBA,EAAM3W,KAAK8H,EAAM,IAAMkN,EAAK2B,MAAM7O,IAGtC0M,GAAOmC,EAAMG,KAAK,KAItB,IAAIC,EAAQvC,EAAIwC,MAAM,MACtB,GAAmB,EAAfD,EAAMna,OAAY,CAClB,IAAK,IAAIX,EAAI,EAAGA,EAAI8a,EAAMna,OAAQX,IAAK,CACnC,IAAIgb,EAAOF,EAAM9a,GAAG4a,QAAQ,MACxB/O,EAAMiP,EAAM9a,GAAGib,MAAM,EAAGD,QAEHE,IAArB5C,EAAKQ,OAAOjN,KAIhBiP,EAAM9a,GAAKsY,EAAKQ,OAAOjN,GAAOiP,EAAM9a,GAAGib,MAAMD,EAAO,IAGxDzC,EAAMuC,EAAMD,KAAK,IAkBrB,GAdA/K,EAAKuJ,KAAK8B,KAAKpC,EAAK/E,QAAU,MAAOuE,GAAK,GAG1CzI,EAAKyJ,QAAUR,EAAKQ,UAAW,EAG1BR,EAAKqC,mBAAsC,QAAhBrC,EAAK/E,QAAoC,SAAhB+E,EAAK/E,QAAqC,WAAhB+E,EAAK/E,QACpFlE,EAAKuJ,KAAKgC,iBAAiB,eAAgB,oBAO3CtC,EAAKuC,QACL,IAAK,IAAIzP,KAAOkN,EAAKuC,QACjBxL,EAAKuJ,KAAKgC,iBAAiBxP,EAAKkN,EAAKuC,QAAQzP,I,OAIjDkN,EAAK/W,MAA+B,iBAAf+W,EAAS,MAAoBA,EAAK/W,gBAAgBuZ,WACvExC,EAAK/W,KAAOC,KAAKuZ,UAAUzC,EAAK/W,OAIpC8N,EAAKuJ,KAAKoC,KAAK1C,EAAK/W,MAAQ,M,EA3FvBvB,EAAA+X,YAAAA,G,gcC/Cb,IAEAQ,EAFA0C,EAAAvb,EAAA,YAEAwb,GAAA3C,EAA4B0C,EAAAzC,OAAAC,EAAAyC,EAAA3C,GAgBnB2C,EAAAhM,UAAAqE,OAAP,SAAc3P,EAAcmQ,GAC1B,QAA0B0G,IAAtBnL,KAAK6L,OAAOvX,GACd,MAAM,IAAI/D,MAAM,wBAA0B+D,GAE5C0L,KAAK6L,OAAOvX,GAAQmQ,GAOfmH,EAAAhM,UAAAkM,aAAP,SAAoBxX,UACX0L,KAAK6L,OAAOvX,IAOdsX,EAAAhM,UAAAjP,KAAP,SAAY2D,G,IAAc,IAAA0U,EAAA,GAAA+C,EAAA,EAAAA,EAAAC,UAAApb,OAAAmb,IAAA/C,EAAA+C,EAAA,GAAAC,UAAAD,GACxB,GAAI/L,KAAK6L,OAAOvX,GAAO,CACjB0U,EAAOiD,MAAMrM,UAAUsL,MAAMva,KAAKqb,UAAW,GAEjD,IACE,OAAOhM,KAAK6L,OAAOvX,GAAM4X,MAAM,KAAMlD,GACrC,MAAOW,GACPlO,QAAQ0G,MACN,+BACA,cACA7N,EACA,eAEFmH,QAAQ0G,MAAMwH,EAAGwC,QAGrB,OAAO,MAEXP,GA9CE,SAAAA,IAAA,IAAA7L,EACEkJ,EAAAtY,KAAAqP,OAAOA,K,OAHDD,EAAA8L,OAAsC,G,EALnCnb,EAAAkb,OAAAA,G,iICFb,IAAA1C,GAII5E,OAAA8H,eAAWlD,EAAAtJ,UAAA,gBAAa,C,IAAxB,WACE,OAAOI,KAAKqM,gB,IAEd,SAAyBC,GACvBtM,KAAKqM,eAAiBC,G,gCAgBjBpD,EAAAtJ,UAAA2M,GAAP,SAAUjY,EAAcmQ,GACtB,IAAI+H,EAAqBxM,KAAKyM,QAAQnY,GAQtC,YAPe6W,IAAXqB,EACFxM,KAAKyM,QAAQnY,GAAQ,CAACmQ,IAEK,GAAvB+H,EAAO3B,QAAQpG,IACjB+H,EAAOxY,KAAKyQ,GAGT,IAAIiI,EAAY1M,KAAM1L,EAAMmQ,IAQ9ByE,EAAAtJ,UAAAX,KAAP,SAAY3K,EAAcmQ,GACxB,IAAIkI,EAAO3M,KACP+J,EAAmB/J,KAAKuM,GAAGjY,EAAM,SACnCsY,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA1I,EAAG9T,KAAKgc,EAAMC,EAAMC,EAAMC,EAAMC,EAAMC,EAAMC,EAAMC,EAAMC,GACxDpD,EAAIqD,WAEN,OAAOrD,GAeFb,EAAAtJ,UAAA4E,KAAP,SAAYlQ,EACVsY,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,GAAInN,KAAKqM,eAAgB,OAAOrM,KAEhC,IAAIwM,EAAqBxM,KAAKyM,QAAQnY,GACtC,IAAKkY,EAAQ,OAAOxM,KAGpBwM,EAASA,EAAOtB,MAAM,GAEtB,IAAK,IAAIjb,EAAY,EAAGA,EAAIuc,EAAO5b,OAAQX,IACzC,GAAKuc,EAAOvc,GACZ,IACEuc,EAAOvc,GAAGU,KAAKqP,KAAM4M,EAAMC,EAAMC,EAAMC,EAAMC,EAAMC,EAAMC,EAAMC,GAC/D,MAAOxD,GACPlO,QAAQ4R,KAAK,uBAAwB,cAAe/Y,EAAM,eAC1DmH,QAAQE,IAAIgO,EAAGwC,OAInB,OAAOnM,MAQFkJ,EAAAtJ,UAAAwN,OAAP,SAAc9Y,EAAemQ,GAC3B,GAAInQ,EAAM,CACR,IAIMrE,EAJFuc,EAAqBxM,KAAKyM,QAAQnY,GACtC,IAAKkY,EAAQ,OAAOxM,KAEhByE,GAES,KADPxU,EAAYuc,EAAO3B,QAAQpG,MAEP,IAAlB+H,EAAO5b,cACFoP,KAAKyM,QAAQnY,GAEpBkY,EAAOc,OAAOrd,EAAG,WAId+P,KAAKyM,QAAQnY,QAGtB0L,KAAKyM,QAAU,GAGjB,OAAOzM,MAGXkJ,GApHE,SAAAA,IALQlJ,KAAAqM,gBAA0B,EAG1BrM,KAAAyM,QAAyC,GAbxC/b,EAAAwY,OAAAA,EAsIX,IAAAwD,GAcSA,EAAA9M,UAAAwN,OAAP,WACOpN,KAAKuN,QAEVvN,KAAKuN,MAAMH,OAAOpN,KAAK1L,KAAO0L,KAAKyE,IAEnCzE,KAAKuN,MAAQ,KACbvN,KAAK1L,KAAO,KACZ0L,KAAKyE,GAAK,OAGLiI,EAAA9M,UAAAjP,KAAP,WACOqP,KAAKyE,IAEVzE,KAAKyE,GAAG9T,KACNqP,KAAKuN,MACLvB,UAAU,GACVA,UAAU,GACVA,UAAU,GACVA,UAAU,GACVA,UAAU,GACVA,UAAU,GACVA,UAAU,GACVA,UAAU,KAIPU,EAAA9M,UAAA2M,GAAP,SAAUjY,EAAcmQ,GACtB,OAAOzE,KAAKuN,MAAOhB,GAAGjY,EAAMmQ,IAGhCiI,GApCE,SAAAA,EAAmBa,EAAejZ,EAAcmQ,GAC9CzE,KAAKuN,MAAQA,EACbvN,KAAK1L,KAAOA,EACZ0L,KAAKyE,GAAKA,EAXD/T,EAAAgc,YAAAA,G,oGCtIf,IAAAlO,GAKkBA,EAAAC,OAAd,WACE,MAAO,uCAAuC+O,QAAQ,QAAS,SAAUrd,GACvE,IAAIP,EAAoB,GAAhBiI,KAAK4V,SAAgB,EAE7B,OADa,MAANtd,EAAaP,EAAS,EAAJA,EAAU,GAC1B4G,SAAS,OAIxBgI,GAbF,SAAAA,KAAa9N,EAAA8N,KAAAA,G,yYCAbwF,EAAA5T,EAAA,YAAAM,GACAsT,EAAA5T,EAAA,YAAAM,GACAsT,EAAA5T,EAAA,cAAAM,GACAsT,EAAA5T,EAAA,WAAAM,GACAsT,EAAA5T,EAAA,UAAAM,GACAsT,EAAA5T,EAAA,UAAAM,GACAsT,EAAA5T,EAAA,gBAAAM,GACAsT,EAAA5T,EAAA,iBAAAM,I,2iBCPA,IAGAuY,EAHA0C,EAAAvb,EAAA,YAGAsU,GAAAuE,EAA8B0C,EAAAzC,OAAAC,EAAAzE,EAAAuE,GAE1B3E,OAAA8H,eAAW1H,EAAA9E,UAAA,YAAS,C,IAApB,WACI,MAAO,Y,gCAgFJ8E,EAAA9E,UAAA8N,UAAP,SAAiBzb,GACb,GAAoB,iBAATA,EAKX,IAAK,IAAI6J,KAAO7J,EACa,iBAAdA,EAAK6J,GAKZkE,KAAK2N,aAAa7R,EAAKA,EAAK7J,EAAK6J,KAKjCkE,KAAK4N,IAAI9R,EAAK7J,EAAK6J,IACnBkE,KAAK6N,UAAU/R,IAAO,EACtBkE,KAAK8N,WAAWhS,IAAO,QAjB3BiS,MAAMrS,KAAKsE,KAAKgO,UAAY,sBAAwB/b,IAwBrDyS,EAAA9E,UAAAgO,IAAP,SAAWK,EAAcnF,GAOrB,IALA,IAcQlO,EAdJsT,EAAWlO,KAAKmO,MAAMF,GAGtBrD,EAAOqD,EAAKjD,MAAM,KAClBvX,EAAW,GACNxD,EAAI,EAAGA,EAAI2a,EAAKha,OAAS,EAAGX,IACvB,IAANA,EACAwD,EAAWmX,EAAK3a,GAEhBwD,GAAYuM,KAAKoO,UAAYxD,EAAK3a,GAIxB,EAAd2a,EAAKha,QAAcoP,KAAK6N,UAAUI,IAC9BrT,EAAQyT,SAASzD,EAAKA,EAAKha,OAAS,IACxCoP,KAAKmO,MAAMF,GAAQnF,EAEnB9I,KAAKmO,MAAM1a,GAAUmH,GAASkO,IAK9B9I,KAAKmO,MAAMF,GAAQnF,EACnB9I,KAAKsO,gBAAgBL,EAAMnF,GAC3B9I,KAAKuO,OAAON,GAAQnF,GAQxB9I,KAAKwE,KAAKyJ,EAAO,OAAQnF,EAAOoF,GAChClO,KAAKwE,KAAK,QAASyJ,EAAMnF,EAAOoF,IAG5BxJ,EAAA9E,UAAA4O,SAAR,SAAiBjY,GACb,IAAIzG,EAAI2e,OAAOlY,GACf,OAAQmY,MAAM5e,IAGV4U,EAAA9E,UAAA0O,gBAAR,SAAwBL,EAAcnF,GAClC,GAAIA,aAAiBmD,MAAO,CACxB,IAAK,IAAInQ,KAAOkE,KAAKmO,MACbrS,EAAI6S,WAAWV,EAAOjO,KAAKoO,oBACpBpO,KAAKmO,MAAMrS,UACXkE,KAAK6N,UAAU/R,IAI9B,IADA,IAAI8S,EACK3e,EAAI,EAAGA,EAAI6Y,EAAMlY,OAAQX,IAC9B2e,EAAUX,EAAOjO,KAAKoO,UAAYne,EAAEuG,WACpCwJ,KAAKmO,MAAMS,GAAW9F,EAAM7Y,GAC5B+P,KAAK6N,UAAUe,IAAW,IAM/BlK,EAAA9E,UAAAiP,MAAP,SAAaZ,EAAcnF,GAEvB,IAAK9I,KAAKoF,IAAI6I,GACV,OAAO,EAEX,IAAIC,EAAWlO,KAAKmO,MAAMF,GAU1B,cATOjO,KAAKmO,MAAMF,UACXjO,KAAK6N,UAAUI,UAEfjO,KAAKuO,OAAON,UACZjO,KAAK8N,WAAWG,GAEvBjO,KAAKwE,KAAKyJ,EAAO,OAAQnF,EAAOoF,GAChClO,KAAKwE,KAAK,QAASyJ,EAAMnF,EAAOoF,IAEzB,GAIJxJ,EAAA9E,UAAAkP,OAAP,SAAcb,EAAcnF,EAAYiG,GAGpC,KAAK/O,KAAKoF,IAAI6I,IAAWjO,KAAKmO,MAAMF,aAAiBhC,OACjD,OAAO,EAEX,IAAIlH,EAAM/E,KAAKmO,MAAMF,GAqCrB,OApCInF,aAAiBmD,QACjBnD,EAAQA,EAAMoC,MAAM,SAOZC,IAAR4D,GACAhK,EAAI/Q,KAAK8U,GACTiG,EAAMhK,EAAInU,OAAS,GAEnBmU,EAAIuI,OAAOyB,EAAK,EAAGjG,GAEvB9I,KAAKsO,gBAAgBL,EAAMlJ,GAmB3B/E,KAAKwE,KAAKyJ,EAAO,UAAWnF,EAAOiG,GACnC/O,KAAKwE,KAAK,WAAYyJ,EAAMnF,EAAOiG,IAE5B,GAIJrK,EAAA9E,UAAAoP,OAAP,SAAcf,EAAcc,GACxB,KAAK/O,KAAKoF,IAAI6I,IAAWjO,KAAKmO,MAAMF,aAAiBhC,OACjD,OAAO,EAEX,IAAIlH,EAAM/E,KAAKmO,MAAMF,GACrB,GAAIlJ,EAAInU,OAASme,EAAK,OAAO,EAC7B,IAAIjG,EAAQ/D,EAAIgK,GAYhB,OAXAhK,EAAIuI,OAAOyB,EAAK,GAChB/O,KAAKsO,gBAAgBL,EAAMlJ,GAQ3B/E,KAAKwE,KAAKyJ,EAAO,UAAWnF,EAAOiG,GACnC/O,KAAKwE,KAAK,WAAYyJ,EAAMnF,EAAOiG,IAC5B,GAIJrK,EAAA9E,UAAAqP,YAAP,SAAmBhB,EAAcnF,GAC7B,KAAK9I,KAAKoF,IAAI6I,IAAWjO,KAAKmO,MAAMF,aAAiBhC,OACjD,OAAO,EAEX,IAAIlH,EAAM/E,KAAKmO,MAAMF,GACjBc,EAAMhK,EAAI8F,QAAQ/B,GACtB,IAAa,IAATiG,EACA,OAAO,EAEX,IAAIb,EAAWnJ,EAAIgK,GAiBnB,OAhBAhK,EAAIuI,OAAOyB,EAAK,GAChB/O,KAAKsO,gBAAgBL,EAAMlJ,GAY3B/E,KAAKwE,KAAKyJ,EAAO,UAAWC,EAAUa,GACtC/O,KAAKwE,KAAK,WAAYyJ,EAAMC,EAAUa,IAE/B,GAIJrK,EAAA9E,UAAAsP,KAAP,SAAYjB,EAAckB,EAAgBC,GACtC,KAAKpP,KAAKoF,IAAI6I,IAAWjO,KAAKmO,MAAMF,aAAiBhC,OACjD,OAAO,EAGX,IAEIlH,EAAM/E,KAAKmO,MAAMF,GACrB,GAAIlJ,EAAInU,OAASue,GAAUpK,EAAInU,OAASwe,GAAUD,IAAWC,EAAQ,OAAO,EAC5E,IAAIlB,EAAWnJ,EAAIoK,GAqBnB,OApBApK,EAAIuI,OAAO6B,EAAQ,IACH,IAAZC,IAAeA,EAASrK,EAAInU,QAChCmU,EAAIuI,OAAO8B,EAAQ,EAAGlB,GACtBlO,KAAKsO,gBAAgBL,EAAMlJ,GAe3B/E,KAAKwE,KAAKyJ,EAAO,QAASC,EAAUkB,EAAQD,GAC5CnP,KAAKwE,KAAK,SAAUyJ,EAAMC,EAAUkB,EAAQD,IACrC,GAGJzK,EAAA9E,UAAA+N,aAAP,SAAoBvS,EAAgBU,EAAagN,GAK7C,IAAImF,EAHJjO,KAAK4N,IAAIxS,EAAQ0N,GACjB9I,KAAK6N,UAAUzS,IAAU,EAGzB,IAAI5F,SAAsBsT,EAE1B,GAAa,UAATtT,GAAqBsT,aAAiBmD,MAAO,CAC7CjM,KAAK8N,WAAW1S,IAAU,EAC1B,IAAK,IAAInL,EAAI,EAAGA,EAAI6Y,EAAMlY,OAAQX,IAC9Bge,EAAO7S,EAAS4E,KAAKoO,UAAYne,EAAEuG,WACnCwJ,KAAK4N,IAAIK,EAAMnF,EAAM7Y,IACrB+P,KAAK6N,UAAUI,IAAQ,OAGxB,GAAa,UAATzY,GAAqBsT,aAAiBxE,OAE7C,IAAK,IAAI+K,KAAQvG,EACc,iBAAhBA,EAAMuG,GAEbrP,KAAK2N,aAAavS,EAAS4E,KAAKoO,UAAYiB,EAAMA,EAAMvG,EAAMuG,KAE9DpB,EAAO7S,EAAS4E,KAAKoO,UAAYiB,EACjCrP,KAAK4N,IAAIK,EAAMnF,EAAMuG,IACrBrP,KAAK6N,UAAUI,IAAQ,EACvBjO,KAAK8N,WAAW1S,IAAU,IAWnCsJ,EAAA9E,UAAAwF,IAAP,SAAW6I,GACP,OAAOA,KAAQjO,KAAKmO,OAGjBzJ,EAAA9E,UAAAtO,IAAP,SAAW2c,GACP,OAAIA,KAAQjO,KAAKmO,MACNnO,KAAKmO,MAAMF,GAEX,MAIRvJ,EAAA9E,UAAA0P,UAAP,SAAiBvF,GACb,IAAIwF,EAAOvP,KACX,OAAO,SAAUiO,EAAcpB,EAAWC,EAAWC,GACjD,IAWIyC,EAXCD,EAAKE,WAEAF,EAAKG,YACHH,EAAKI,wBAAwB1D,QAGxB,IAFPsD,EAAKI,aAAa9E,QAAQ0E,KAQhCA,EAAKK,UAASJ,EAAQD,EAAKE,QAAQI,WAEvCN,EAAKE,QAAQjL,KAAKyJ,EAAO,IAAMlE,EAAK8C,EAAMC,EAAMC,GAChDwC,EAAKE,QAAQjL,KAAK,KAAOuF,EAAKkE,EAAMpB,EAAMC,EAAMC,GAE5CwC,EAAKK,SAASL,EAAKE,QAAQK,eAAeN,OAK/C9K,EAAA9E,UAAAmQ,QAAP,WACQ/P,KAAKgQ,aACThQ,KAAKgQ,YAAa,EAClBhQ,KAAKwE,KAAK,WACVxE,KAAKoN,WAEb1I,GAxWI,SAAAA,EAAmBzS,EAAWge,GAA9B,IAAAlQ,EACIkJ,EAAAtY,KAAAqP,OAAOA,KAmBP,GArDID,EAAAqO,UAAoB,IAWrBrO,EAAA8N,UAAwC,GACxC9N,EAAA+N,WAAyC,GAezC/N,EAAA/B,KAAY,KAEZ+B,EAAAmQ,aAAuB,EACtBnQ,EAAAoQ,qBAAmD,GAMvDpQ,EAAKrK,OAASzD,EACdge,EAAUA,GAAW,GAMrBlQ,EAAKiQ,YAAa,EAClBjQ,EAAKqQ,MAAQ,GACbrQ,EAAKsQ,MAAQ,GACbtQ,EAAKoO,MAAQ,GAEbpO,EAAKwO,OAAS,GAKV0B,EAAQK,oBAAqB,CAC7BvQ,EAAKoQ,qBAAuB,GAC5B,IAAK,IAAIlgB,EAAI,EAAGA,EAAIggB,EAAQK,oBAAoB1f,OAAQX,IACpD8P,EAAKoQ,qBAAqBF,EAAQK,oBAAoBrgB,KAAM,E,OAIpE8P,EAAK2N,UAAUzb,GAYf8N,EAAK6P,SAAU,E,EAhFVlf,EAAAgU,SAAAA,G,kHCHb,IAAAxQ,GAQkBA,EAAA0R,mBAAd,SAAiC0G,GAC7B,IAAIiE,EAAe1Y,KAAKC,GAAK,IAC7B,OAAOwU,EAAIkE,iBAAiBD,EAAMA,EAAMA,IAG9Brc,EAAAC,mBAAd,SAAiCmY,GAC7B,IAAIiE,EAAe,IAAM1Y,KAAKC,GAC9B,OAAOwU,EAAIkE,iBAAiBD,EAAMA,EAAMA,IAG9Brc,EAAA6T,eAAd,SAA6BuE,GACzB,MAAO,CAACA,EAAI3X,EAAG2X,EAAI1X,EAAG0X,EAAIzX,IAKlCX,GArBI,SAAAA,KAHSxD,EAAAwD,MAAAA,G,0bCKb,IAAA+U,EAAA9R,GAAA8R,EAAgCpS,QAAQoD,cAARkP,EAAAhS,EAAA8R,GAM5B3E,OAAA8H,eAAWjV,EAAAyI,UAAA,OAAI,C,IAAf,WACI,OAAOI,KAAKpJ,OAAO2P,M,IAEvB,SAAgB+F,GACZtM,KAAKpJ,OAAO2P,KAAO+F,G,gCAGvBhI,OAAA8H,eAAWjV,EAAAyI,UAAA,MAAG,C,IAAd,WACI,OAAOI,KAAKpJ,OAAO4P,K,IAEvB,SAAe8F,GACXtM,KAAKpJ,OAAO4P,IAAM8F,G,gCAGtBhI,OAAA8H,eAAWjV,EAAAyI,UAAA,UAAO,C,IAAlB,WACI,OAAOI,KAAKpJ,OAAO6P,S,IAEvB,SAAmB6F,GACftM,KAAKpJ,OAAO6P,QAAU6F,G,gCAI1BhI,OAAA8H,eAAWjV,EAAAyI,UAAA,YAAS,C,IAApB,WACI,OAAII,KAAKpJ,OAAO2P,OAAS1P,QAAQ0D,OAAOkW,qBACpCzQ,KAAK0Q,WAAa1Q,KAAKpJ,OAAQ+Z,WAAc3Q,KAAKU,OAAOkQ,YAAYC,iBAAmB7Q,KAAKpJ,OAAOyP,SAASzD,MACtG5C,KAAK0Q,YAEL,G,IAGf,SAAqBpE,GACjBtM,KAAK0Q,WAAapE,EACdtM,KAAKpJ,OAAO2P,OAAS1P,QAAQ0D,OAAOkW,sBACpCzQ,KAAKpJ,OAAO+Z,WAAarE,EAAMtM,KAAKU,OAAOkQ,YAAYC,iBAAmB7Q,KAAKpJ,OAAOyP,SAASzD,MAC/F5C,KAAKpJ,OAAOka,WAAaxE,EAAMtM,KAAKU,OAAOkQ,YAAYC,iBAAmB7Q,KAAKpJ,OAAOyP,SAASzD,MAC/F5C,KAAKpJ,OAAOma,SAAWzE,EAAMtM,KAAKU,OAAOkQ,YAAYI,kBAAoBhR,KAAKpJ,OAAOyP,SAASY,OAC9FjH,KAAKpJ,OAAOqa,aAAe3E,EAAMtM,KAAKU,OAAOkQ,YAAYI,kBAAoBhR,KAAKpJ,OAAOyP,SAASY,S,gCAK1G3C,OAAA8H,eAAWjV,EAAAyI,UAAA,aAAU,C,IAArB,WAKI,OAJyB,OAArBI,KAAKkR,cACLlR,KAAKkR,YAAc,IAAIra,QAAQiK,OAAO,EAAG,EAAG,EAAG,IAEnDd,KAAKkR,YAAYnL,SAAS/F,KAAKU,OAAOG,YAC/Bb,KAAKkR,a,IAGhB,SAAsBpI,GAClB9I,KAAKkR,YAAcpI,EACf9I,KAAKU,OAAOwF,cAAc,KAAOlG,KAAKpJ,QAAUkS,GAChD9I,KAAKU,OAAOG,WAAWkF,SAAS+C,I,gCA0BjC3R,EAAAyI,UAAAuR,aAAP,SAAoBpP,GACZ/B,KAAKoR,UAAYrP,KACrB/B,KAAKoR,QAAUrP,GAEX/B,KAAKpJ,OAAOyP,SAAWrG,KAAKqR,gBAAgBC,SAE5CtR,KAAKqR,gBAAkBrR,KAAKpJ,OAAOyP,SAASiL,QAC5CtR,KAAKpJ,OAAOyP,SAAW,IAAIxP,QAAQyP,SAAS,EAAG,EAAG,EAAG,MAKtDnP,EAAAyI,UAAAa,OAAP,SAAc9M,GACV,IAKY4d,EACAC,EANRxR,KAAKpJ,QAAUoJ,KAAKK,UAChBL,KAAKK,QAAQuC,QAAU5C,KAAKyR,QAAUzR,KAAKK,QAAQ4G,SAAWjH,KAAK0R,UACnE1R,KAAKyR,OAASzR,KAAKK,QAAQuC,MAC3B5C,KAAK0R,QAAU1R,KAAKK,QAAQ4G,OAExBsK,EAAIvR,KAAKU,OAAOkQ,YAAYC,iBAC5BW,EAAIxR,KAAKU,OAAOkQ,YAAYI,kBAa5BhR,KAAKpJ,OAAO2P,OAAS1P,QAAQ0D,OAAOkW,sBACpCzQ,KAAKpJ,OAAO+Z,WAAa3Q,KAAK0Q,WAAaa,EAAIvR,KAAKpJ,OAAOyP,SAASzD,MACpE5C,KAAKpJ,OAAOka,WAAa9Q,KAAK0Q,WAAaa,EAAIvR,KAAKpJ,OAAOyP,SAASzD,MACpE5C,KAAKpJ,OAAOma,SAAW/Q,KAAK0Q,WAAac,EAAIxR,KAAKpJ,OAAOyP,SAASY,OAClEjH,KAAKpJ,OAAOqa,aAAejR,KAAK0Q,WAAac,EAAIxR,KAAKpJ,OAAOyP,SAASY,WAY1F9P,GAlEI,SAAAA,EAAmBP,EAA8BF,EAAsBC,GAAvE,IAAAoJ,EACIkJ,EAAAtY,KAAAqP,KAAMpJ,EAAOtC,KAAMoC,IAAMsJ,K,OAxCrBD,EAAA2Q,WAAqB,EAmBrB3Q,EAAAmR,YAAwC,KAoCxCnR,EAAAsR,gBAAoC,IAAIxa,QAAQyP,SAAS,EAAG,EAAG,EAAG,GAClEvG,EAAAqR,SAAmB,GAfvBrR,EAAKnJ,OAASA,GACPtC,MAAQ,UACfyL,EAAKM,QAAU1J,EACfoJ,EAAK0R,OAAS9a,EAAOiM,MACrB7C,EAAK2R,QAAU/a,EAAOsQ,OACtBlH,EAAKrL,SAASqR,SAASnP,EAAOlC,UAC9BqL,EAAK3L,SAAS2R,SAASnP,EAAOxC,UAC9BwC,EAAOlD,OAASqM,EAChBnJ,EAAOlC,SAAWmC,QAAQE,QAAQY,OAClCf,EAAOxC,SAAWyC,QAAQE,QAAQY,OAClCf,EAAO+a,OAAOC,Q,EA9ETlhB,EAAAyG,WAAAA,G,ybCLb,IAAA8R,EAAAzR,GAAAyR,EAA+BpS,QAAQoD,cAARkP,EAAA3R,EAAAyR,GAK3B3E,OAAA8H,eAAW5U,EAAAoI,UAAA,OAAI,C,IAAf,WACI,OAAOI,KAAK1I,MAAMua,a,gCAGtBvN,OAAA8H,eAAW5U,EAAAoI,UAAA,YAAS,C,IAApB,WACI,OAAOI,KAAK1I,MAAM6N,W,IAEtB,SAAqB2D,GACjB9I,KAAK1I,MAAM6N,UAAY2D,G,gCAG3BxE,OAAA8H,eAAW5U,EAAAoI,UAAA,UAAO,C,IAAlB,WACI,OAAOI,KAAK1I,MAAM+N,S,IAEtB,SAAmByD,GACf9I,KAAK1I,MAAM+N,QAAUyD,G,gCAGzBxE,OAAA8H,eAAW5U,EAAAoI,UAAA,WAAQ,C,IAAnB,WACI,OAAOI,KAAK1I,MAAMkO,U,IAEtB,SAAoBsD,GAChB9I,KAAK1I,MAAMkO,SAAWsD,G,gCAG1BxE,OAAA8H,eAAW5U,EAAAoI,UAAA,QAAK,C,IAAhB,WACI,OAAII,KAAK1I,iBAAiBT,QAAQe,UACvBoI,KAAK1I,MAAMmO,MAEX,G,IAGf,SAAiBqD,GACT9I,KAAK1I,iBAAiBT,QAAQe,YAC9BoI,KAAK1I,MAAMmO,MAAQqD,I,gCAI3BxE,OAAA8H,eAAW5U,EAAAoI,UAAA,WAAQ,C,IAAnB,WACI,OAAII,KAAK1I,iBAAiBT,QAAQe,UACvBoI,KAAK1I,MAAMoO,SAEX,G,IAGf,SAAoBoD,GACZ9I,KAAK1I,iBAAiBT,QAAQe,YAC9BoI,KAAK1I,MAAMoO,SAAWoD,I,gCAwBlCtR,GAnBI,SAAAA,EAAmBF,EAAsBZ,GAAzC,IAAAqJ,EACIkJ,EAAAtY,KAAAqP,KAAM1I,EAAMhD,KAAMoC,IAAMsJ,K,OACxB1I,EAAMhD,MAAQ,SAEdyL,EAAKzI,MAAQA,EACbyI,EAAKrL,SAASqR,SAASzO,EAAMwa,uBAE7Bxa,EAAM5D,OAASqM,EAhEVrP,EAAA8G,UAAAA,G,yYCAb,IAAAua,EAAA3hB,EAAA,UACAW,EAAAX,EAAA,SAEA4T,EAAA5T,EAAA,WAAAM,GAGA,IAMIoP,EALAkS,GAAsB,EACtBC,GAAuB,EAO3B1R,OAAO5M,OAAS,IAAI5C,EAAA6a,OAOpB,IAuCQ9Z,EAvCQyO,OAAO2R,SAASC,SAASC,UAAU,GAuC3CtgB,EAAYyO,OAAO2R,SAASC,SAASC,UAAU,GACnDL,EAAAlgB,OAAOC,UAAYA,EAEnBH,QAAQ0gB,cAAcvgB,EAAW,UAChCC,KAAK,SAAAC,GACF,IAAIC,EAAKC,KAAKC,MAAMH,GAOpB,GANA+f,EAAAlgB,OAAOwJ,WAAapJ,EACpB8f,EAAA9gB,cAAcoK,WAAapJ,EAG3B0B,OAAOhD,KAAK,aAETsB,EAAK8J,OACJ,IAAI,IAAID,KAAO7J,EAAK8J,OACa,UAA1B9J,EAAK8J,OAAOD,GAAKtG,OAChBuc,EAAAlgB,OAAO0N,cAAgBzD,EACvBiW,EAAAlgB,OAAO2N,UAAYvN,EAAK8J,OAAOD,GAAKxH,MAIpB,KAAzByd,EAAAlgB,OAAO0N,cACN5L,OAAOhD,KAAK,aAEZqhB,GAAa,IAGpBM,MACG,SAAAnQ,GACI1G,QAAQ0G,MAAMA,KAKtBxO,OAAOsQ,OAAO,YAAa,WAEvBtS,QAAQ0gB,cAAcvgB,EAAW,UAC5BC,KAAK,SAAAC,GACF,IAAIC,EAAKC,KAAKC,MAAMH,GAChBugB,EAAoBtgB,EAAKugB,KAC7BT,EAAAlgB,OAAO+D,WAAa3D,EAAK+Q,OAAOuP,GAChCR,EAAAlgB,OAAO0J,WAAagX,EAEpBN,GAAc,IAEjBK,MACG,SAAAnQ,GACI1G,QAAQ0G,MAAMA,OAM9BxO,OAAOsQ,OAAO,YAAa,WAEvBtS,QAAQC,aAAaE,EAAUigB,EAAAlgB,OAAO0N,cAAc,SAC/CxN,KAAK,SAAUC,GACZ,IAAIC,EAAOC,KAAKC,MAAMH,GAItBygB,EAkChB,SAAqBlc,GACjB,IAAImc,EAAY5O,SAAS6O,cAAc,OACvCD,EAAKpP,UAAY/M,EACjB,IAAIqc,EAASF,EAAKG,WAAaH,EAAKI,YAEpC,OADAJ,EAAO,KACAE,EAvCgBG,CAFPN,EAAWvgB,KAAKuZ,UAAUxZ,IAM9B6N,EAAQ5N,KAAKC,MAAMsgB,GAAUO,MAC7BjB,EAAAlgB,OAAO4N,UAAYK,EACnBkS,GAAa,IAEhBM,MAAM,SAAUnQ,GACb1G,QAAQE,IAAI,eAAiBwG,OAjF7C,SAASD,IAtBT,IACQvL,EACAsc,EAsBAjB,GAAcC,GAvBdtb,EAA4BmN,SAASC,eAAe,gBACpDkP,EAAWnP,SAASC,eAAe,YACxB,OAAXpN,GAAgC,OAAbsc,GACZ,IAAIlB,EAAApS,KAAKhJ,EAAQsc,GACnBpT,YAAYC,GAAO6C,WAsBxBuQ,WAAWhR,EAAM,KAqHzBA","file":"publish.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","// import { Tools, AjaxRequest, Ajax, GUID } from \"../../../editor/utility\";\r\nimport { Ajax, AjaxRequest, GUID, Observer, Tools, VeryCamera, VeryLight } from \"../lib\";\r\n// import { VeryEngine } from \"../../../engine\";\r\nimport { Config } from \"./config\";\r\n\r\nexport class BabylonLoader {\r\n\r\n\r\n    public static prefix: string = '/assets/';\r\n\r\n    public static assetsData: any = {};\r\n    public static projectData: any = {};\r\n    public static scenesData: any = {};\r\n    public static sceneIndex: number = 0;\r\n\r\n\r\n    public static babylonCacheData: { [key: string]: any } = {};\r\n    public static babylonParsedData: { [key: string]: any } = {};\r\n\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    public static loadFromBabylonAsset() {\r\n\r\n    }\r\n\r\n\r\n    public static loadBabylon(asset: Observer) {\r\n        let assetID: string = asset.get('id');\r\n        let dataBabylon: any = null;\r\n        if (BabylonLoader.babylonCacheData[assetID]) {\r\n            dataBabylon = BabylonLoader.babylonCacheData[assetID];\r\n            BabylonLoader.parseBabylon(assetID, dataBabylon);\r\n            BabylonLoader.assembleBabylon(assetID, dataBabylon);\r\n        } else {\r\n                // 直接返回babylon json格式内容数据\r\n                ossfile.getJsonAsset(Config.projectID,asset.get('id'),asset.get('name'),asset.get('file.hash')).then(response=>{\r\n                    var data=JSON.parse(response);\r\n                    dataBabylon = data;\r\n                    BabylonLoader.babylonCacheData[assetID] = dataBabylon;\r\n                    BabylonLoader.parseBabylon(assetID, dataBabylon);\r\n                    BabylonLoader.assembleBabylon(assetID, dataBabylon);\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    public static assembleBabylon=async(assetID: string, dataBabylon: any) =>{\r\n        if (dataBabylon !== null) {\r\n            console.warn(dataBabylon);\r\n            console.log(dataBabylon.meshes);\r\n            console.log(dataBabylon.materials);\r\n            console.log(dataBabylon.lights);\r\n\r\n            // if (dataBabylon.lights) {\r\n            //     dataBabylon.lights.forEach((element: any) => {\r\n            //         BabylonLoader.loadLight(element, VeryEngine.viewScene);\r\n            //     });\r\n            // }\r\n\r\n            // material assemble\r\n            if (BabylonLoader.assetsData.babylon[assetID]) {\r\n                let mats = BabylonLoader.assetsData.babylon[assetID]['materials'];\r\n                let newMats = [];\r\n                for (let key in mats) {\r\n                    if (mats[key].asset_id && BabylonLoader.assetsData.assets[mats[key].asset_id]) {\r\n                        let newMat = BabylonLoader.assetsData.assets[mats[key].asset_id].data;\r\n                        // 检测texture\r\n                        let textureUrl=\"\";\r\n                        if (newMat.diffuseTexture && newMat.diffuseTexture.texture_id) {\r\n                            let assetID=newMat.diffuseTexture.texture_id;\r\n                            textureUrl=await ossfile.getUrl(Config.projectID,assetID,BabylonLoader.assetsData.assets[assetID].name,BabylonLoader.assetsData.assets[assetID].file.hash)\r\n                            newMat.diffuseTexture.name =textureUrl;\r\n                        }\r\n                        if (newMat.specularTexture && newMat.specularTexture.texture_id) {\r\n                            let assetID=newMat.specularTexture.texture_id;\r\n                            textureUrl=await ossfile.getUrl(Config.projectID,assetID,BabylonLoader.assetsData.assets[assetID].name,BabylonLoader.assetsData.assets[assetID].file.hash)\r\n                            newMat.specularTexture.name =textureUrl;\r\n                        }\r\n                        if (newMat.reflectionTexture && newMat.reflectionTexture.texture_id) {\r\n                            let assetID=newMat.reflectionTexture.texture_id;\r\n                            textureUrl=await ossfile.getUrl(Config.projectID,assetID,BabylonLoader.assetsData.assets[assetID].name,BabylonLoader.assetsData.assets[assetID].file.hash)\r\n                            newMat.reflectionTexture.name =textureUrl;\r\n                        }\r\n                        if (newMat.refractionTexture && newMat.refractionTexture.texture_id) {\r\n                            let assetID=newMat.refractionTexture.texture_id;\r\n                            textureUrl=await ossfile.getUrl(Config.projectID,assetID,BabylonLoader.assetsData.assets[assetID].name,BabylonLoader.assetsData.assets[assetID].file.hash)\r\n                            newMat.refractionTexture.name =textureUrl;\r\n                        }\r\n                        if (newMat.emissiveTexture && newMat.emissiveTexture.texture_id) {\r\n                            let assetID=newMat.emissiveTexture.texture_id;\r\n                            textureUrl=await ossfile.getUrl(Config.projectID,assetID,BabylonLoader.assetsData.assets[assetID].name,BabylonLoader.assetsData.assets[assetID].file.hash)\r\n                            newMat.emissiveTexture.name =textureUrl;\r\n                        }\r\n                        if (newMat.bumpTexture && newMat.bumpTexture.texture_id) {\r\n                            let assetID=newMat.bumpTexture.texture_id;\r\n                            textureUrl=await ossfile.getUrl(Config.projectID,assetID,BabylonLoader.assetsData.assets[assetID].name,BabylonLoader.assetsData.assets[assetID].file.hash)\r\n                            newMat.bumpTexture.name =textureUrl;\r\n                        }\r\n                        if (newMat.opacityTexture && newMat.opacityTexture.texture_id) {\r\n                            let assetID=newMat.opacityTexture.texture_id;\r\n                            textureUrl=await ossfile.getUrl(Config.projectID,assetID,BabylonLoader.assetsData.assets[assetID].name,BabylonLoader.assetsData.assets[assetID].file.hash)\r\n                            newMat.opacityTexture.name =textureUrl;\r\n                        }\r\n                        if (newMat.ambientTexture && newMat.ambientTexture.texture_id) {\r\n                            let assetID=newMat.ambientTexture.texture_id;\r\n                            textureUrl=await ossfile.getUrl(Config.projectID,assetID,BabylonLoader.assetsData.assets[assetID].name,BabylonLoader.assetsData.assets[assetID].file.hash)\r\n                            newMat.ambientTexture.name =textureUrl;\r\n                        }\r\n                        if (newMat.lightmapTexture && newMat.lightmapTexture.texture_id) {\r\n                            let assetID=newMat.lightmapTexture.texture_id;\r\n                            textureUrl=await ossfile.getUrl(Config.projectID,assetID,BabylonLoader.assetsData.assets[assetID].name,BabylonLoader.assetsData.assets[assetID].file.hash)\r\n                            newMat.lightmapTexture.name =textureUrl;\r\n                        }\r\n\r\n                        BabylonLoader.loadMaterial(newMat, VR.BabylonEngine.Scene, '');\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            // geometries assemble\r\n            if (dataBabylon.geometries && dataBabylon.geometries.vertexData) {\r\n                dataBabylon.geometries.vertexData.array.forEach((parsedVertexData: any) => {\r\n                    BabylonLoader.loadGeometry(parsedVertexData, VR.BabylonEngine.Scene, '');\r\n                });\r\n            }\r\n\r\n            // transformNode assemble\r\n            let newTransformNodes: Nullable<BABYLON.TransformNode>[] = [];\r\n            if (dataBabylon.transformNodes) {\r\n                dataBabylon.transformNodes.forEach((parsedTransformNode: any) => {\r\n                    let node = BabylonLoader.loadTransformNode(parsedTransformNode, VR.BabylonEngine.Scene, '');\r\n                    newTransformNodes.push(node);\r\n                });\r\n            }\r\n\r\n            // mesh assemble\r\n            let newMeshes: Nullable<BABYLON.AbstractMesh>[] = [];\r\n            let parentMeshes: Nullable<BABYLON.AbstractMesh>[] = [];\r\n\r\n            let tempMeshDic: { [key: string]: Nullable<BABYLON.AbstractMesh> } = {};\r\n\r\n            let tempMeshID: { [key: string]: string } = {};\r\n\r\n            if (dataBabylon.meshes) {\r\n                dataBabylon.meshes.forEach((element: any) => {\r\n                    // 若当前scene数据中已包含mesh id，则重新创建resource_id\r\n                    if (BabylonLoader.scenesData.entities[element.id]) {\r\n                        let newID = GUID.create();\r\n                        let oldID = element.id;\r\n                        // element['babylon_id'] = oldID;\r\n                        tempMeshID[newID] = oldID;\r\n                        element.id = newID;\r\n                        // 遍历，更改parentID\r\n                        dataBabylon.meshes.forEach((element2: any) => {\r\n                            if (element2.parentId === oldID) {\r\n                                element2.parentId = newID;\r\n                                console.log('change parent id');\r\n                            }\r\n                        });\r\n                    } else {\r\n                        tempMeshID[element.id] = element.id;\r\n                        // element['babylon_id'] = element.id;\r\n                    }\r\n                    // console.error(element);\r\n                });\r\n\r\n                dataBabylon.meshes.forEach((element: any) => {\r\n                    let tempMesh = BabylonLoader.loadMesh(element, VR.BabylonEngine.Scene, '');\r\n                    newMeshes.push(tempMesh);\r\n                    tempMeshDic[element.id] = tempMesh;\r\n                });\r\n            }\r\n\r\n            // parent \r\n            // TODO: 若不为root，则mesh这里也要设定父子关系，parent为null则为当前选中物体\r\n            let parent = null;\r\n            let parentNode: Nullable<BABYLON.Node> = null;\r\n            if (editor.call('selector:type') === 'entity')\r\n                parent = editor.call('selector:items')[0];\r\n\r\n            if (!parent) {\r\n                parent = editor.call('entities:root');\r\n            } else {\r\n                // console.warn(parent);\r\n                // console.warn(parent.node);\r\n                if (parent.node) {\r\n                    parentNode = parent.node;\r\n                }\r\n            }\r\n\r\n\r\n            var entities: any[] = [];\r\n            var data: any[] = [];\r\n\r\n            // TODO: 还没有考虑有transformNode数据的情况\r\n            for (let index = 0, cache = newTransformNodes.length; index < cache; index++) {\r\n                var transformNode = newTransformNodes[index];\r\n                if (transformNode && transformNode._waitingParentId) {\r\n                    transformNode.parent = VR.BabylonEngine.Scene.getLastEntryByID(transformNode._waitingParentId);\r\n                    transformNode._waitingParentId = null;\r\n                }\r\n            }\r\n\r\n            for (let i = 0, len = newMeshes.length; i < len; i++) {\r\n                if (newMeshes[i] !== null) {\r\n                    if (newMeshes[i]!._waitingParentId) {\r\n                        if (tempMeshDic[newMeshes[i]!._waitingParentId!]) {\r\n                            newMeshes[i]!.parent = tempMeshDic[newMeshes[i]!._waitingParentId!];\r\n                        } else {\r\n                            newMeshes[i]!.parent = parentNode;\r\n                            parentMeshes.push(newMeshes[i]);\r\n                        }\r\n                    } else {\r\n                        newMeshes[i]!.parent = parentNode;\r\n                        parentMeshes.push(newMeshes[i]);\r\n                    }\r\n                    newMeshes[i]!._waitingParentId = null;\r\n                    // console.warn(newMeshes[i]);\r\n                }\r\n            }\r\n\r\n\r\n\r\n            for (let i = 0; i < parentMeshes.length; i++) {\r\n                BabylonLoader.meshParseRecursion(parentMeshes[i], assetID, tempMeshID, entities, data);\r\n            }\r\n\r\n            editor.call('selector:history', false);\r\n            editor.call('selector:set', 'entity', [editor.call('entities:get', parentMeshes[0]?.id)]);\r\n            editor.once('selector:change', function () {\r\n                editor.call('selector:history', true);\r\n            });\r\n\r\n            editor.call('make:scene:dirty');\r\n\r\n\r\n            // editor.emit('entities:load', true);\r\n\r\n\r\n            // TODO\r\n            // VeryEngine.viewScene.onPointerObservable.add(pointerInfo => {\r\n            //     switch (pointerInfo.type) {\r\n            //         case BABYLON.PointerEventTypes.POINTERDOWN:\r\n            //             // console.log('down');\r\n            //             if (pointerInfo!.pickInfo!.pickedMesh != null) {\r\n            //                 editor.call('pick', pointerInfo!.pickInfo!.pickedMesh);\r\n            //             } else {\r\n            //                 editor.call('pick', null);\r\n            //             }\r\n            //             // console.log(pointerInfo!.pickInfo!.pickedMesh);\r\n            //             break;\r\n            //     }\r\n            // });\r\n            // });\r\n        }\r\n    }\r\n\r\n    public static parseBabylon(assetID: string, babylonData: any): void {\r\n        if (babylonData) {\r\n            let parsedData: any = {};\r\n            // 材质\r\n            if (babylonData.materials) {\r\n                parsedData.materials = {};\r\n                babylonData.materials.forEach((material: any) => {\r\n                    parsedData.materials[material.id] = material;\r\n                });\r\n            }\r\n            // geometries\r\n            if (babylonData.geometries && babylonData.geometries.vertexData) {\r\n                parsedData.geometries = {};\r\n                babylonData.geometries.vertexData.forEach((geometry: any) => {\r\n                    parsedData.geometries[geometry.id] = geometry;\r\n                });\r\n            }\r\n            // mesh\r\n            if (babylonData.meshes) {\r\n                parsedData.meshes = {};\r\n                babylonData.meshes.forEach((mesh: any) => {\r\n                    parsedData.meshes[mesh.id] = mesh;\r\n                });\r\n            }\r\n            // transformNodes\r\n            if (babylonData.transformNodes) {\r\n                parsedData.transformNodes = {};\r\n                babylonData.transformNodes.forEach((transformNode: any) => {\r\n                    parsedData.transformNodes[transformNode.id] = transformNode;\r\n                });\r\n            }\r\n            BabylonLoader.babylonParsedData[assetID] = parsedData;\r\n        }\r\n    }\r\n\r\n    public static hasBabylobData(assetID: string): boolean {\r\n        return assetID in BabylonLoader.babylonCacheData;\r\n    }\r\n\r\n    public static getBabylonData(assetID: string): any {\r\n        if (assetID in BabylonLoader.babylonCacheData) {\r\n            return BabylonLoader.babylonCacheData[assetID];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    public static hasParsedBabylonData(assetID: string): boolean {\r\n        return assetID in BabylonLoader.babylonParsedData;\r\n    }\r\n\r\n    public static getParsedBabylonData(assetID: string): any {\r\n        if (assetID in BabylonLoader.babylonParsedData) {\r\n            return BabylonLoader.babylonParsedData[assetID];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n\r\n    private static meshParseRecursion(mesh: Nullable<BABYLON.AbstractMesh>, assetID: string, tempMeshID: any, entities: any[], data: any[]): void {\r\n        if (mesh) {\r\n\r\n            let parentID: string = '';\r\n            if (mesh.parent !== null) {\r\n                parentID = mesh.parent!.id;\r\n            } else {\r\n                let root = editor.call('entities:root');\r\n                parentID = root.get('resource_id');\r\n                // root.insert('children', mesh.id);\r\n                // BabylonLoader.updateSceneData(parentID, root._data2);\r\n                // editor.call('make:scene:dirty');\r\n            }\r\n\r\n            var childs = mesh.getChildren();\r\n            var myChildren = [];\r\n            for (let k = 0; k < childs.length; k++) {\r\n                myChildren.push(childs[k].id);\r\n            }\r\n\r\n            let eulerAngle = Tools.radianToEulerAngle(mesh.rotation);\r\n\r\n            let entityData = {\r\n                name: mesh.name,\r\n                resource_id: mesh.id,\r\n                babylon_id: tempMeshID[mesh.id],  // 原始的mesh id\r\n                asset_id: assetID,  // 对应babylon资源id\r\n                parent: parentID,\r\n                position: [mesh.position.x, mesh.position.y, mesh.position.z],\r\n                rotation: [eulerAngle.x, eulerAngle.y, eulerAngle.z],\r\n                scale: [mesh.scaling.x, mesh.scaling.y, mesh.scaling.z],\r\n                children: myChildren,\r\n                enabled: mesh.isEnabled(),\r\n                checkCollisions: mesh.checkCollisions,\r\n                pickable: mesh.isPickable,\r\n                isVisible: mesh.isVisible,\r\n                tags: [],\r\n                type: 'mesh'\r\n            }\r\n\r\n            let entity = editor.call('entities:new', entityData);\r\n            entities.push(entity);\r\n            data.push(entity.origin);\r\n\r\n            for (let k = 0; k < childs.length; k++) {\r\n                BabylonLoader.meshParseRecursion(<BABYLON.AbstractMesh>childs[k], assetID, tempMeshID, entities, data);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    public static addSceneData(resource_id: string, data: any): void {\r\n        BabylonLoader.scenesData.entities[resource_id] = data;\r\n        BabylonLoader.scenesData['modified'] = BabylonLoader.createdAtTime();\r\n    }\r\n\r\n    public static updateSceneData(resource_id: string, data: any): void {\r\n        BabylonLoader.scenesData.entities[resource_id] = data;\r\n        BabylonLoader.scenesData['modified'] = BabylonLoader.createdAtTime();\r\n    }\r\n\r\n    public static createdAtTime(): string {\r\n        var now = new Date();\r\n        var Y = now.getFullYear();\r\n        var m = BabylonLoader.getRealTime(now.getMonth() + 1);\r\n        var d = BabylonLoader.getRealTime(now.getDate());\r\n        var H = BabylonLoader.getRealTime(now.getHours());\r\n        var i = BabylonLoader.getRealTime(now.getMinutes());\r\n        // var s = getRealTime(now.getSeconds());\r\n        return Y + \"-\" + m + \"-\" + d + \" \" + H + \":\" + i;\r\n    }\r\n\r\n    private static getRealTime(str: number): string {\r\n        if (str < 10) {\r\n            return \"0\" + str;\r\n        }\r\n        return str.toString();\r\n    }\r\n\r\n    // hierarchy创建灯光，直接创建wraper\r\n\r\n    public static createCameraWraper(name: string, scene: BABYLON.Scene, canvas: HTMLCanvasElement): VeryCamera {\r\n        var camera = new BABYLON.UniversalCamera(name, new BABYLON.Vector3(0, 100, -200), scene);\r\n        // camera.mode = BABYLON.Camera.ORTHOGRAPHIC_CAMERA;\r\n        // camera.minZ = -800;\r\n        camera.maxZ = 20000;\r\n        camera.attachControl(canvas, true);\r\n        let cameraWraper = new VeryCamera(camera, scene, canvas);\r\n\r\n        cameraWraper.orthoSize = 0.5;\r\n\r\n        return cameraWraper;\r\n    }\r\n\r\n\r\n    public static createLightWraper(type: string, name: string, scene: BABYLON.Scene): VeryLight {\r\n        let light = BabylonLoader.createLight(type, name, scene);\r\n\r\n        let lightWraper = new VeryLight(light, scene);\r\n\r\n        return lightWraper;\r\n    }\r\n\r\n\r\n\r\n    public static createLight(type: string, name: string, scene: BABYLON.Scene): BABYLON.Light {\r\n        let light: BABYLON.Light;\r\n\r\n        type = type.toLowerCase();\r\n        if (type === 'point') {\r\n            light = new BABYLON.PointLight(name, BABYLON.Vector3.Zero(), scene);\r\n        } else if (type === 'spot') {\r\n            light = new BABYLON.SpotLight(name, BABYLON.Vector3.Zero(), new BABYLON.Vector3(0, -1, 0), Math.PI * 0.75, 8, scene);\r\n        } else if (type === 'hemispheric') {\r\n            light = new BABYLON.HemisphericLight(name, BABYLON.Vector3.Up(), scene);\r\n        } else {\r\n            light = new BABYLON.DirectionalLight(name, BABYLON.Vector3.Forward(), scene);\r\n        }\r\n\r\n        return light;\r\n    }\r\n\r\n\r\n    public static loadLight(parsedLight: any, scene: BABYLON.Scene): Nullable<BABYLON.Light> {\r\n        // Light\r\n        if (parsedLight !== undefined && parsedLight !== null) {\r\n            var light = BABYLON.Light.Parse(parsedLight, scene);\r\n            return light;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static loadReflectionProbe(parsedReflectionProbe: any, scene: BABYLON.Scene, rootUrl: string): Nullable<BABYLON.ReflectionProbe> {\r\n        // ReflectionProbe\r\n        if (parsedReflectionProbe !== undefined && parsedReflectionProbe !== null) {\r\n            var reflectionProbe = BABYLON.ReflectionProbe.Parse(parsedReflectionProbe, scene, rootUrl);\r\n            return reflectionProbe;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static loadAnimation(parsedAnimation: any): Nullable<BABYLON.Animation[]> {\r\n        // Animation\r\n        if (parsedAnimation !== undefined && parsedAnimation !== null) {\r\n            const internalClass = BABYLON._TypeStore.GetClass(\"BABYLON.Animation\");\r\n            if (internalClass) {\r\n                let animation = internalClass.Parse(parsedAnimation);\r\n                return animation;\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static loadMaterial(parsedMaterial: any, scene: BABYLON.Scene, rootUrl: string): Nullable<BABYLON.Material> {\r\n        // Material\r\n        if (parsedMaterial !== undefined && parsedMaterial !== null) {\r\n            var mat = BABYLON.Material.Parse(parsedMaterial, scene, rootUrl);\r\n            return mat;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static loadMultiMaterial(parsedMultiMaterial: any, scene: BABYLON.Scene): Nullable<BABYLON.MultiMaterial> {\r\n        // MultiMaterial\r\n        if (parsedMultiMaterial !== undefined && parsedMultiMaterial !== null) {\r\n            var mmat = BABYLON.MultiMaterial.ParseMultiMaterial(parsedMultiMaterial, scene);\r\n            return mmat;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static loadMorphTargetManager(managerData: any, scene: BABYLON.Scene): Nullable<BABYLON.MorphTargetManager> {\r\n        // MorphTargetManager\r\n        if (managerData !== undefined && managerData !== null) {\r\n            var morphTarget = BABYLON.MorphTargetManager.Parse(managerData, scene);\r\n            return morphTarget;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static loadSkeleton(parsedSkeleton: any, scene: BABYLON.Scene): Nullable<BABYLON.Skeleton> {\r\n        // Skeleton\r\n        if (parsedSkeleton !== undefined && parsedSkeleton !== null) {\r\n            var skeleton = BABYLON.Skeleton.Parse(parsedSkeleton, scene);\r\n            return skeleton;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static loadGeometry(vertexData: any, scene: BABYLON.Scene, rootUrl: string): Nullable<BABYLON.Geometry> {\r\n        // Geometry\r\n        if (vertexData !== undefined && vertexData !== null) {\r\n            var geometry = BABYLON.Geometry.Parse(vertexData, scene, rootUrl);\r\n            return geometry;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static loadTransformNode(parsedTransformNode: any, scene: BABYLON.Scene, rootUrl: string): Nullable<BABYLON.TransformNode> {\r\n        // TransformNode\r\n        if (parsedTransformNode !== undefined && parsedTransformNode !== null) {\r\n            var node = BABYLON.TransformNode.Parse(parsedTransformNode, scene, rootUrl);\r\n            return node;\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    public static loadMesh(parsedMesh: any, scene: BABYLON.Scene, rootUrl: string): Nullable<BABYLON.AbstractMesh> {\r\n        // Mesh\r\n        if (parsedMesh !== undefined && parsedMesh !== null) {\r\n            var mesh = <BABYLON.AbstractMesh>BABYLON.Mesh.Parse(parsedMesh, scene, rootUrl);\r\n            return mesh;\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    public static loadCamera(parsedCamera: any, scene: BABYLON.Scene): Nullable<BABYLON.Camera> {\r\n        // Camera\r\n        if (parsedCamera !== undefined && parsedCamera !== null) {\r\n            var camera = BABYLON.Camera.Parse(parsedCamera, scene);\r\n            return camera;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static loadAnimationGroup(parsedAnimationGroup: any, scene: BABYLON.Scene): Nullable<BABYLON.AnimationGroup> {\r\n        // AnimationGroup\r\n        if (parsedAnimationGroup !== undefined && parsedAnimationGroup !== null) {\r\n            var animationGroup = BABYLON.AnimationGroup.Parse(parsedAnimationGroup, scene);\r\n            return animationGroup;\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    public static setBabylonParent(scene: BABYLON.Scene): void {\r\n        let index, cache = 0;\r\n        // Browsing all the graph to connect the dots\r\n        for (let index = 0, cache = scene.cameras.length; index < cache; index++) {\r\n            var camera = scene.cameras[index];\r\n            if (camera._waitingParentId) {\r\n                camera.parent = scene.getLastEntryByID(camera._waitingParentId);\r\n                camera._waitingParentId = null;\r\n            }\r\n        }\r\n\r\n        for (index = 0, cache = scene.lights.length; index < cache; index++) {\r\n            let light = scene.lights[index];\r\n            if (light && light._waitingParentId) {\r\n                light.parent = scene.getLastEntryByID(light._waitingParentId);\r\n                light._waitingParentId = null;\r\n            }\r\n        }\r\n\r\n        //加载完所有资源以后，设立父子关系，加入在自己的引擎中，这些关系有scene数据确立，可以取消此处的操作\r\n        // Connect parents & children and parse actions\r\n        for (index = 0, cache = scene.transformNodes.length; index < cache; index++) {\r\n            var transformNode = scene.transformNodes[index];\r\n            if (transformNode._waitingParentId) {\r\n                transformNode.parent = scene.getLastEntryByID(transformNode._waitingParentId);\r\n                transformNode._waitingParentId = null;\r\n            }\r\n        }\r\n        for (index = 0, cache = scene.meshes.length; index < cache; index++) {\r\n            var mesh = scene.meshes[index];\r\n            if (mesh._waitingParentId) {\r\n                mesh.parent = scene.getLastEntryByID(mesh._waitingParentId);\r\n                mesh._waitingParentId = null;\r\n            }\r\n        }\r\n\r\n        // freeze world matrix application\r\n        // 此部分为babylon隐藏方法\r\n        // for (index = 0, cache = scene.meshes.length; index < cache; index++) {\r\n        //     var currentMesh = scene.meshes[index];\r\n        //     if (currentMesh._waitingFreezeWorldMatrix) {\r\n        //         currentMesh.freezeWorldMatrix();\r\n        //         currentMesh._waitingFreezeWorldMatrix = null;\r\n        //     } else {\r\n        //         currentMesh.computeWorldMatrix(true);\r\n        //     }\r\n        // }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n","import { VeryCamera } from \"../lib\";\r\n\r\nexport class Config {\r\n\r\n    public static prefix: string = '/assets/';\r\n\r\n\r\n    public static projectID: string = '';\r\n    public static projectName: string = '';\r\n    public static projectData: any = {};\r\n\r\n    public static userID: string = '';\r\n    public static username: string = '';\r\n\r\n    public static assetsData: any = {};\r\n\r\n    public static scenesData: any = {};\r\n    public static sceneIndex: number = 0;\r\n    public static sceneName: string = '';\r\n\r\n    public static tableAssetsID: string = '';\r\n    public static tableName: string = '';\r\n    public static tableData: any = null;\r\n\r\n\r\n    public static cameras: VeryCamera[] = [];\r\n\r\n\r\n    public constructor() {\r\n\r\n    }\r\n\r\n\r\n    public static addCamera(camera: VeryCamera): void {\r\n        Config.cameras.push(camera);\r\n    }\r\n\r\n\r\n}","///// <reference path=\"./dts/babylon.d.ts\"/>\r\n\r\nimport { Config } from \"./config\";\r\nimport { Loader } from \"./loader\";\r\n\r\n// import { VE_Objects, VE_Manager } from \"../veryengine/veryEngine\";\r\n\r\n// import { BabylonEngine, Time } from \"../veryengine/babylon\";\r\n\r\nexport class Game {\r\n    private _canvas: HTMLCanvasElement;\r\n    private _fps: HTMLElement;\r\n    private _table!: HTMLElement;\r\n    private _showFps: boolean = true;\r\n    private _engine!: BABYLON.Engine;\r\n    private _scene!: BABYLON.Scene;\r\n    // private _camera!: BABYLON.FreeCamera;\r\n\r\n    constructor(canvasElement: HTMLCanvasElement, fps: HTMLElement) {\r\n        new Loader();\r\n        this._canvas = canvasElement;\r\n        VR.BabylonEngine.Canvas = this._canvas;\r\n        this._fps = fps;\r\n        // this._engine = new BABYLON.Engine(this._canvas, true);\r\n        this._table = document.getElementById(\"VeryTable\")!;\r\n    }\r\n\r\n    /**\r\n     * 创建场景，并且启动\r\n     */\r\n    createScene(datas: any): Game {\r\n\r\n        // 假设有运行中的engine，先停止，重新初始化\r\n        if (this._engine) {\r\n            // TODO: 对象中相关数据dispose\r\n            VR.VE_Manager.dispose();\r\n            // console.log(VE_Manager.projects.projects);\r\n            this._engine.dispose();\r\n        }\r\n        this._engine = new BABYLON.Engine(this._canvas, true);\r\n        VR.BabylonEngine.Engine = this._engine;\r\n        // Resize\r\n        let engine = this._engine;\r\n        window.addEventListener(\"resize\", function () {\r\n            engine.resize();\r\n        });\r\n\r\n        this._scene = new BABYLON.Scene(this._engine);\r\n        VR.BabylonEngine.Scene = this._scene;\r\n        VR.Time.start();\r\n\r\n        this._scene.clearColor = new BABYLON.Color4(116 / 255, 116 / 255, 116 / 255, 1);\r\n\r\n        // TODO: 设定相机\r\n        // var camera = new BABYLON.ArcRotateCamera('Default', 100, 50, 50, new BABYLON.Vector3(0, 0, 0), this._scene);\r\n        // camera.setPosition(new BABYLON.Vector3(0, 1, -20));\r\n        // camera.attachControl(this._canvas, true);\r\n\r\n        // let inputMap: { [key: string]: boolean } = {};\r\n\r\n        // TODO: 加载过度动画开\r\n        // engine.hideLoadingUI();\r\n\r\n        engine.displayLoadingUI();\r\n\r\n        // 加载资源\r\n        // console.warn(Config.scenesData);\r\n        editor.call('scene:raw', Config.scenesData,this.startVeryEngine.bind(this),datas);\r\n\r\n\r\n        engine.hideLoadingUI();\r\n\r\n        // 发布版编辑器\r\n        this._scene.onKeyboardObservable.add(kbInfo => {\r\n            if (kbInfo.type === BABYLON.KeyboardEventTypes.KEYDOWN) {\r\n                if (kbInfo.event.keyCode === 81 && kbInfo.event.ctrlKey && kbInfo.event.altKey) { //Ctrl + Q\r\n                    console.log('Ctrl + Alt + Q');\r\n                    this.toggleDebug();\r\n                }\r\n            }\r\n        });\r\n\r\n        this._engine.runRenderLoop(() => {\r\n            // if (this._canvas.width !== this._canvas.clientWidth) {\r\n            //     this._engine.resize();\r\n            // }\r\n\r\n            if (this._scene) {\r\n                if (this._scene.activeCamera) {\r\n                    this._scene.render();\r\n                }\r\n            }\r\n\r\n            // if (this._showFps) {\r\n            // \tthis.updateFpsPos();\r\n            // }\r\n\r\n\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n\r\n    startVeryEngine(datas:any): void {\r\n        let entrance: VR.VeryEngine = new VR.VeryEngine();\r\n        let projectName = \"测试项目\";\r\n        // console.log(`空行数：${hot1.countEmptyRows()}`);\r\n        try {\r\n            entrance.init(datas, projectName);\r\n        } catch (e) { // TODO: 可能会影响效率\r\n            console.error(e);\r\n        }\r\n\r\n        let objects: VR.VE_Objects = VR.VE_Manager.objects(projectName);\r\n        // 全局渲染帧循环\r\n        this._scene.onBeforeRenderObservable.add(() => {\r\n            // 添加帧函数\r\n            // VR.Time._sum();\r\n\r\n            // 触发响应循环\r\n            for (let i: number = 0; i < objects.count; i++) {\r\n                let objectID: string = objects.getObjectID(i);\r\n                objects.getVeryObject(objectID).update();\r\n            }\r\n\r\n        });\r\n\r\n        this._scene.onKeyboardObservable.add(kbInfo => {\r\n            if (kbInfo.type === BABYLON.KeyboardEventTypes.KEYDOWN) {\r\n                console.log(kbInfo.event.key);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 启动渲染循环；\r\n     */\r\n    animate(): Game {\r\n        this._engine.runRenderLoop(() => {\r\n            if (this._canvas.width !== this._canvas.clientWidth) {\r\n                this._engine.resize();\r\n            }\r\n\r\n            if (this._scene) {\r\n                // 正交相机画面比例控制\r\n                for (let i = 0, len = Config.cameras.length; i < len; i++) {\r\n                    Config.cameras[i].resize(false);\r\n                }\r\n                this._scene.render();\r\n            }\r\n\r\n            if (this._showFps) {\r\n                this.updateFpsPos();\r\n            }\r\n\r\n\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 属性编辑器UI界面控制；\r\n     */\r\n    toggleDebug(): Game {\r\n        if (this._engine) {\r\n            // Always showing the debug layer, because you can close it by itself\r\n            var scene = this._engine.scenes[0];\r\n            if (scene.debugLayer.isVisible()) {\r\n                scene.debugLayer.hide();\r\n            }\r\n            else {\r\n                // 此处修改了babylon.d.ts文件\r\n                scene.debugLayer.show({ embedMode: true });\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 更新fps显示及显示位置\r\n     */\r\n    updateFpsPos(): void {\r\n        if (this._fps) {\r\n            // this._fps.style.right = document.body.clientWidth - (this._table.clientWidth + this._canvas.clientWidth) + \"px\";\r\n\r\n            this._fps.innerHTML = this._engine.getFps().toFixed() + \" fps\";\r\n        }\r\n    }\r\n}\r\n","export * from './game';\r\nexport * from './scenes';\r\nexport * from './config';\r\nexport * from './loader';\r\nexport * from './babylonloader';","import { Ajax, AjaxRequest, Observer, Tools } from \"../lib\";\r\nimport { BabylonLoader } from \"./babylonloader\";\r\nimport { Config } from \"./config\";\r\n\r\nexport class Loader {\r\n\r\n\r\n    public constructor() {\r\n\r\n        editor.method('initAssets', (assets_data: any) => {\r\n            if (assets_data.assets)\r\n                onLoad(assets_data.assets);\r\n        });\r\n\r\n        // 加载assets数据，data为assets数据\r\n        var onLoad = function (data: any) {\r\n            editor.call('assets:progress', 0.5);\r\n\r\n            var count = 0;\r\n            let assetsLength: number = Object.getOwnPropertyNames(data).length;\r\n            // 加载Asset资源\r\n            var load = function (asset_data: any) {\r\n                editor.call('loadAsset', asset_data, function () {\r\n                    count++;\r\n                    editor.call('assets:progress', (count / assetsLength) * 0.5 + 0.5);\r\n                    if (count >= assetsLength) {\r\n                        editor.call('assets:progress', 1);\r\n                        editor.emit('assets:load');\r\n                    }\r\n                });\r\n            };\r\n\r\n            for (let key in data) {\r\n                load(data[key]);\r\n            }\r\n\r\n        };\r\n\r\n\r\n        editor.method('scene:raw', function (data: any,fn:Function,datas:any) {\r\n            // editor.call('selector:clear');\r\n            // editor.call('entities:clear');\r\n            // editor.call('attributes:clear');\r\n\r\n            // console.log(data);\r\n            // console.log(data.entities);\r\n\r\n            // var total = Object.keys(data.entities).length;\r\n            // var i = 0;\r\n            \r\n            // list\r\n            for (var key in data.entities) {\r\n                let entity = new Observer(data.entities[key]);\r\n                // editor.call('entities:add', entity);\r\n                // p.progress = (++i / total) * 0.8 + 0.1;\r\n                // console.warn(entity);\r\n                if (entity.get('type') !== 'root') {\r\n                    editor.call('create:scene:element', entity);\r\n                }\r\n            }\r\n            count=meshEntity.length;\r\n            index=0;\r\n            for(var i=0;i<meshEntity.length;i++){\r\n                // 模型异步加载，因为mesh需要先加载.babylon文件；\r\n                // console.warn('scene创建mesh：' + entity.get('name'));\r\n                editor.call('scene:mesh:create', meshEntity[i],fn,datas);\r\n            }\r\n            // p.progress = 1;\r\n\r\n            // loadedEntities = true;\r\n            editor.emit('entities:load');\r\n        });\r\n\r\n\r\n        var childIndex: { [key: string]: any } = {};\r\n        var entitiesIndex: { [key: string]: any } = {};\r\n        editor.method('create:scene:element', (entity: Observer) => {\r\n            // console.log('create scene element');\r\n            // console.error(entity);\r\n            if (entity.get('type') === 'light') {\r\n                // Lights\r\n                let lightWraper = BabylonLoader.createLightWraper(entity.get('subtype'), entity.get('name'), VR.BabylonEngine.Scene);\r\n\r\n                // lightWraper.light.setEnabled(entity.has('enabled') ? entity.get('enabled') : true);\r\n                lightWraper.light.intensity = entity.has('intensity') ? entity.get('intensity') : 1;\r\n                if (entity.has('diffuse') && entity.get('diffuse').length === 3) {\r\n                    lightWraper.light.diffuse = BABYLON.Color3.FromArray(entity.get('diffuse'));\r\n                }\r\n                if (entity.has('specular') && entity.get('specular').length === 3) {\r\n                    lightWraper.light.specular = BABYLON.Color3.FromArray(entity.get('specular'));\r\n                }\r\n                if (lightWraper.light instanceof BABYLON.SpotLight) {\r\n                    if (entity.has('angle')) {\r\n                        lightWraper.light.angle = entity.get('angle');\r\n                    }\r\n                    if (entity.has('exponent')) {\r\n                        lightWraper.light.exponent = entity.get('exponent');\r\n                    }\r\n                }\r\n\r\n                lightWraper.id = entity.get('resource_id');\r\n                entitiesIndex[entity.get('resource_id')] = lightWraper;\r\n                entity.node = lightWraper;\r\n\r\n                if (entity.has('enabled')) {\r\n                    lightWraper.setEnabled(entity.get('enabled'));\r\n                }\r\n                if (entity.has('position') && entity.get('position').length === 3) {\r\n                    lightWraper.position = BABYLON.Vector3.FromArray(entity.get('position'));\r\n                }\r\n                if (entity.has('rotation') && entity.get('rotation').length === 3) {\r\n                    lightWraper.rotation = Tools.eulerAngleToRadian(BABYLON.Vector3.FromArray(entity.get('rotation')));\r\n                    // 环境光不跟着父物体发生位置变化\r\n                    if (lightWraper.type === BABYLON.Light.LIGHTTYPEID_HEMISPHERICLIGHT) {\r\n                        (<BABYLON.HemisphericLight>lightWraper.light).direction.copyFrom(lightWraper.up);\r\n                    }\r\n                }\r\n                if (entity.has('scale') && entity.get('scale').length === 3) {\r\n                    lightWraper.scaling = BABYLON.Vector3.FromArray(entity.get('scale'));\r\n                }\r\n\r\n                childAndParent(entity, lightWraper);\r\n            } else if (entity.get('type') === 'camera') {\r\n                // Cameras\r\n                // 默认创建universalCamera，把input控制全删除\r\n                let cameraWraper = BabylonLoader.createCameraWraper(entity.get('name'), VR.BabylonEngine.Scene, VR.BabylonEngine.Canvas);\r\n\r\n                // TODO: camera视窗\r\n                // let w = VeryEngine.viewEngine.getRenderWidth();\r\n                // let h = VeryEngine.viewEngine.getRenderHeight();\r\n                // // cameraWraper.camera.viewport = new BABYLON.Viewport(4 / w, (h - 241) / h, 260 / w, 200 / h);\r\n\r\n                // cameraWraper.camera.viewport = new BABYLON.Viewport(Config.x / w, (h - Config.y) / h, Config.width / w, Config.height / h);\r\n                VR.BabylonEngine.Scene.activeCameras.push(cameraWraper.camera);\r\n\r\n                cameraWraper.id = entity.get('resource_id');\r\n                entitiesIndex[entity.get('resource_id')] = cameraWraper;\r\n                entity.node = cameraWraper;\r\n\r\n                if (entity.has('enabled')) {\r\n                    cameraWraper.setEnabled(entity.get('enabled'));\r\n                }\r\n                if (entity.has('position') && entity.get('position').length === 3) {\r\n                    cameraWraper.position = BABYLON.Vector3.FromArray(entity.get('position'));\r\n                }\r\n                if (entity.has('rotation') && entity.get('rotation').length === 3) {\r\n                    cameraWraper.rotation = Tools.eulerAngleToRadian(BABYLON.Vector3.FromArray(entity.get('rotation')));\r\n                }\r\n                if (entity.has('scale') && entity.get('scale').length === 3) {\r\n                    cameraWraper.scaling = BABYLON.Vector3.FromArray(entity.get('scale'));\r\n                }\r\n\r\n                if (entity.has('checkCollisions')) {\r\n                    if (cameraWraper.camera instanceof BABYLON.FreeCamera) {\r\n                        cameraWraper.camera.checkCollisions = entity.get('checkCollisions');\r\n                    }\r\n                }\r\n                if (entity.has('applyGravity')) {\r\n                    if (cameraWraper.camera instanceof BABYLON.FreeCamera) {\r\n                        cameraWraper.camera.applyGravity = entity.get('applyGravity');\r\n                    }\r\n                }\r\n\r\n                if (entity.has('viewport')) {\r\n                    // 编辑器条件下不用管\r\n                    let arr = entity.get('viewport');\r\n                    if (arr && arr.length && arr.length === 4) {\r\n                        cameraWraper.camera.viewport = new BABYLON.Viewport(arr[0], arr[1], arr[2], arr[3]);\r\n                    }\r\n                }\r\n\r\n                // TODO: 设置clearColor\r\n                if (entity.has('clearColor')) {\r\n                    let arr = entity.get('clearColor');\r\n                    if (arr && arr.length && arr.length === 4) {\r\n                        cameraWraper.clearColor = new BABYLON.Color4(arr[0], arr[1], arr[2], arr[3]);\r\n                    }\r\n                } else {\r\n                    cameraWraper.clearColor = new BABYLON.Color4(45 / 255, 145 / 255, 186 / 255, 1);\r\n                }\r\n\r\n                if (entity.has('mode')) {\r\n                    cameraWraper.mode = entity.get('mode');\r\n                }\r\n                if (entity.has('fov')) {\r\n                    cameraWraper.fov = entity.get('fov');\r\n                }\r\n                if (entity.has('inertia')) {\r\n                    cameraWraper.inertia = entity.get('inertia');\r\n                }\r\n                if (entity.has('orthoSize')) {\r\n                    cameraWraper.orthoSize = entity.get('orthoSize');\r\n                }\r\n\r\n                // VeryEngine.addCamera(cameraWraper);\r\n                \r\n\r\n                // 设置viewport\r\n                cameraWraper.resize(false);\r\n                // 先不要渲染出来\r\n                // cameraWraper.renderCamera(false);\r\n\r\n                Config.addCamera(cameraWraper);\r\n\r\n                childAndParent(entity, cameraWraper);\r\n            } else if (entity.get('type') === 'empty') {\r\n                // 空物体\r\n                let empty = new BABYLON.TransformNode(entity.get('name'), VR.BabylonEngine.Scene);\r\n                entity.node = empty;\r\n                empty.id = entity.get('resource_id');\r\n                empty.position = BABYLON.Vector3.FromArray(entity.get('position'));\r\n                empty.rotation = Tools.eulerAngleToRadian(BABYLON.Vector3.FromArray(entity.get('rotation')));\r\n                empty.scaling = BABYLON.Vector3.FromArray(entity.get('scale'));\r\n                empty.isEnabled(entity.get('enabled'));\r\n                childAndParent(entity, empty);\r\n            } else if (entity.get('type') === 'primitive') {\r\n                if (entity.get('subtype') && entity.get('subtype') === 'box') {\r\n                    // box\r\n                    var box = BABYLON.MeshBuilder.CreateBox(entity.get('name'), { size: 100 }, VR.BabylonEngine.Scene);\r\n\r\n                    // var box = BABYLON.Mesh.CreateBox(entity.get('name'), 1, VeryEngine.viewScene);\r\n                    entity.node = box;\r\n                    entitiesIndex[entity.get('resource_id')] = box;\r\n                    box.id = entity.get('resource_id');\r\n\r\n                    if (entity.has('enabled')) {\r\n                        box.setEnabled(entity.get('enabled'));\r\n                    }\r\n                    if (entity.has('position') && entity.get('position').length === 3) {\r\n                        box.position = BABYLON.Vector3.FromArray(entity.get('position'));\r\n                    }\r\n                    if (entity.has('rotation') && entity.get('rotation').length === 3) {\r\n                        box.rotation = Tools.eulerAngleToRadian(BABYLON.Vector3.FromArray(entity.get('rotation')));\r\n                    }\r\n                    if (entity.has('scale') && entity.get('scale').length === 3) {\r\n                        box.scaling = BABYLON.Vector3.FromArray(entity.get('scale'));\r\n                    }\r\n                    if (entity.has('checkCollisions')) {\r\n                        box.checkCollisions = entity.get('checkCollisions');\r\n                    }\r\n                    if (entity.has('pickable')) {\r\n                        box.isPickable = entity.get('pickable');\r\n                    }\r\n                    if (entity.has('isVisible')) {\r\n                        box.isVisible = entity.get('isVisible');\r\n                    }\r\n                    // 加载自定义关联材质\r\n                    if (entity.get('material_id')) {\r\n\r\n                    }\r\n                    childAndParent(entity, box);\r\n                } else if (entity.get('subtype') && entity.get('subtype') === 'sphere') {\r\n                    // box\r\n                    var box = BABYLON.MeshBuilder.CreateSphere(entity.get('name'), { segments: 20, diameter: 100 }, VR.BabylonEngine.Scene);\r\n\r\n                    // var box = BABYLON.Mesh.CreateBox(entity.get('name'), 1, VeryEngine.viewScene);\r\n                    entity.node = box;\r\n                    entitiesIndex[entity.get('resource_id')] = box;\r\n                    box.id = entity.get('resource_id');\r\n\r\n                    if (entity.has('enabled')) {\r\n                        box.setEnabled(entity.get('enabled'));\r\n                    }\r\n                    if (entity.has('position') && entity.get('position').length === 3) {\r\n                        box.position = BABYLON.Vector3.FromArray(entity.get('position'));\r\n                    }\r\n                    if (entity.has('rotation') && entity.get('rotation').length === 3) {\r\n                        box.rotation = Tools.eulerAngleToRadian(BABYLON.Vector3.FromArray(entity.get('rotation')));\r\n                    }\r\n                    if (entity.has('scale') && entity.get('scale').length === 3) {\r\n                        box.scaling = BABYLON.Vector3.FromArray(entity.get('scale'));\r\n                    }\r\n                    if (entity.has('checkCollisions')) {\r\n                        box.checkCollisions = entity.get('checkCollisions');\r\n                    }\r\n                    if (entity.has('pickable')) {\r\n                        box.isPickable = entity.get('pickable');\r\n                    }\r\n                    if (entity.has('isVisible')) {\r\n                        box.isVisible = entity.get('isVisible');\r\n                    }\r\n                    // 加载自定义关联材质\r\n                    if (entity.get('material_id')) {\r\n\r\n                    }\r\n                    childAndParent(entity, box);\r\n                } else if (entity.get('subtype') && entity.get('subtype') === 'plane') {\r\n                    // box\r\n                    var box = BABYLON.MeshBuilder.CreateGround(entity.get('name'), { width: 5000, height: 5000, subdivisions: 10 }, VR.BabylonEngine.Scene);\r\n\r\n                    // var box = BABYLON.Mesh.CreateBox(entity.get('name'), 1, VeryEngine.viewScene);\r\n                    entity.node = box;\r\n                    entitiesIndex[entity.get('resource_id')] = box;\r\n                    box.id = entity.get('resource_id');\r\n\r\n                    if (entity.has('enabled')) {\r\n                        box.setEnabled(entity.get('enabled'));\r\n                    }\r\n                    if (entity.has('position') && entity.get('position').length === 3) {\r\n                        box.position = BABYLON.Vector3.FromArray(entity.get('position'));\r\n                    }\r\n                    if (entity.has('rotation') && entity.get('rotation').length === 3) {\r\n                        box.rotation = Tools.eulerAngleToRadian(BABYLON.Vector3.FromArray(entity.get('rotation')));\r\n                    }\r\n                    if (entity.has('scale') && entity.get('scale').length === 3) {\r\n                        box.scaling = BABYLON.Vector3.FromArray(entity.get('scale'));\r\n                    }\r\n                    if (entity.has('checkCollisions')) {\r\n                        box.checkCollisions = entity.get('checkCollisions');\r\n                    }\r\n                    if (entity.has('pickable')) {\r\n                        box.isPickable = entity.get('pickable');\r\n                    }\r\n                    if (entity.has('isVisible')) {\r\n                        box.isVisible = entity.get('isVisible');\r\n                    }\r\n                    // 加载自定义关联材质\r\n                    if (entity.get('material_id')) {\r\n\r\n                    }\r\n                    childAndParent(entity, box);\r\n                } else if (entity.get('subtype') && entity.get('subtype') === 'cylinder') {\r\n                    // box\r\n                    var box = BABYLON.MeshBuilder.CreateCylinder(entity.get('name'), { height: 200, diameter: 100 }, VR.BabylonEngine.Scene);\r\n\r\n                    // var box = BABYLON.Mesh.CreateBox(entity.get('name'), 1, VeryEngine.viewScene);\r\n                    entity.node = box;\r\n                    entitiesIndex[entity.get('resource_id')] = box;\r\n                    box.id = entity.get('resource_id');\r\n\r\n                    if (entity.has('enabled')) {\r\n                        box.setEnabled(entity.get('enabled'));\r\n                    }\r\n                    if (entity.has('position') && entity.get('position').length === 3) {\r\n                        box.position = BABYLON.Vector3.FromArray(entity.get('position'));\r\n                    }\r\n                    if (entity.has('rotation') && entity.get('rotation').length === 3) {\r\n                        box.rotation = Tools.eulerAngleToRadian(BABYLON.Vector3.FromArray(entity.get('rotation')));\r\n                    }\r\n                    if (entity.has('scale') && entity.get('scale').length === 3) {\r\n                        box.scaling = BABYLON.Vector3.FromArray(entity.get('scale'));\r\n                    }\r\n                    if (entity.has('checkCollisions')) {\r\n                        box.checkCollisions = entity.get('checkCollisions');\r\n                    }\r\n                    if (entity.has('pickable')) {\r\n                        box.isPickable = entity.get('pickable');\r\n                    }\r\n                    if (entity.has('isVisible')) {\r\n                        box.isVisible = entity.get('isVisible');\r\n                    }\r\n                    // 加载自定义关联材质\r\n                    if (entity.get('material_id')) {\r\n\r\n                    }\r\n                    childAndParent(entity, box);\r\n                }\r\n                // console.warn(box);\r\n            } else if (entity.get('type') === 'mesh') {\r\n                // 模型异步加载，因为mesh需要先加载.babylon文件；\r\n                // console.warn('scene创建mesh：' + entity.get('name'));\r\n                meshEntity.push(entity);\r\n            }\r\n        });\r\n\r\n        let childAndParent = (entity: Observer, node: Nullable<BABYLON.Node>) => {\r\n            // children\r\n            let children = entity.get('children');\r\n            for (var i = 0; i < children.length; i++) {\r\n                childIndex[children[i]] = {\r\n                    index: i,\r\n                    parent: node\r\n                };\r\n\r\n                if (entitiesIndex[children[i]]) {\r\n                    insertChild(node, entitiesIndex[children[i]], i);\r\n                }\r\n            }\r\n\r\n            // parenting\r\n            if (!entity.get('parent')) {\r\n                // babylon root\r\n            } else {\r\n                // child\r\n                var details = childIndex[entity.get('resource_id')];\r\n                if (details && details.parent) {\r\n                    insertChild(details.parent, node, details.index);\r\n                }\r\n            }\r\n        }\r\n\r\n        let insertChild = (parent: Nullable<BABYLON.Node>, node: Nullable<BABYLON.Node>, index: number) => {\r\n            if (node !== null) {\r\n                node.parent = parent;\r\n            }\r\n        }\r\n\r\n        editor.method('scene:mesh:create', (entity: Observer,fn:Function,datas:any) => {\r\n            loadBabylon(entity,fn,datas);\r\n        });\r\n        let count=0;\r\n        let index=0;\r\n        var meshEntity:Observer[]=[];\r\n        let loadingBabylonFlag: { [key: string]: boolean } = {};\r\n        let toLoadEntity: { [key: string]: Observer[] } = {};\r\n        let loadBabylon = async(entity: Observer,fn:Function,datas:any) => {\r\n            let assetID: string = entity.get('asset_id');\r\n            let dataBabylon: any = null;\r\n\r\n            if (BabylonLoader.hasBabylobData(assetID)) {\r\n                dataBabylon = BabylonLoader.getParsedBabylonData(assetID);\r\n                // BabylonLoader.assembleBabylon(assetID, dataBabylon);\r\n                // 关联mesh\r\n                assembleSceneMesh(entity, dataBabylon);\r\n                index++;\r\n                if(index==count){\r\n                    index=0; count=0;meshEntity=[];\r\n                    fn(datas);\r\n                }\r\n            } else {\r\n                if (assetID in loadingBabylonFlag) {\r\n                    toLoadEntity[assetID].push(entity);\r\n                } else {\r\n                    loadingBabylonFlag[assetID] = true;\r\n                    toLoadEntity[assetID] = [entity];\r\n                    // console.warn(BabylonLoader.assetsData);\r\n                    // 直接返回babylon json格式内容数据\r\n                      // 直接返回babylon json格式内容数据\r\n                      var name=BabylonLoader.assetsData.assets[assetID].name;\r\n                      ossfile.getJsonAsset(Config.projectID,assetID,name,BabylonLoader.assetsData.assets[assetID].file.hash).then(response=>{\r\n                        dataBabylon = JSON.parse(response);\r\n                        BabylonLoader.babylonCacheData[assetID] = dataBabylon;\r\n                        BabylonLoader.parseBabylon(assetID, dataBabylon);\r\n                        BabylonLoader.parseBabylon(assetID, dataBabylon);\r\n                        dataBabylon = BabylonLoader.getParsedBabylonData(assetID);\r\n                        toLoadEntity[assetID].forEach(async(item: Observer) => {\r\n                            await assembleSceneMesh(item, dataBabylon);\r\n                            index++;\r\n                            if(index==count){\r\n                                index=0; count=0;meshEntity=[];\r\n                                fn(datas);\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        let assembleSceneMesh = async(entity: Observer, parsedBabylon: any) => {\r\n            // TODO: 暂时未考虑TransformNode数据的情况\r\n            if (parsedBabylon) {\r\n                let assetID: string = entity.get('asset_id');\r\n                // 先从.babylon提取原始mesh数据\r\n                let meshID: string = entity.get('babylon_id');\r\n                if (parsedBabylon.meshes[meshID]) {\r\n                    let meshData = parsedBabylon.meshes[meshID];\r\n                    // 结合scene和babylon数据，更新mesh信息\r\n                    meshData.position = entity.has('position') && entity.get('position') ? entity.get('position') : meshData.position;\r\n                    let recordRotation = entity.get('rotation');\r\n                    if (recordRotation && recordRotation.length > 0) {\r\n                        recordRotation = Tools.vector3ToArray(Tools.eulerAngleToRadian(BABYLON.Vector3.FromArray(recordRotation)));\r\n                    } else {\r\n                        recordRotation = meshData.rotation;\r\n                    }\r\n                    meshData.rotation = recordRotation;\r\n                    meshData.scale = entity.has('scale') && entity.get('scale') ? entity.get('scale') : meshData.scal;\r\n                    meshData.name = entity.has('name') && entity.get('name') ? entity.get('name') : meshData.name;\r\n                    meshData.id = entity.has('resource_id') && entity.get('resource_id') ? entity.get('resource_id') : meshData.id;\r\n                    meshData.isEnabled = entity.has('enabled') ? entity.get('enabled') : meshData.isEnabled;\r\n                    meshData.isVisible = entity.has('isVisible') ? entity.get('isVisible') : meshData.isVisible;\r\n                    // TODO：发布状态下，听数据的\r\n                    meshData.pickable = entity.has('pickable') ? entity.get('pickable') : meshData.pickable;\r\n                    // TODO：scene编辑条件下默认就是加载状态；\r\n                    // meshData.pickable = true;\r\n                    meshData.checkCollisions = entity.has('checkCollisions') ? entity.get('checkCollisions') : meshData.checkCollisions;\r\n                    meshData.materialId = entity.has('material_id') ? entity.get('material_id') : meshData.materialId;\r\n                    // 要注意是否为root id\r\n                    meshData.parentId = entity.has('parent') ? entity.get('parent') : meshData.parentId;\r\n\r\n\r\n                    // 判断是否关联了geometry\r\n                    if (meshData.geometryId) {\r\n                        if (VR.BabylonEngine.Scene.getGeometryByID(meshData.geometryId) === null) {\r\n                            if (parsedBabylon.geometries && parsedBabylon.geometries[meshData.geometryId]) {\r\n                                let vertexData = parsedBabylon.geometries[meshData.geometryId];\r\n                                BabylonLoader.loadGeometry(vertexData, VR.BabylonEngine.Scene, '');\r\n                            }\r\n                        }\r\n                    }\r\n                    // 组装material\r\n                    // console.error(meshData.materialId);\r\n                    if (meshData.materialId) {\r\n                        if (VR.BabylonEngine.Scene.getMaterialByID(meshData.materialId) === null) {\r\n                            // console.error(BabylonLoader.assetsData.babylon[assetID]);\r\n                            if (BabylonLoader.assetsData.babylon[assetID]) {\r\n                                let mats = BabylonLoader.assetsData.babylon[assetID]['materials'];\r\n                                if (mats && mats[meshData.materialId]) {\r\n                                    let matAssetID = mats[meshData.materialId].asset_id;\r\n                                    if (BabylonLoader.assetsData.assets[matAssetID]) {\r\n                                        let newMat = BabylonLoader.assetsData.assets[matAssetID].data;\r\n\r\n                                    // 检测texture\r\n                                    let textureUrl=\"\";\r\n                                    if (newMat.diffuseTexture && newMat.diffuseTexture.texture_id) {\r\n                                        let assetID=newMat.diffuseTexture.texture_id;\r\n                                        textureUrl=await ossfile.getUrl(Config.projectID,assetID,BabylonLoader.assetsData.assets[assetID].name,BabylonLoader.assetsData.assets[assetID].file.hash)\r\n                                        newMat.diffuseTexture.name =textureUrl;\r\n                                    }\r\n                                    if (newMat.specularTexture && newMat.specularTexture.texture_id) {\r\n                                        let assetID=newMat.specularTexture.texture_id;\r\n                                        textureUrl=await ossfile.getUrl(Config.projectID,assetID,BabylonLoader.assetsData.assets[assetID].name,BabylonLoader.assetsData.assets[assetID].file.hash)\r\n                                        newMat.specularTexture.name =textureUrl;\r\n                                    }\r\n                                    if (newMat.reflectionTexture && newMat.reflectionTexture.texture_id) {\r\n                                        let assetID=newMat.reflectionTexture.texture_id;\r\n                                        textureUrl=await ossfile.getUrl(Config.projectID,assetID,BabylonLoader.assetsData.assets[assetID].name,BabylonLoader.assetsData.assets[assetID].file.hash)\r\n                                        newMat.reflectionTexture.name =textureUrl;\r\n                                    }\r\n                                    if (newMat.refractionTexture && newMat.refractionTexture.texture_id) {\r\n                                        let assetID=newMat.refractionTexture.texture_id;\r\n                                        textureUrl=await ossfile.getUrl(Config.projectID,assetID,BabylonLoader.assetsData.assets[assetID].name,BabylonLoader.assetsData.assets[assetID].file.hash)\r\n                                        newMat.refractionTexture.name =textureUrl;\r\n                                    }\r\n                                    if (newMat.emissiveTexture && newMat.emissiveTexture.texture_id) {\r\n                                        let assetID=newMat.emissiveTexture.texture_id;\r\n                                        textureUrl=await ossfile.getUrl(Config.projectID,assetID,BabylonLoader.assetsData.assets[assetID].name,BabylonLoader.assetsData.assets[assetID].file.hash)\r\n                                        newMat.emissiveTexture.name =textureUrl;\r\n                                    }\r\n                                    if (newMat.bumpTexture && newMat.bumpTexture.texture_id) {\r\n                                        let assetID=newMat.bumpTexture.texture_id;\r\n                                        textureUrl=await ossfile.getUrl(Config.projectID,assetID,BabylonLoader.assetsData.assets[assetID].name,BabylonLoader.assetsData.assets[assetID].file.hash)\r\n                                        newMat.bumpTexture.name =textureUrl;\r\n                                    }\r\n                                    if (newMat.opacityTexture && newMat.opacityTexture.texture_id) {\r\n                                        let assetID=newMat.opacityTexture.texture_id;\r\n                                        textureUrl=await ossfile.getUrl(Config.projectID,assetID,BabylonLoader.assetsData.assets[assetID].name,BabylonLoader.assetsData.assets[assetID].file.hash)\r\n                                        newMat.opacityTexture.name =textureUrl;\r\n                                    }\r\n                                    if (newMat.ambientTexture && newMat.ambientTexture.texture_id) {\r\n                                        let assetID=newMat.ambientTexture.texture_id;\r\n                                        textureUrl=await ossfile.getUrl(Config.projectID,assetID,BabylonLoader.assetsData.assets[assetID].name,BabylonLoader.assetsData.assets[assetID].file.hash)\r\n                                        newMat.ambientTexture.name =textureUrl;\r\n                                    }\r\n                                    if (newMat.lightmapTexture && newMat.lightmapTexture.texture_id) {\r\n                                        let assetID=newMat.lightmapTexture.texture_id;\r\n                                        textureUrl=await ossfile.getUrl(Config.projectID,assetID,BabylonLoader.assetsData.assets[assetID].name,BabylonLoader.assetsData.assets[assetID].file.hash)\r\n                                        newMat.lightmapTexture.name =textureUrl;\r\n                                    }\r\n\r\n                                    BabylonLoader.loadMaterial(newMat, VR.BabylonEngine.Scene, '');\r\n                                    } else {\r\n                                        console.warn('scene mesh warn');\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                console.warn('scene mesh warn');\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // 加载mesh\r\n                    let mesh = BabylonLoader.loadMesh(meshData, VR.BabylonEngine.Scene, '');\r\n                    entity.node = mesh;\r\n                    entitiesIndex[entity.get('resource_id')] = mesh;\r\n                    childAndParent(entity, mesh);\r\n                } else {\r\n                    console.warn('scene mesh warn');\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n}","export class Scenes {\r\n\r\n\r\n\r\n  public constructor() {\r\n    // connect to server\r\n    // load project data\r\n    // analysis data\r\n    // load original model\r\n    // load scene object from original model\r\n    \r\n  }\r\n\r\n\r\n\r\n\r\n}","export * from './lib';\r\nexport * from './game';","import { Events } from \"../lib\";\r\n\r\nexport class Ajax {\r\n\r\n    public constructor(args: object | string) {\r\n        if (typeof (args) === 'string')\r\n            args = { url: args };\r\n\r\n        return new AjaxRequest(args);\r\n    }\r\n\r\n    public static get(url: string): AjaxRequest {\r\n        return new AjaxRequest({ url: url });\r\n    }\r\n\r\n    public static post(url: string, data: any): AjaxRequest {\r\n        return new AjaxRequest({\r\n            method: 'POST',\r\n            url: url,\r\n            data: data\r\n        });\r\n    }\r\n\r\n    public static put(url: string, data: any): AjaxRequest {\r\n        return new AjaxRequest({\r\n            method: 'PUT',\r\n            url: url,\r\n            data: data\r\n        });\r\n    }\r\n\r\n    public static delete(url: string): AjaxRequest {\r\n        return new AjaxRequest({\r\n            method: 'DELETE',\r\n            url: url\r\n        });\r\n    }\r\n\r\n    public static params: { [key: string]: any } = {};\r\n\r\n    public static param(name: string, value: any): void {\r\n        Ajax.params[name] = value;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class AjaxRequest extends Events {\r\n\r\n    private _progress: number = 0;\r\n\r\n    private _xhr: XMLHttpRequest;\r\n\r\n    public notJson: boolean;\r\n\r\n    public constructor(args: any) {\r\n        super();\r\n\r\n        if (!args) {\r\n            throw new Error('ajax请求无参数，请检查！')\r\n        }\r\n\r\n        this._progress = 0.0;\r\n        this.emit('progress', this._progress);\r\n\r\n        this._xhr = new XMLHttpRequest();\r\n\r\n        // send cookies\r\n        if (args.cookies)\r\n            this._xhr.withCredentials = true;\r\n\r\n        // events\r\n        this._xhr.addEventListener('load', this._onLoad.bind(this), false);\r\n        // this._xhr.addEventListener('progress', this._onProgress.bind(this), false);\r\n        this._xhr.upload.addEventListener('progress', this._onProgress.bind(this), false);\r\n        this._xhr.addEventListener('error', this._onError.bind(this), false);\r\n        this._xhr.addEventListener('abort', this._onAbort.bind(this), false);\r\n\r\n        // url\r\n        let url: string = args.url;\r\n\r\n        // query\r\n        if (args.query && Object.keys(args.query).length) {\r\n            if (url.indexOf('?') === -1) {\r\n                url += '?';\r\n            }\r\n\r\n            var query = [];\r\n            for (var key in args.query) {\r\n                query.push(key + '=' + args.query[key]);\r\n            }\r\n\r\n            url += query.join('&');\r\n        }\r\n\r\n        // templating\r\n        var parts = url.split('{{');\r\n        if (parts.length > 1) {\r\n            for (var i = 1; i < parts.length; i++) {\r\n                var ends = parts[i].indexOf('}}');\r\n                var key = parts[i].slice(0, ends);\r\n\r\n                if (Ajax.params[key] === undefined)\r\n                    continue;\r\n\r\n                // replace\r\n                parts[i] = Ajax.params[key] + parts[i].slice(ends + 2);\r\n            }\r\n\r\n            url = parts.join('');\r\n        }\r\n\r\n        // open request\r\n        this._xhr.open(args.method || 'GET', url, true);\r\n\r\n        // 返回数据是否为json格式\r\n        this.notJson = args.notJson || false;\r\n\r\n        // header for PUT/POST\r\n        if (!args.ignoreContentType && (args.method === 'PUT' || args.method === 'POST' || args.method === 'DELETE'))\r\n            this._xhr.setRequestHeader('Content-Type', 'application/json');\r\n\r\n        // TODO: 权限header参数\r\n        // if (args.auth && config.accessToken) {\r\n        //     this._xhr.setRequestHeader('Authorization', 'Bearer ' + config.accessToken);\r\n        // }\r\n\r\n        if (args.headers) {\r\n            for (var key in args.headers)\r\n                this._xhr.setRequestHeader(key, args.headers[key]);\r\n        }\r\n\r\n        // stringify data if needed\r\n        if (args.data && typeof (args.data) !== 'string' && !(args.data instanceof FormData)) {\r\n            args.data = JSON.stringify(args.data);\r\n        }\r\n\r\n        // make request\r\n        this._xhr.send(args.data || null);\r\n    }\r\n\r\n    private _onLoad(): void {\r\n        this._progress = 1.0;\r\n        this.emit('progress', 1.0);\r\n\r\n        if (this._xhr.status === 200 || this._xhr.status === 201) {\r\n            if (this.notJson) {\r\n                this.emit('load', this._xhr.status, this._xhr.responseText);\r\n            } else {\r\n                try {\r\n                    var json = JSON.parse(this._xhr.responseText);\r\n                } catch (ex) {\r\n                    this.emit('error', this._xhr.status || 0, new Error('invalid json'));\r\n                    return;\r\n                }\r\n                this.emit('load', this._xhr.status, json);\r\n            }\r\n        } else {\r\n            try {\r\n                var json = JSON.parse(this._xhr.responseText);\r\n                var msg = json.message;\r\n                if (!msg) {\r\n                    msg = json.error || (json.response && json.response.error);\r\n                }\r\n\r\n                if (!msg) {\r\n                    msg = this._xhr.responseText;\r\n                }\r\n\r\n                this.emit('error', this._xhr.status, msg);\r\n            } catch (ex) {\r\n                this.emit('error', this._xhr.status);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _onError(evt: any): void {\r\n        this.emit('error', 0, evt);\r\n    }\r\n\r\n    private _onAbort(evt: any): void {\r\n        this.emit('error', 0, evt);\r\n    }\r\n\r\n    private _onProgress(evt: any): void {\r\n        if (!evt.lengthComputable)\r\n            return;\r\n\r\n        var progress = evt.loaded / evt.total;\r\n\r\n        if (progress !== this._progress) {\r\n            this._progress = progress;\r\n            this.emit('progress', this._progress);\r\n        }\r\n    }\r\n\r\n    public abort(): void {\r\n        this._xhr.abort();\r\n    }\r\n\r\n\r\n}","import { Events } from \"./events\";\r\n\r\nexport class Editor extends Events {\r\n\r\n  // 相较于Events，同一个函数名只可代表一个函数；\r\n\r\n  // 某个name对应的某个事件，name与Function是1对1的关系；\r\n  private _hooks: { [key: string]: Function } = {};\r\n\r\n  public constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * 添加全局函数，函数名与函数本体一一对应，不能重名；\r\n   * @param name 函数名；\r\n   * @param fn 函数本体；\r\n   */\r\n  public method(name: string, fn: Function): void {\r\n    if (this._hooks[name] !== undefined) {\r\n      throw new Error(\"can't override hook: \" + name);\r\n    }\r\n    this._hooks[name] = fn;\r\n  };\r\n\r\n  /**\r\n   * 移除某个函数；\r\n   * @param name 函数名；\r\n   */\r\n  public methodRemove(name: string): void {\r\n    delete this._hooks[name];\r\n  };\r\n\r\n  /**\r\n   * 执行某个函数；\r\n   * @param name 函数名；\r\n   */\r\n  public call(name: string, ...args: any[]): any {\r\n    if (this._hooks[name]) {\r\n      var args = Array.prototype.slice.call(arguments, 1);\r\n\r\n      try {\r\n        return this._hooks[name].apply(null, args);\r\n      } catch (ex) {\r\n        console.error(\r\n          \"%c%s %c(editor.method error)\",\r\n          \"color: #06f\",\r\n          name,\r\n          \"color: #f00\"\r\n        );\r\n        console.error(ex.stack);\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n}","export class Events {\r\n\r\n    // 相较于Editor，同一个函数名可包含一系列函数，不仅仅是一个，且有once功能；\r\n  \r\n    public get suspendEvents(): boolean {\r\n      return this._suspendEvents;\r\n    }\r\n    public set suspendEvents(val: boolean) {\r\n      this._suspendEvents = val;\r\n    }\r\n    private _suspendEvents: boolean = false;\r\n  \r\n    // 某个name对应的事件数组，name与Function是1对多的关系；\r\n    private _events: { [key: string]: Function[] } = {};\r\n  \r\n    public constructor() {\r\n  \r\n    }\r\n  \r\n    /**\r\n     * 添加事件数组，若name相同，则在数组末尾继续添加；\r\n     * @param name 函数名；\r\n     * @param fn 函数本体；\r\n     */\r\n    public on(name: string, fn: Function): EventHandle {\r\n      let events: Function[] = this._events[name];\r\n      if (events === undefined) {\r\n        this._events[name] = [fn];\r\n      } else {\r\n        if (events.indexOf(fn) == -1) {\r\n          events.push(fn);\r\n        }\r\n      }\r\n      return new EventHandle(this, name, fn);\r\n    }\r\n  \r\n    /**\r\n     * emit后只执行一次；\r\n     * @param name 函数名；\r\n     * @param fn 函数本体；\r\n     */\r\n    public once(name: string, fn: Function): EventHandle {\r\n      let self = this;\r\n      let evt: EventHandle = this.on(name, function (\r\n        arg0: any,\r\n        arg1: any,\r\n        arg2: any,\r\n        arg3: any,\r\n        arg4: any,\r\n        arg5: any,\r\n        arg6: any,\r\n        arg7: any\r\n      ) {\r\n        fn.call(self, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);\r\n        evt.unbind();\r\n      });\r\n      return evt;\r\n    }\r\n  \r\n    /**\r\n     * 执行事件；\r\n     * @param name 函数名；\r\n     * @param arg0 函数参数1，可选；\r\n     * @param arg1 函数参数2，可选；\r\n     * @param arg2 函数参数3，可选；\r\n     * @param arg3 函数参数4，可选；\r\n     * @param arg4 函数参数5，可选；\r\n     * @param arg5 函数参数6，可选；\r\n     * @param arg6 函数参数7，可选；\r\n     * @param arg7 函数参数8，可选；\r\n     */\r\n    public emit(name: string,\r\n      arg0?: any,\r\n      arg1?: any,\r\n      arg2?: any,\r\n      arg3?: any,\r\n      arg4?: any,\r\n      arg5?: any,\r\n      arg6?: any,\r\n      arg7?: any\r\n    ): Events {\r\n      if (this._suspendEvents) return this;\r\n  \r\n      let events: Function[] = this._events[name];\r\n      if (!events) return this;\r\n  \r\n      // 返回新数组\r\n      events = events.slice(0);\r\n  \r\n      for (let i: number = 0; i < events.length; i++) {\r\n        if (!events[i]) continue;\r\n        try {\r\n          events[i].call(this, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);\r\n        } catch (ex) {\r\n          console.info(\"%c%s %c(event error)\", \"color: #06f\", name, \"color: #f00\");\r\n          console.log(ex.stack);\r\n        }\r\n      }\r\n  \r\n      return this;\r\n    };\r\n  \r\n    /**\r\n     * 取消Events事件绑定，若name为空，则清空events；\r\n     * @param name 函数名；\r\n     * @param fn 函数本体；\r\n     */\r\n    public unbind(name?: string, fn?: Function): Events {\r\n      if (name) {\r\n        let events: Function[] = this._events[name];\r\n        if (!events) return this;\r\n  \r\n        if (fn) {\r\n          let i: number = events.indexOf(fn);\r\n          if (i !== -1) {\r\n            if (events.length === 1) {\r\n              delete this._events[name];\r\n            } else {\r\n              events.splice(i, 1);\r\n            }\r\n          }\r\n        } else {\r\n          delete this._events[name];\r\n        }\r\n      } else {\r\n        this._events = {};\r\n      }\r\n  \r\n      return this;\r\n    };\r\n  \r\n  }\r\n  \r\n  \r\n  export class EventHandle {\r\n  \r\n    public name: Nullable<string>;\r\n  \r\n    public owner: Nullable<Events>;\r\n  \r\n    public fn: Nullable<Function>;\r\n  \r\n    public constructor(owner: Events, name: string, fn: Function) {\r\n      this.owner = owner;\r\n      this.name = name;\r\n      this.fn = fn;\r\n    }\r\n  \r\n    public unbind(): void {\r\n      if (!this.owner) return;\r\n  \r\n      this.owner.unbind(this.name!, this.fn!);\r\n  \r\n      this.owner = null;\r\n      this.name = null;\r\n      this.fn = null;\r\n    }\r\n  \r\n    public call(): void {\r\n      if (!this.fn) return;\r\n  \r\n      this.fn.call(\r\n        this.owner!,\r\n        arguments[0],\r\n        arguments[1],\r\n        arguments[2],\r\n        arguments[3],\r\n        arguments[4],\r\n        arguments[5],\r\n        arguments[6],\r\n        arguments[7]\r\n      );\r\n    }\r\n  \r\n    public on(name: string, fn: Function): EventHandle {\r\n      return this.owner!.on(name, fn);\r\n    }\r\n  \r\n  }","export class GUID {\r\n\r\n    /**\r\n     * 创建GUID唯一标志，注意：采用大数法，有很小的可能性会重复，一般够用；\r\n     */\r\n    public static create(): string {\r\n      return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c: string) {\r\n        let r = Math.random() * 16 | 0,\r\n          v = (c === 'x') ? r : (r & 0x3 | 0x8);\r\n        return v.toString(16);\r\n      });\r\n    }\r\n  \r\n  }","export * from './events';\r\nexport * from './editor';\r\nexport * from './observer';\r\nexport * from './tools';\r\nexport * from './guid';\r\nexport * from './ajax';\r\nexport * from './very-light';\r\nexport * from './very-camera';","import { Events } from './events';\r\n\r\n//  TODO： 当前暂不考虑赋值会超出现有类型的情况，比如原来是个number，赋值为了array；\r\nexport class Observer extends Events {\r\n\r\n    public get className(): string {\r\n        return 'Observer';\r\n    }\r\n\r\n    public origin: any;\r\n\r\n    private SEPARATOR: string = '.';\r\n\r\n\r\n    private _destroyed: boolean;\r\n    public _path: string;\r\n    // TODO\r\n    public _keys: string[]; // 记录对象的key、value值；\r\n\r\n\r\n    public _data: { [key: string]: any }; // 采用此对象，完整记录所有值；\r\n    public _data2: { [key: string]: any }; // 采用此对象，完整记录所有值；\r\n    public _dataType: { [key: string]: boolean } = {}; // 暂时只判断是否为array分拆而成的类型；\r\n    public _dataType2: { [key: string]: boolean } = {}; // 暂时只判断是否为array分拆而成的类型；\r\n\r\n\r\n\r\n\r\n    public _parent: any; // 当前父物体\r\n    // public _parentPath: string;\r\n    private _parentField: any;\r\n    private _parentKey: any;\r\n\r\n    private _silent: boolean;\r\n\r\n    public history!: History;\r\n    // private sync!: History;\r\n\r\n    public node: any = null;\r\n\r\n    public reparenting: boolean = false;\r\n    private _pathsWithDuplicates: { [key: string]: boolean } = {};\r\n\r\n    // entity, assets, components: script, 一般components, selector, history\r\n    public constructor(data: any, options?: any) {\r\n        super();\r\n\r\n        this.origin = data;\r\n        options = options || {};\r\n\r\n\r\n\r\n\r\n\r\n        this._destroyed = false;\r\n        this._path = '';\r\n        this._keys = [];\r\n        this._data = {};\r\n\r\n        this._data2 = {};\r\n\r\n        // array paths where duplicate entries are allowed - normally\r\n        // we check if an array already has a value before inserting it\r\n        // but if the array path is in here we'll allow it\r\n        if (options.pathsWithDuplicates) {\r\n            this._pathsWithDuplicates = {};\r\n            for (let i = 0; i < options.pathsWithDuplicates.length; i++) {\r\n                this._pathsWithDuplicates[options.pathsWithDuplicates[i]] = true;\r\n            }\r\n        }\r\n\r\n        this.patchData(data);\r\n\r\n        // for (let ke in this._data) {\r\n        //   debug.log('key: ' + ke);\r\n        //   debug.log(this._data[ke]);\r\n        // }\r\n\r\n        // this._parent = options.parent || null;\r\n        // this._parentPath = options.parentPath || '';\r\n        // this._parentField = options.parentField || null;\r\n        // this._parentKey = options.parentKey || null;\r\n\r\n        this._silent = false;\r\n    }\r\n\r\n    public patchData(data: any): void {\r\n        if (typeof data !== 'object') {\r\n            debug.warn(this.className + ': 不是正确的json对象，打印：\\n' + data);\r\n            return;\r\n        }\r\n\r\n        for (let key in data) {\r\n            if (typeof data[key] === 'object') {\r\n                // 对象属性\r\n                // debug.log('对象属性：' + key);\r\n                // debug.log(data[key]);\r\n                // this._prepare(this, key, data[key]);\r\n                this.parserObject(key, key, data[key]);\r\n            } else {\r\n                // 一般属性\r\n                // debug.log('一般属性：' + key);\r\n                // debug.log(data[key]);\r\n                this.set(key, data[key]);\r\n                this._dataType[key] = false;\r\n                this._dataType2[key] = false;\r\n                // this.set(key, data[key]);\r\n            }\r\n        }\r\n    }\r\n\r\n    // TODO: 若设置值为object，需要再parse\r\n    public set(path: string, value: any): void {\r\n        // console.warn(path + ' : ' + value);\r\n        let oldValue = this._data[path];\r\n        // console.warn(path);\r\n        // console.warn(value);\r\n        let keys = path.split('.');\r\n        let parentID = '';\r\n        for (let i = 0; i < keys.length - 1; i++) {\r\n            if (i === 0) {\r\n                parentID = keys[i];\r\n            } else {\r\n                parentID += this.SEPARATOR + keys[i];\r\n            }\r\n        }\r\n        // 数组处理，其他形式暂不考虑\r\n        if (keys.length > 1 && this._dataType[path]) {\r\n            let index = parseInt(keys[keys.length - 1]);\r\n            this._data[path] = value;\r\n            // 上一级数组修改\r\n            this._data[parentID][index] = value;\r\n        } else {\r\n            // if (value instanceof Array) {\r\n            //     value = value.slice(0);\r\n            // }\r\n            this._data[path] = value;\r\n            this.updateChildData(path, value);\r\n            this._data2[path] = value;\r\n        }\r\n        // console.warn(this._data);\r\n\r\n        // if (parentID && this._dataType2[parentID] && this.isNumber(keys[keys.length - 1])) {\r\n        //     this._data2[parentID][parseInt(keys[keys.length - 1])] = value;\r\n        // }\r\n\r\n        this.emit(path + ':set', value, oldValue);\r\n        this.emit('*:set', path, value, oldValue);\r\n    }\r\n\r\n    private isNumber(str: string): boolean {\r\n        var n = Number(str);\r\n        return !isNaN(n) ? true : false;\r\n    }\r\n\r\n    private updateChildData(path: string, value: any): void {\r\n        if (value instanceof Array) {\r\n            for (let key in this._data) {\r\n                if (key.startsWith(path + this.SEPARATOR)) {\r\n                    delete this._data[key];\r\n                    delete this._dataType[key];\r\n                }\r\n            }\r\n            let newPath = '';\r\n            for (let i = 0; i < value.length; i++) {\r\n                newPath = path + this.SEPARATOR + i.toString();\r\n                this._data[newPath] = value[i];\r\n                this._dataType[newPath] = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    // TODO\r\n    public unset(path: string, value: any): boolean {\r\n        // console.log(path + ' : ' + value);\r\n        if (!this.has(path)) {\r\n            return false;\r\n        }\r\n        let oldValue = this._data[path];\r\n        delete this._data[path];\r\n        delete this._dataType[path];\r\n\r\n        delete this._data2[path];\r\n        delete this._dataType2[path];\r\n\r\n        this.emit(path + ':set', value, oldValue);\r\n        this.emit('*:set', path, value, oldValue);\r\n\r\n        return true;\r\n    }\r\n\r\n    // 在数组的某个指定位置增加值\r\n    public insert(path: string, value: any, ind: number | undefined): boolean {\r\n        // console.error(path + ':insert-value: ' + value);\r\n        // console.warn(this._data);\r\n        if (!this.has(path) || !(this._data[path] instanceof Array)) {\r\n            return false;\r\n        }\r\n        let arr = this._data[path];\r\n        if (value instanceof Array) {\r\n            value = value.slice(0);\r\n        }\r\n        // if (!this._pathsWithDuplicates || !this._pathsWithDuplicates[path]) {\r\n        //     if (arr.indexOf(value) !== -1) {\r\n        //         return false;\r\n        //     }\r\n        // }\r\n        if (ind === undefined) {\r\n            arr.push(value);\r\n            ind = arr.length - 1;\r\n        } else {\r\n            arr.splice(ind, 0, value);\r\n        }\r\n        this.updateChildData(path, arr);\r\n        // TODO\r\n        // let arr2 = this._data2[path];\r\n        // console.error(arr2);\r\n        // if (arr2) {\r\n        //     // if (!this._pathsWithDuplicates || !this._pathsWithDuplicates[path]) {\r\n        //     //     if (arr2.indexOf(value) !== -1) {\r\n        //     //         return false;\r\n        //     //     }\r\n        //     // }\r\n        //     if (ind === undefined) {\r\n        //         arr2.push(value);\r\n        //     } else {\r\n        //         arr2.splice(ind, 0, value);\r\n        //     }\r\n        // }\r\n        // console.error(arr2);\r\n        \r\n        // console.warn(this._data);\r\n        this.emit(path + ':insert', value, ind);\r\n        this.emit('*:insert', path, value, ind);\r\n\r\n        return true;\r\n    }\r\n\r\n    // 删除数组指定某个序号的值\r\n    public remove(path: string, ind: number): boolean {\r\n        if (!this.has(path) || !(this._data[path] instanceof Array)) {\r\n            return false;\r\n        }\r\n        let arr = this._data[path];\r\n        if (arr.length < ind) return false;\r\n        let value = arr[ind];\r\n        arr.splice(ind, 1);\r\n        this.updateChildData(path, arr);\r\n\r\n        // TODO\r\n        // let arr2 = this._data2[path];\r\n        // if (arr2 && arr2.length >= ind) {\r\n        //     arr2.splice(ind, 1);\r\n        // }\r\n\r\n        this.emit(path + ':remove', value, ind);\r\n        this.emit('*:remove', path, value, ind);\r\n        return true;\r\n    }\r\n\r\n    // 删除数组中的某个value值\r\n    public removeValue(path: string, value: any): boolean {\r\n        if (!this.has(path) || !(this._data[path] instanceof Array)) {\r\n            return false;\r\n        }\r\n        let arr = this._data[path];\r\n        let ind = arr.indexOf(value);\r\n        if (ind === -1) {\r\n            return false;\r\n        }\r\n        let oldValue = arr[ind];\r\n        arr.splice(ind, 1);\r\n        this.updateChildData(path, arr);\r\n\r\n        // TODO\r\n        // let arr2 = this._data2[path];\r\n        // if (arr2 && ind >= 0) {\r\n        //     arr2.splice(ind, 1);\r\n        // }\r\n\r\n        // console.warn('删除');\r\n        // console.warn(this._data);\r\n        // console.warn(this._data2);\r\n\r\n        this.emit(path + ':remove', oldValue, ind);\r\n        this.emit('*:remove', path, oldValue, ind);\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    public move(path: string, indOld: number, indNew: number): boolean {\r\n        if (!this.has(path) || !(this._data[path] instanceof Array)) {\r\n            return false;\r\n        }\r\n\r\n        let indNew2 = indNew;\r\n\r\n        let arr = this._data[path];\r\n        if (arr.length < indOld || arr.length < indNew || indOld === indNew) return false;\r\n        let oldValue = arr[indOld]\r\n        arr.splice(indOld, 1);\r\n        if (indNew === -1) indNew = arr.length;\r\n        arr.splice(indNew, 0, oldValue);\r\n        this.updateChildData(path, arr);\r\n\r\n        // TODO\r\n        // let arr2 = this._data2[path];\r\n        // if (arr2) {\r\n        //     if (arr2.length < indOld || arr2.length < indNew2 || indOld === indNew2) {\r\n\r\n        //     } else {\r\n        //         let oldValue2 = arr2[indOld]\r\n        //         arr2.splice(indOld, 1);\r\n        //         if (indNew2 === -1) indNew2 = arr2.length;\r\n        //         arr2.splice(indNew2, 0, oldValue2);\r\n        //     }\r\n        // }\r\n\r\n        this.emit(path + ':move', oldValue, indNew, indOld);\r\n        this.emit('*:move', path, oldValue, indNew, indOld);\r\n        return true;\r\n    }\r\n\r\n    public parserObject(prefix: string, key: string, value: any): void {\r\n        // 先保存一份\r\n        this.set(prefix, value);\r\n        this._dataType[prefix] = false;\r\n\r\n        let path: string;\r\n        let type: string = typeof value;\r\n\r\n        if (type === 'object' && value instanceof Array) {\r\n            this._dataType2[prefix] = true;\r\n            for (let i = 0; i < value.length; i++) {\r\n                path = prefix + this.SEPARATOR + i.toString();\r\n                this.set(path, value[i]);\r\n                this._dataType[path] = true;\r\n                // 数组元素还是对象的情况暂时不处理\r\n            }\r\n        } else if (type === 'object' && value instanceof Object) {\r\n\r\n            for (let key2 in value) {\r\n                if (typeof value[key2] === 'object') {\r\n                    // 递归解析\r\n                    this.parserObject(prefix + this.SEPARATOR + key2, key2, value[key2]);\r\n                } else {\r\n                    path = prefix + this.SEPARATOR + key2;\r\n                    this.set(path, value[key2]);\r\n                    this._dataType[path] = false;\r\n                    this._dataType2[prefix] = false;\r\n\r\n                }\r\n            }\r\n        } else {\r\n            // 目前看，null和undefined会经过这里\r\n            // debug.warn(this.className + '.parserObject, 为止数据类型:' + value);\r\n        }\r\n    }\r\n\r\n\r\n    public has(path: string): boolean {\r\n        return path in this._data;\r\n    }\r\n\r\n    public get(path: string): any {\r\n        if (path in this._data) {\r\n            return this._data[path];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    public propagate(evt: any) {\r\n        let that = this;\r\n        return function (path: string, arg1: any, arg2: any, arg3: any) {\r\n            if (!that._parent) return;\r\n\r\n            let key = that._parentKey;\r\n            if (!key && that._parentField instanceof Array) {\r\n                key = that._parentField.indexOf(that);\r\n\r\n                if (key === -1) return;\r\n            }\r\n\r\n            // path = that._parentPath + '.' + key + '.' + path;\r\n\r\n            let state;\r\n            if (that._silent) state = that._parent.silence();\r\n\r\n            that._parent.emit(path + ':' + evt, arg1, arg2, arg3);\r\n            that._parent.emit('*:' + evt, path, arg1, arg2, arg3);\r\n\r\n            if (that._silent) that._parent.silenceRestore(state);\r\n        };\r\n    }\r\n\r\n\r\n    public destroy(): void {\r\n        if (this._destroyed) return;\r\n        this._destroyed = true;\r\n        this.emit('destroy');\r\n        this.unbind();\r\n    }\r\n}\r\n\r\nexport interface History {\r\n    enabled?: boolean;\r\n}\r\n","export class Tools {\r\n\r\n\r\n    public constructor() {\r\n\r\n    }\r\n\r\n\r\n    public static eulerAngleToRadian(val: BABYLON.Vector3): BABYLON.Vector3 {\r\n        let para: number = Math.PI / 180;\r\n        return val.multiplyByFloats(para, para, para);\r\n    }\r\n\r\n    public static radianToEulerAngle(val: BABYLON.Vector3): BABYLON.Vector3 {\r\n        let para: number = 180 / Math.PI;\r\n        return val.multiplyByFloats(para, para, para);\r\n    }\r\n\r\n    public static vector3ToArray(val: BABYLON.Vector3): number[] {\r\n        return [val.x, val.y, val.z];\r\n    }\r\n\r\n\r\n\r\n}","// import { VeryEngine } from \"../../engine\";\r\n// import { Config } from \"../global\";\r\n// import { Viewport } from \"../viewport\";\r\n\r\n\r\nexport class VeryCamera extends BABYLON.TransformNode {\r\n\r\n    private _canvas: HTMLCanvasElement;\r\n    private _width: number;\r\n    private _height: number;\r\n\r\n    public get mode(): number {\r\n        return this.camera.mode;\r\n    }\r\n    public set mode(val: number) {\r\n        this.camera.mode = val;\r\n    }\r\n\r\n    public get fov(): number {\r\n        return this.camera.fov;\r\n    }\r\n    public set fov(val: number) {\r\n        this.camera.fov = val;\r\n    }\r\n\r\n    public get inertia(): number {\r\n        return this.camera.inertia;\r\n    }\r\n    public set inertia(val: number) {\r\n        this.camera.inertia = val;\r\n    }\r\n\r\n    private _orthoSize: number = 0;\r\n    public get orthoSize(): number {\r\n        if (this.camera.mode === BABYLON.Camera.ORTHOGRAPHIC_CAMERA) {\r\n            this._orthoSize = this.camera!.orthoRight! / this._scene.getEngine().getRenderWidth() / this.camera.viewport.width;\r\n            return this._orthoSize;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n    public set orthoSize(val: number) {\r\n        this._orthoSize = val;\r\n        if (this.camera.mode === BABYLON.Camera.ORTHOGRAPHIC_CAMERA) {\r\n            this.camera.orthoRight = val * this._scene.getEngine().getRenderWidth() * this.camera.viewport.width;\r\n            this.camera.orthoLeft = -val * this._scene.getEngine().getRenderWidth() * this.camera.viewport.width;\r\n            this.camera.orthoTop = val * this._scene.getEngine().getRenderHeight() * this.camera.viewport.height;\r\n            this.camera.orthoBottom = -val * this._scene.getEngine().getRenderHeight() * this.camera.viewport.height;\r\n        }\r\n    }\r\n\r\n    private _clearColor: Nullable<BABYLON.Color4> = null;\r\n    public get clearColor(): Nullable<BABYLON.Color4> {\r\n        if (this._clearColor === null) {\r\n            this._clearColor = new BABYLON.Color4(1, 1, 1, 1);\r\n        }\r\n        this._clearColor.copyFrom(this._scene.clearColor);\r\n        return this._clearColor;\r\n    }\r\n\r\n    public set clearColor(value: Nullable<BABYLON.Color4>) {\r\n        this._clearColor = value;\r\n        if (this._scene.activeCameras[0] === this.camera && value) {\r\n            this._scene.clearColor.copyFrom(value);\r\n        }\r\n    }\r\n\r\n    public camera: BABYLON.TargetCamera;\r\n\r\n    // public get mode()\r\n\r\n    public constructor(camera: BABYLON.TargetCamera, scene: BABYLON.Scene, canvas: HTMLCanvasElement) {\r\n        super(camera.name, scene);\r\n        this.camera = camera;\r\n        camera.name += '-Camera';\r\n        this._canvas = canvas;\r\n        this._width = canvas.width;\r\n        this._height = canvas.height;\r\n        this.position.copyFrom(camera.position);\r\n        this.rotation.copyFrom(camera.rotation);\r\n        camera.parent = this;\r\n        camera.position = BABYLON.Vector3.Zero();\r\n        camera.rotation = BABYLON.Vector3.Zero();\r\n        camera.inputs.clear();\r\n\r\n    }\r\n\r\n    private _backupViewport: BABYLON.Viewport = new BABYLON.Viewport(0, 0, 1, 1);\r\n    private _render: boolean = true;\r\n    public renderCamera(render: boolean): void {\r\n        if (this._render === render) return;\r\n        this._render = render;\r\n        if (render) {\r\n            this.camera.viewport = this._backupViewport.clone();\r\n        } else {\r\n            this._backupViewport = this.camera.viewport.clone();\r\n            this.camera.viewport = new BABYLON.Viewport(0, 0, 0, 0);\r\n        }\r\n    }\r\n\r\n    // orthographic相机在窗口resize后需要刷新；\r\n    public resize(editor?: boolean): void {\r\n        if (this.camera && this._canvas) {\r\n            if (this._canvas.width !== this._width || this._canvas.height !== this._height) {\r\n                this._width = this._canvas.width;\r\n                this._height = this._canvas.height;\r\n\r\n                let w = this._scene.getEngine().getRenderWidth();\r\n                let h = this._scene.getEngine().getRenderHeight();\r\n\r\n                // if (editor) {\r\n                //     if (this !== VeryEngine.viewCamera) {\r\n                //         if (this._render) {\r\n                //             this.camera.viewport = new BABYLON.Viewport(Config.x / w, (h - Config.y) / h, Config.width / w, Config.height / h);\r\n                //         } else {\r\n                //             this._backupViewport = new BABYLON.Viewport(Config.x / w, (h - Config.y) / h, Config.width / w, Config.height / h);\r\n                //         }\r\n                //         // console.warn(this.camera.viewport);\r\n                //     }\r\n                // }\r\n\r\n                if (this.camera.mode === BABYLON.Camera.ORTHOGRAPHIC_CAMERA) {\r\n                    this.camera.orthoRight = this._orthoSize * w * this.camera.viewport.width;\r\n                    this.camera.orthoLeft = -this._orthoSize * w * this.camera.viewport.width;\r\n                    this.camera.orthoTop = this._orthoSize * h * this.camera.viewport.height;\r\n                    this.camera.orthoBottom = -this._orthoSize * h * this.camera.viewport.height;\r\n                } else {\r\n\r\n                }\r\n\r\n                // console.log('设置ortho参数: ' + this._orthoSize);\r\n                // console.warn(this.camera);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n}","export class VeryLight extends BABYLON.TransformNode {\r\n\r\n\r\n    public light: BABYLON.Light;\r\n\r\n    public get type(): number {\r\n        return this.light.getTypeID();\r\n    }\r\n\r\n    public get intensity(): number {\r\n        return this.light.intensity;\r\n    }\r\n    public set intensity(value: number) {\r\n        this.light.intensity = value;\r\n    }\r\n\r\n    public get diffuse(): BABYLON.Color3 {\r\n        return this.light.diffuse;\r\n    }\r\n    public set diffuse(value: BABYLON.Color3) {\r\n        this.light.diffuse = value;\r\n    }\r\n\r\n    public get specular(): BABYLON.Color3 {\r\n        return this.light.specular;\r\n    }\r\n    public set specular(value: BABYLON.Color3) {\r\n        this.light.specular = value;\r\n    }\r\n\r\n    public get angle(): number {\r\n        if (this.light instanceof BABYLON.SpotLight) {\r\n            return this.light.angle;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n    public set angle(value: number) {\r\n        if (this.light instanceof BABYLON.SpotLight) {\r\n            this.light.angle = value;\r\n        }\r\n    }\r\n\r\n    public get exponent(): number {\r\n        if (this.light instanceof BABYLON.SpotLight) {\r\n            return this.light.exponent;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n    public set exponent(value: number) {\r\n        if (this.light instanceof BABYLON.SpotLight) {\r\n            this.light.exponent = value;\r\n        }\r\n    }\r\n\r\n\r\n    public constructor(light: BABYLON.Light, scene: BABYLON.Scene) {\r\n        super(light.name, scene);\r\n        light.name += '-Light';\r\n        // light\r\n        this.light = light;\r\n        this.position.copyFrom(light.getAbsolutePosition());\r\n        // this.rotation = BABYLON.Vector3.Zero();\r\n        light.parent = this;\r\n        \r\n    }\r\n\r\n    // public isEnabled(): boolean {\r\n    //     return this.light.isEnabled();\r\n    // }\r\n\r\n    // public setEnabled(value: boolean) {\r\n    //     this.light.setEnabled(value);\r\n    // }\r\n\r\n}","import { BabylonLoader, Config, Game } from './game';\r\nimport { Editor } from './lib';\r\n\r\nexport * from './index';\r\n\r\nlet game!: Game;\r\nlet initFlag: boolean = false;\r\nlet dataLoaded: boolean = false;\r\nlet dataLoaded2: boolean = false;\r\n\r\n// let path1: string = '';\r\n// let path2: string = '';\r\nlet datas: any;\r\n\r\n// 添加到全局变量\r\nwindow.editor = new Editor();\r\n// if (typeof String.prototype.startsWith != 'function') {\r\n//     String.prototype.startsWith = function (prefix) {\r\n//         return this.slice(0, prefix.length) === prefix;\r\n//     };\r\n// }\r\n\r\nvar projectID = window.location.pathname.substring(9);\r\n\r\n/**\r\n * 初始化入口；\r\n */\r\nfunction initGame(): void {\r\n    let canvas = <HTMLCanvasElement>document.getElementById('renderCanvas');\r\n    let fpsLabel = document.getElementById('fpsLabel');\r\n    if (canvas !== null && fpsLabel !== null) {\r\n        game = new Game(canvas, fpsLabel);\r\n        game.createScene(datas).animate();  // 链式调用\r\n    }\r\n}\r\n\r\nfunction runBtn(): void {\r\n    if (game) {\r\n        game.createScene(datas).animate();\r\n    }\r\n}\r\n\r\nfunction toggleDebug(): void {\r\n    if (game) {\r\n        game.toggleDebug();\r\n    }\r\n}\r\n\r\n\r\nfunction init(): void {\r\n    // 等待表格数据加载完成\r\n    if (dataLoaded && dataLoaded2) {\r\n        initGame();\r\n    } else {\r\n        setTimeout(init, 500);\r\n    }\r\n}\r\n\r\n\r\nfunction loadResources(): void {\r\n\r\n    var projectID = window.location.pathname.substring(9);\r\n    Config.projectID = projectID;\r\n\r\n    ossfile.getJsonConfig(projectID, \"assets\")\r\n    .then(response => {\r\n        var data=JSON.parse(response);\r\n        Config.assetsData = data;\r\n        BabylonLoader.assetsData = data;\r\n        // editor.call('initAssets', Config.assetsData);\r\n        // 加载完assets数据再加载scene数据，便于解析scene过程中使用assets数据\r\n        editor.call('getScenes');\r\n        // 加载表格判断\r\n        if(data.assets) {\r\n            for(let key in data.assets) {\r\n                if(data.assets[key].type === 'table') {\r\n                    Config.tableAssetsID = key;\r\n                    Config.tableName = data.assets[key].name;\r\n                }\r\n            }\r\n        }\r\n        if(Config.tableAssetsID !== '') {\r\n            editor.call('loadTable');\r\n        } else {\r\n            dataLoaded = true;\r\n        }\r\n    })\r\n    .catch(\r\n        error => {\r\n            console.error(error);\r\n        }\r\n    );\r\n\r\n\r\n    editor.method('getScenes', () => {\r\n        // scenes data\r\n        ossfile.getJsonConfig(projectID, \"scenes\")\r\n            .then(response => {\r\n                var data=JSON.parse(response);\r\n                let lastScene: number = data.last;\r\n                Config.scenesData = data.scenes[lastScene];\r\n                Config.sceneIndex = lastScene;\r\n                // console.log(Config.scenesData);\r\n                dataLoaded2 = true;\r\n            })\r\n            .catch(\r\n                error => {\r\n                    console.error(error);\r\n                }\r\n            );\r\n    });\r\n\r\n\r\n    editor.method('loadTable', () => {\r\n        // 获取表格数据\r\n        ossfile.getJsonAsset(projectID,Config.tableAssetsID,\"table\")\r\n            .then(function (response) {\r\n                let data = JSON.parse(response);\r\n                // 先将json转化为字符串\r\n                let tempData = JSON.stringify(data);\r\n                // 对字符串再进行反转义\r\n                tempData = escape2Html(tempData);\r\n                // 转化为json后，赋值给表格\r\n                // hot1.loadData(JSON.parse(tempData).table);\r\n                // console.log(JSON.parse(tempData).table);\r\n                datas = JSON.parse(tempData).table;\r\n                Config.tableData = datas;\r\n                dataLoaded = true;\r\n            })\r\n            .catch(function (error) {\r\n                console.log('load error: ' + error);\r\n            });\r\n    });\r\n\r\n\r\n\r\n}\r\n\r\nloadResources();\r\n\r\n\r\n\r\n\r\n//HTML标签转义（< -> &lt;）\r\nfunction html2Escape(sHtml: any) {\r\n    var temp: any = document.createElement('div');\r\n    temp.textContent != null\r\n        ? (temp.textContent = sHtml)\r\n        : (temp.innerText = sHtml);\r\n    var output = temp.innerHTML;\r\n    temp = null;\r\n    return output;\r\n}\r\n\r\n//HTML标签反转义（&lt; -> <）\r\nfunction escape2Html(str: any) {\r\n    var temp: any = document.createElement('div');\r\n    temp.innerHTML = str;\r\n    var output = temp.innerText || temp.textContent;\r\n    temp = null;\r\n    return output;\r\n}\r\n\r\n// 关联按钮\r\n// document.getElementById('runButton')!.addEventListener('click', runBtn);\r\n\r\n// // 关联按钮\r\n// document.getElementById('debugButton')!.addEventListener('click', toggleDebug);\r\n\r\n// 启动引擎\r\n// 第一次启动时，先异步加载数据后再初始化，后期可以直接点击按钮进行加载；\r\ninit();\r\n// loadData2()\r\n//   .then(function (hot: HandTable) {\r\n//     console.log(hot.getData());\r\n//   }\r\n//   );\r\n"]}