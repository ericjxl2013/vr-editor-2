{"version":3,"sources":["node_modules/_browser-pack@6.1.0@browser-pack/_prelude.js","src/game/babylonloader.ts","src/game/config.ts","src/game/game.ts","src/game/index.ts","src/game/loader.ts","src/game/scenes.ts","src/index.ts","src/lib/ajax.ts","src/lib/editor.ts","src/lib/events.ts","src/lib/guid.ts","src/lib/index.ts","src/lib/observer.ts","src/lib/tools.ts","src/lib/very-camera.ts","src/lib/very-light.ts","src/main.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","lib_1","config_1","BabylonLoader","loadFromBabylonAsset","loadBabylon","asset","assetID","get","dataBabylon","babylonCacheData","parseBabylon","assembleBabylon","ossfile","getJsonAsset","Config","projectID","then","response","data","JSON","parse","babylonData","parsedData_1","materials","forEach","material","id","geometries","vertexData","geometry","meshes","mesh","transformNodes","transformNode","babylonParsedData","hasBabylobData","getBabylonData","hasParsedBabylonData","getParsedBabylonData","meshParseRecursion","tempMeshID","entities","parentID","parent","editor","childs","getChildren","myChildren","k","push","eulerAngle","Tools","radianToEulerAngle","rotation","entityData","name","resource_id","babylon_id","asset_id","position","x","y","z","scale","scaling","children","enabled","isEnabled","checkCollisions","pickable","isPickable","isVisible","tags","type","entity","origin","addSceneData","scenesData","createdAtTime","updateSceneData","now","Date","getFullYear","getRealTime","getMonth","getDate","getHours","getMinutes","str","toString","createCameraWraper","scene","canvas","camera","BABYLON","UniversalCamera","Vector3","maxZ","attachControl","cameraWraper","VeryCamera","orthoSize","createLightWraper","light","createLight","VeryLight","toLowerCase","PointLight","Zero","SpotLight","Math","PI","HemisphericLight","Up","DirectionalLight","Forward","loadLight","parsedLight","Light","Parse","loadReflectionProbe","parsedReflectionProbe","rootUrl","ReflectionProbe","loadAnimation","parsedAnimation","internalClass","_TypeStore","GetClass","loadMaterial","parsedMaterial","Material","loadMultiMaterial","parsedMultiMaterial","MultiMaterial","ParseMultiMaterial","loadMorphTargetManager","managerData","MorphTargetManager","loadSkeleton","parsedSkeleton","Skeleton","loadGeometry","Geometry","loadTransformNode","parsedTransformNode","TransformNode","loadMesh","parsedMesh","Mesh","loadCamera","parsedCamera","Camera","loadAnimationGroup","parsedAnimationGroup","AnimationGroup","setBabylonParent","index","cache","index_1","cache_1","cameras","_waitingParentId","getLastEntryByID","lights","prefix","assetsData","projectData","sceneIndex","__awaiter","babylon","mats","key","assets","newMat","textureUrl","diffuseTexture","texture_id","assetID_1","getUrl","file","hash","_d","sent","specularTexture","assetID_2","reflectionTexture","assetID_3","refractionTexture","assetID_4","emissiveTexture","assetID_5","bumpTexture","assetID_6","opacityTexture","assetID_7","ambientTexture","assetID_8","lightmapTexture","assetID_9","VR","BabylonEngine","Scene","array","parsedVertexData","newTransformNodes_1","node","newMeshes_1","parentMeshes","tempMeshDic_1","tempMeshID_1","element","newID_1","oldID_1","GUID","create","element2","parentId","tempMesh","parentNode","parent_1","len","_c","once","addCamera","projectName","userID","username","sceneName","tableAssetsID","tableName","tableData","loader_1","Game","prototype","createScene","datas","_this","this","_engine","VE_Manager","dispose","Engine","_canvas","engine","window","addEventListener","resize","_scene","Time","start","clearColor","Color4","displayLoadingUI","startVeryEngine","bind","hideLoadingUI","onKeyboardObservable","add","kbInfo","KeyboardEventTypes","KEYDOWN","event","keyCode","ctrlKey","altKey","toggleDebug","runRenderLoop","activeCamera","render","entrance","VeryEngine","init","console","error","objects","onBeforeRenderObservable","count","objectID","getObjectID","getVeryObject","update","animate","width","clientWidth","_showFps","updateFpsPos","scenes","debugLayer","hide","show","embedMode","_fps","innerHTML","getFps","toFixed","canvasElement","fps","Loader","Canvas","_table","document","getElementById","__exportStar","method","assets_data","onLoad","asset_data","assetsLength","Object","getOwnPropertyNames","emit","fn","Observer","meshEntity","childIndex","entitiesIndex","lightWraper","arr","empty","box","canvas2D","panel","btn_1","img_1","text","input","checkbox","babylonloader_1","intensity","has","diffuse","Color3","FromArray","specular","angle","exponent","setEnabled","eulerAngleToRadian","LIGHTTYPEID_HEMISPHERICLIGHT","direction","copyFrom","up","childAndParent","activeCameras","FreeCamera","applyGravity","viewport","Viewport","mode","fov","inertia","MeshBuilder","CreateBox","size","CreateSphere","segments","diameter","CreateGround","height","subdivisions","CreateCylinder","GUI","AdvancedDynamicTexture","CreateFullscreenUI","set2DGUITransform","rootContainer","GUIManager","createCanvas","Rectangle","color","rgba2hsvString","background","thickness","cornerRadius","addControl","Button","CreateImageWithCenterTextButton","textBlock","fontSize","image","source","Image","TextBlock","textWrapping","textHorizontalAlignment","textVerticalAlignment","InputText","placeholderColor","placeholderText","focusedBackground","RadioButton","isChecked","details","insertChild","last","Node","Control","Container","pop","splice","control","left","top","scaleX","scaleY","horizontalAlignment","verticalAlignment","alpha","eulerAngleFloatToRadian","loadingBabylonFlag","toLoadEntity","assembleSceneMesh","item","_a","parsedBabylon","meshID","meshData","recordRotation","vector3ToArray","scal","materialId","geometryId","getGeometryByID","getMaterialByID","matAssetID","warn","Scenes","Ajax","url","AjaxRequest","post","put","delete","param","value","params","args","_super","Events","__extends","_onLoad","_progress","_xhr","status","notJson","responseText","json","ex","msg","message","_onError","evt","_onAbort","_onProgress","progress","lengthComputable","loaded","total","abort","XMLHttpRequest","cookies","withCredentials","upload","query","keys","indexOf","join","parts","split","ends","slice","undefined","open","ignoreContentType","setRequestHeader","headers","FormData","stringify","send","events_1","Editor","_hooks","methodRemove","_i","arguments","Array","apply","stack","defineProperty","_suspendEvents","val","on","events","_events","EventHandle","self","arg0","arg1","arg2","arg3","arg4","arg5","arg6","arg7","unbind","info","log","owner","replace","random","patchData","parserObject","set","_dataType","_dataType2","debug","className","path","oldValue","_data","SEPARATOR","parseInt","updateChildData","_data2","isNumber","Number","isNaN","startsWith","newPath","unset","insert","ind","remove","removeValue","move","indOld","indNew","key2","propagate","that","state","_parent","_parentKey","_parentField","_silent","silence","silenceRestore","destroy","_destroyed","options","reparenting","_pathsWithDuplicates","_path","_keys","pathsWithDuplicates","para","multiplyByFloats","euler_angle","radianFloatToEulerAngle","radian","quatTransfromVector3","quat","vec3","res","qx","qy","qz","qw","w","ix","iy","iz","iw","quatMultiplyVector3","point","num","num2","num3","num4","num5","num6","num7","num8","num9","num10","num11","num12","result","clampAngle","min","max","worldToScreenPoint","world_point","Project","Matrix","Identity","getTransformMatrix","toGlobal","getRenderWidth","getRenderHeight","lerpVector2","vec1","vec2","rate","Vector2","lerpVector3","lerpVector4","Vector4","transformLocalToWorldDirection","local_direction","matrix","computeWorldMatrix","TransformCoordinates","subtract","getAbsolutePosition","rgb2hsv","rgb","diffc","v","diff","rr","gg","bb","s","g","b","h","hsv2rgb","hsv","floor","q","round","rgba","colorStr","to255rgba","hsvString2rgba","colorChange","toSmallrgba","rgba255","rgbaSmall","ORTHOGRAPHIC_CAMERA","_orthoSize","orthoRight","getEngine","orthoLeft","orthoTop","orthoBottom","_clearColor","minZ","renderCamera","_render","_backupViewport","clone","_width","_height","inputs","clear","getTypeID","game_1","dataLoaded","dataLoaded2","location","pathname","substring","login","referrer","catch","getJsonConfig","lastScene","title","tempData","temp","createElement","output","innerText","textContent","escape2Html","table","fpsLabel","setTimeout"],"mappings":"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","file":"publish.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","// import { Tools, AjaxRequest, Ajax, GUID } from \"../../../editor/utility\";\r\nimport { Ajax, AjaxRequest, GUID, Observer, Tools, VeryCamera, VeryLight } from \"../lib\";\r\n// import { VeryEngine } from \"../../../engine\";\r\nimport { Config } from \"./config\";\r\n\r\nexport class BabylonLoader {\r\n\r\n\r\n    public static prefix: string = '/assets/';\r\n\r\n    public static assetsData: any = {};\r\n    public static projectData: any = {};\r\n    public static scenesData: any = {};\r\n    public static sceneIndex: number = 0;\r\n\r\n\r\n    public static babylonCacheData: { [key: string]: any } = {};\r\n    public static babylonParsedData: { [key: string]: any } = {};\r\n\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    public static loadFromBabylonAsset() {\r\n\r\n    }\r\n\r\n\r\n    public static loadBabylon(asset: Observer) {\r\n        let assetID: string = asset.get('id');\r\n        let dataBabylon: any = null;\r\n        if (BabylonLoader.babylonCacheData[assetID]) {\r\n            dataBabylon = BabylonLoader.babylonCacheData[assetID];\r\n            BabylonLoader.parseBabylon(assetID, dataBabylon);\r\n            BabylonLoader.assembleBabylon(assetID, dataBabylon);\r\n        } else {\r\n                // 直接返回babylon json格式内容数据\r\n                ossfile.getJsonAsset(Config.projectID,asset.get('id'),asset.get('name'),asset.get('file.hash')).then(response=>{\r\n                    var data=JSON.parse(response);\r\n                    dataBabylon = data;\r\n                    BabylonLoader.babylonCacheData[assetID] = dataBabylon;\r\n                    BabylonLoader.parseBabylon(assetID, dataBabylon);\r\n                    BabylonLoader.assembleBabylon(assetID, dataBabylon);\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    public static assembleBabylon=async(assetID: string, dataBabylon: any) =>{\r\n        if (dataBabylon !== null) {\r\n            // console.warn(dataBabylon);\r\n            // console.log(dataBabylon.meshes);\r\n            // console.log(dataBabylon.materials);\r\n            // console.log(dataBabylon.lights);\r\n\r\n            // if (dataBabylon.lights) {\r\n            //     dataBabylon.lights.forEach((element: any) => {\r\n            //         BabylonLoader.loadLight(element, VeryEngine.viewScene);\r\n            //     });\r\n            // }\r\n\r\n            // material assemble\r\n            if (BabylonLoader.assetsData.babylon[assetID]) {\r\n                let mats = BabylonLoader.assetsData.babylon[assetID]['materials'];\r\n                let newMats = [];\r\n                for (let key in mats) {\r\n                    if (mats[key].asset_id && BabylonLoader.assetsData.assets[mats[key].asset_id]) {\r\n                        let newMat = BabylonLoader.assetsData.assets[mats[key].asset_id].data;\r\n                        // 检测texture\r\n                        let textureUrl=\"\";\r\n                        if (newMat.diffuseTexture && newMat.diffuseTexture.texture_id) {\r\n                            let assetID=newMat.diffuseTexture.texture_id;\r\n                            textureUrl=await ossfile.getUrl(Config.projectID,assetID,BabylonLoader.assetsData.assets[assetID].name,BabylonLoader.assetsData.assets[assetID].file.hash)\r\n                            newMat.diffuseTexture.name =textureUrl;\r\n                        }\r\n                        if (newMat.specularTexture && newMat.specularTexture.texture_id) {\r\n                            let assetID=newMat.specularTexture.texture_id;\r\n                            textureUrl=await ossfile.getUrl(Config.projectID,assetID,BabylonLoader.assetsData.assets[assetID].name,BabylonLoader.assetsData.assets[assetID].file.hash)\r\n                            newMat.specularTexture.name =textureUrl;\r\n                        }\r\n                        if (newMat.reflectionTexture && newMat.reflectionTexture.texture_id) {\r\n                            let assetID=newMat.reflectionTexture.texture_id;\r\n                            textureUrl=await ossfile.getUrl(Config.projectID,assetID,BabylonLoader.assetsData.assets[assetID].name,BabylonLoader.assetsData.assets[assetID].file.hash)\r\n                            newMat.reflectionTexture.name =textureUrl;\r\n                        }\r\n                        if (newMat.refractionTexture && newMat.refractionTexture.texture_id) {\r\n                            let assetID=newMat.refractionTexture.texture_id;\r\n                            textureUrl=await ossfile.getUrl(Config.projectID,assetID,BabylonLoader.assetsData.assets[assetID].name,BabylonLoader.assetsData.assets[assetID].file.hash)\r\n                            newMat.refractionTexture.name =textureUrl;\r\n                        }\r\n                        if (newMat.emissiveTexture && newMat.emissiveTexture.texture_id) {\r\n                            let assetID=newMat.emissiveTexture.texture_id;\r\n                            textureUrl=await ossfile.getUrl(Config.projectID,assetID,BabylonLoader.assetsData.assets[assetID].name,BabylonLoader.assetsData.assets[assetID].file.hash)\r\n                            newMat.emissiveTexture.name =textureUrl;\r\n                        }\r\n                        if (newMat.bumpTexture && newMat.bumpTexture.texture_id) {\r\n                            let assetID=newMat.bumpTexture.texture_id;\r\n                            textureUrl=await ossfile.getUrl(Config.projectID,assetID,BabylonLoader.assetsData.assets[assetID].name,BabylonLoader.assetsData.assets[assetID].file.hash)\r\n                            newMat.bumpTexture.name =textureUrl;\r\n                        }\r\n                        if (newMat.opacityTexture && newMat.opacityTexture.texture_id) {\r\n                            let assetID=newMat.opacityTexture.texture_id;\r\n                            textureUrl=await ossfile.getUrl(Config.projectID,assetID,BabylonLoader.assetsData.assets[assetID].name,BabylonLoader.assetsData.assets[assetID].file.hash)\r\n                            newMat.opacityTexture.name =textureUrl;\r\n                        }\r\n                        if (newMat.ambientTexture && newMat.ambientTexture.texture_id) {\r\n                            let assetID=newMat.ambientTexture.texture_id;\r\n                            textureUrl=await ossfile.getUrl(Config.projectID,assetID,BabylonLoader.assetsData.assets[assetID].name,BabylonLoader.assetsData.assets[assetID].file.hash)\r\n                            newMat.ambientTexture.name =textureUrl;\r\n                        }\r\n                        if (newMat.lightmapTexture && newMat.lightmapTexture.texture_id) {\r\n                            let assetID=newMat.lightmapTexture.texture_id;\r\n                            textureUrl=await ossfile.getUrl(Config.projectID,assetID,BabylonLoader.assetsData.assets[assetID].name,BabylonLoader.assetsData.assets[assetID].file.hash)\r\n                            newMat.lightmapTexture.name =textureUrl;\r\n                        }\r\n\r\n                        BabylonLoader.loadMaterial(newMat, VR.BabylonEngine.Scene, '');\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            // geometries assemble\r\n            if (dataBabylon.geometries && dataBabylon.geometries.vertexData) {\r\n                dataBabylon.geometries.vertexData.array.forEach((parsedVertexData: any) => {\r\n                    BabylonLoader.loadGeometry(parsedVertexData, VR.BabylonEngine.Scene, '');\r\n                });\r\n            }\r\n\r\n            // transformNode assemble\r\n            let newTransformNodes: Nullable<BABYLON.TransformNode>[] = [];\r\n            if (dataBabylon.transformNodes) {\r\n                dataBabylon.transformNodes.forEach((parsedTransformNode: any) => {\r\n                    let node = BabylonLoader.loadTransformNode(parsedTransformNode, VR.BabylonEngine.Scene, '');\r\n                    newTransformNodes.push(node);\r\n                });\r\n            }\r\n\r\n            // mesh assemble\r\n            let newMeshes: Nullable<BABYLON.AbstractMesh>[] = [];\r\n            let parentMeshes: Nullable<BABYLON.AbstractMesh>[] = [];\r\n\r\n            let tempMeshDic: { [key: string]: Nullable<BABYLON.AbstractMesh> } = {};\r\n\r\n            let tempMeshID: { [key: string]: string } = {};\r\n\r\n            if (dataBabylon.meshes) {\r\n                dataBabylon.meshes.forEach((element: any) => {\r\n                    // 若当前scene数据中已包含mesh id，则重新创建resource_id\r\n                    if (BabylonLoader.scenesData.entities[element.id]) {\r\n                        let newID = GUID.create();\r\n                        let oldID = element.id;\r\n                        // element['babylon_id'] = oldID;\r\n                        tempMeshID[newID] = oldID;\r\n                        element.id = newID;\r\n                        // 遍历，更改parentID\r\n                        dataBabylon.meshes.forEach((element2: any) => {\r\n                            if (element2.parentId === oldID) {\r\n                                element2.parentId = newID;\r\n                                // console.log('change parent id');\r\n                            }\r\n                        });\r\n                    } else {\r\n                        tempMeshID[element.id] = element.id;\r\n                        // element['babylon_id'] = element.id;\r\n                    }\r\n                    // console.error(element);\r\n                });\r\n\r\n                dataBabylon.meshes.forEach((element: any) => {\r\n                    let tempMesh = BabylonLoader.loadMesh(element, VR.BabylonEngine.Scene, '');\r\n                    newMeshes.push(tempMesh);\r\n                    tempMeshDic[element.id] = tempMesh;\r\n                });\r\n            }\r\n\r\n            // parent \r\n            // TODO: 若不为root，则mesh这里也要设定父子关系，parent为null则为当前选中物体\r\n            let parent = null;\r\n            let parentNode: Nullable<BABYLON.Node> = null;\r\n            if (editor.call('selector:type') === 'entity')\r\n                parent = editor.call('selector:items')[0];\r\n\r\n            if (!parent) {\r\n                parent = editor.call('entities:root');\r\n            } else {\r\n                // console.warn(parent);\r\n                // console.warn(parent.node);\r\n                if (parent.node) {\r\n                    parentNode = parent.node;\r\n                }\r\n            }\r\n\r\n\r\n            var entities: any[] = [];\r\n            var data: any[] = [];\r\n\r\n            // TODO: 还没有考虑有transformNode数据的情况\r\n            for (let index = 0, cache = newTransformNodes.length; index < cache; index++) {\r\n                var transformNode = newTransformNodes[index];\r\n                if (transformNode && transformNode._waitingParentId) {\r\n                    transformNode.parent = VR.BabylonEngine.Scene.getLastEntryByID(transformNode._waitingParentId);\r\n                    transformNode._waitingParentId = null;\r\n                }\r\n            }\r\n\r\n            for (let i = 0, len = newMeshes.length; i < len; i++) {\r\n                if (newMeshes[i] !== null) {\r\n                    if (newMeshes[i]!._waitingParentId) {\r\n                        if (tempMeshDic[newMeshes[i]!._waitingParentId!]) {\r\n                            newMeshes[i]!.parent = tempMeshDic[newMeshes[i]!._waitingParentId!];\r\n                        } else {\r\n                            newMeshes[i]!.parent = parentNode;\r\n                            parentMeshes.push(newMeshes[i]);\r\n                        }\r\n                    } else {\r\n                        newMeshes[i]!.parent = parentNode;\r\n                        parentMeshes.push(newMeshes[i]);\r\n                    }\r\n                    newMeshes[i]!._waitingParentId = null;\r\n                    // console.warn(newMeshes[i]);\r\n                }\r\n            }\r\n\r\n\r\n\r\n            for (let i = 0; i < parentMeshes.length; i++) {\r\n                BabylonLoader.meshParseRecursion(parentMeshes[i], assetID, tempMeshID, entities, data);\r\n            }\r\n\r\n            editor.call('selector:history', false);\r\n            editor.call('selector:set', 'entity', [editor.call('entities:get', parentMeshes[0]?.id)]);\r\n            editor.once('selector:change', function () {\r\n                editor.call('selector:history', true);\r\n            });\r\n\r\n            editor.call('make:scene:dirty');\r\n\r\n\r\n            // editor.emit('entities:load', true);\r\n\r\n\r\n            // TODO\r\n            // VeryEngine.viewScene.onPointerObservable.add(pointerInfo => {\r\n            //     switch (pointerInfo.type) {\r\n            //         case BABYLON.PointerEventTypes.POINTERDOWN:\r\n            //             // console.log('down');\r\n            //             if (pointerInfo!.pickInfo!.pickedMesh != null) {\r\n            //                 editor.call('pick', pointerInfo!.pickInfo!.pickedMesh);\r\n            //             } else {\r\n            //                 editor.call('pick', null);\r\n            //             }\r\n            //             // console.log(pointerInfo!.pickInfo!.pickedMesh);\r\n            //             break;\r\n            //     }\r\n            // });\r\n            // });\r\n        }\r\n    }\r\n\r\n    public static parseBabylon(assetID: string, babylonData: any): void {\r\n        if (babylonData) {\r\n            let parsedData: any = {};\r\n            // 材质\r\n            if (babylonData.materials) {\r\n                parsedData.materials = {};\r\n                babylonData.materials.forEach((material: any) => {\r\n                    parsedData.materials[material.id] = material;\r\n                });\r\n            }\r\n            // geometries\r\n            if (babylonData.geometries && babylonData.geometries.vertexData) {\r\n                parsedData.geometries = {};\r\n                babylonData.geometries.vertexData.forEach((geometry: any) => {\r\n                    parsedData.geometries[geometry.id] = geometry;\r\n                });\r\n            }\r\n            // mesh\r\n            if (babylonData.meshes) {\r\n                parsedData.meshes = {};\r\n                babylonData.meshes.forEach((mesh: any) => {\r\n                    parsedData.meshes[mesh.id] = mesh;\r\n                });\r\n            }\r\n            // transformNodes\r\n            if (babylonData.transformNodes) {\r\n                parsedData.transformNodes = {};\r\n                babylonData.transformNodes.forEach((transformNode: any) => {\r\n                    parsedData.transformNodes[transformNode.id] = transformNode;\r\n                });\r\n            }\r\n            BabylonLoader.babylonParsedData[assetID] = parsedData;\r\n        }\r\n    }\r\n\r\n    public static hasBabylobData(assetID: string): boolean {\r\n        return assetID in BabylonLoader.babylonCacheData;\r\n    }\r\n\r\n    public static getBabylonData(assetID: string): any {\r\n        if (assetID in BabylonLoader.babylonCacheData) {\r\n            return BabylonLoader.babylonCacheData[assetID];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    public static hasParsedBabylonData(assetID: string): boolean {\r\n        return assetID in BabylonLoader.babylonParsedData;\r\n    }\r\n\r\n    public static getParsedBabylonData(assetID: string): any {\r\n        if (assetID in BabylonLoader.babylonParsedData) {\r\n            return BabylonLoader.babylonParsedData[assetID];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n\r\n    private static meshParseRecursion(mesh: Nullable<BABYLON.AbstractMesh>, assetID: string, tempMeshID: any, entities: any[], data: any[]): void {\r\n        if (mesh) {\r\n\r\n            let parentID: string = '';\r\n            if (mesh.parent !== null) {\r\n                parentID = mesh.parent!.id;\r\n            } else {\r\n                let root = editor.call('entities:root');\r\n                parentID = root.get('resource_id');\r\n                // root.insert('children', mesh.id);\r\n                // BabylonLoader.updateSceneData(parentID, root._data2);\r\n                // editor.call('make:scene:dirty');\r\n            }\r\n\r\n            var childs = mesh.getChildren();\r\n            var myChildren = [];\r\n            for (let k = 0; k < childs.length; k++) {\r\n                myChildren.push(childs[k].id);\r\n            }\r\n\r\n            let eulerAngle = Tools.radianToEulerAngle(mesh.rotation);\r\n\r\n            let entityData = {\r\n                name: mesh.name,\r\n                resource_id: mesh.id,\r\n                babylon_id: tempMeshID[mesh.id],  // 原始的mesh id\r\n                asset_id: assetID,  // 对应babylon资源id\r\n                parent: parentID,\r\n                position: [mesh.position.x, mesh.position.y, mesh.position.z],\r\n                rotation: [eulerAngle.x, eulerAngle.y, eulerAngle.z],\r\n                scale: [mesh.scaling.x, mesh.scaling.y, mesh.scaling.z],\r\n                children: myChildren,\r\n                enabled: mesh.isEnabled(),\r\n                checkCollisions: mesh.checkCollisions,\r\n                pickable: mesh.isPickable,\r\n                isVisible: mesh.isVisible,\r\n                tags: [],\r\n                type: 'mesh'\r\n            }\r\n\r\n            let entity = editor.call('entities:new', entityData);\r\n            entities.push(entity);\r\n            data.push(entity.origin);\r\n\r\n            for (let k = 0; k < childs.length; k++) {\r\n                BabylonLoader.meshParseRecursion(<BABYLON.AbstractMesh>childs[k], assetID, tempMeshID, entities, data);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    public static addSceneData(resource_id: string, data: any): void {\r\n        BabylonLoader.scenesData.entities[resource_id] = data;\r\n        BabylonLoader.scenesData['modified'] = BabylonLoader.createdAtTime();\r\n    }\r\n\r\n    public static updateSceneData(resource_id: string, data: any): void {\r\n        BabylonLoader.scenesData.entities[resource_id] = data;\r\n        BabylonLoader.scenesData['modified'] = BabylonLoader.createdAtTime();\r\n    }\r\n\r\n    public static createdAtTime(): string {\r\n        var now = new Date();\r\n        var Y = now.getFullYear();\r\n        var m = BabylonLoader.getRealTime(now.getMonth() + 1);\r\n        var d = BabylonLoader.getRealTime(now.getDate());\r\n        var H = BabylonLoader.getRealTime(now.getHours());\r\n        var i = BabylonLoader.getRealTime(now.getMinutes());\r\n        // var s = getRealTime(now.getSeconds());\r\n        return Y + \"-\" + m + \"-\" + d + \" \" + H + \":\" + i;\r\n    }\r\n\r\n    private static getRealTime(str: number): string {\r\n        if (str < 10) {\r\n            return \"0\" + str;\r\n        }\r\n        return str.toString();\r\n    }\r\n\r\n    // hierarchy创建灯光，直接创建wraper\r\n\r\n    public static createCameraWraper(name: string, scene: BABYLON.Scene, canvas: HTMLCanvasElement): VeryCamera {\r\n        var camera = new BABYLON.UniversalCamera(name, new BABYLON.Vector3(0, 100, -200), scene);\r\n        // camera.mode = BABYLON.Camera.ORTHOGRAPHIC_CAMERA;\r\n        // camera.minZ = -800;\r\n        camera.maxZ = 20000;\r\n        camera.attachControl(canvas, true);\r\n        let cameraWraper = new VeryCamera(camera, scene, canvas);\r\n\r\n        cameraWraper.orthoSize = 0.5;\r\n\r\n        return cameraWraper;\r\n    }\r\n\r\n\r\n    public static createLightWraper(type: string, name: string, scene: BABYLON.Scene): VeryLight {\r\n        let light = BabylonLoader.createLight(type, name, scene);\r\n\r\n        let lightWraper = new VeryLight(light, scene);\r\n\r\n        return lightWraper;\r\n    }\r\n\r\n\r\n\r\n    public static createLight(type: string, name: string, scene: BABYLON.Scene): BABYLON.Light {\r\n        let light: BABYLON.Light;\r\n\r\n        type = type.toLowerCase();\r\n        if (type === 'point') {\r\n            light = new BABYLON.PointLight(name, BABYLON.Vector3.Zero(), scene);\r\n        } else if (type === 'spot') {\r\n            light = new BABYLON.SpotLight(name, BABYLON.Vector3.Zero(), new BABYLON.Vector3(0, -1, 0), Math.PI * 0.75, 8, scene);\r\n        } else if (type === 'hemispheric') {\r\n            light = new BABYLON.HemisphericLight(name, BABYLON.Vector3.Up(), scene);\r\n        } else {\r\n            light = new BABYLON.DirectionalLight(name, BABYLON.Vector3.Forward(), scene);\r\n        }\r\n\r\n        return light;\r\n    }\r\n\r\n\r\n    public static loadLight(parsedLight: any, scene: BABYLON.Scene): Nullable<BABYLON.Light> {\r\n        // Light\r\n        if (parsedLight !== undefined && parsedLight !== null) {\r\n            var light = BABYLON.Light.Parse(parsedLight, scene);\r\n            return light;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static loadReflectionProbe(parsedReflectionProbe: any, scene: BABYLON.Scene, rootUrl: string): Nullable<BABYLON.ReflectionProbe> {\r\n        // ReflectionProbe\r\n        if (parsedReflectionProbe !== undefined && parsedReflectionProbe !== null) {\r\n            var reflectionProbe = BABYLON.ReflectionProbe.Parse(parsedReflectionProbe, scene, rootUrl);\r\n            return reflectionProbe;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static loadAnimation(parsedAnimation: any): Nullable<BABYLON.Animation[]> {\r\n        // Animation\r\n        if (parsedAnimation !== undefined && parsedAnimation !== null) {\r\n            const internalClass = BABYLON._TypeStore.GetClass(\"BABYLON.Animation\");\r\n            if (internalClass) {\r\n                let animation = internalClass.Parse(parsedAnimation);\r\n                return animation;\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static loadMaterial(parsedMaterial: any, scene: BABYLON.Scene, rootUrl: string): Nullable<BABYLON.Material> {\r\n        // Material\r\n        if (parsedMaterial !== undefined && parsedMaterial !== null) {\r\n            var mat = BABYLON.Material.Parse(parsedMaterial, scene, rootUrl);\r\n            return mat;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static loadMultiMaterial(parsedMultiMaterial: any, scene: BABYLON.Scene): Nullable<BABYLON.MultiMaterial> {\r\n        // MultiMaterial\r\n        if (parsedMultiMaterial !== undefined && parsedMultiMaterial !== null) {\r\n            var mmat = BABYLON.MultiMaterial.ParseMultiMaterial(parsedMultiMaterial, scene);\r\n            return mmat;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static loadMorphTargetManager(managerData: any, scene: BABYLON.Scene): Nullable<BABYLON.MorphTargetManager> {\r\n        // MorphTargetManager\r\n        if (managerData !== undefined && managerData !== null) {\r\n            var morphTarget = BABYLON.MorphTargetManager.Parse(managerData, scene);\r\n            return morphTarget;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static loadSkeleton(parsedSkeleton: any, scene: BABYLON.Scene): Nullable<BABYLON.Skeleton> {\r\n        // Skeleton\r\n        if (parsedSkeleton !== undefined && parsedSkeleton !== null) {\r\n            var skeleton = BABYLON.Skeleton.Parse(parsedSkeleton, scene);\r\n            return skeleton;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static loadGeometry(vertexData: any, scene: BABYLON.Scene, rootUrl: string): Nullable<BABYLON.Geometry> {\r\n        // Geometry\r\n        if (vertexData !== undefined && vertexData !== null) {\r\n            var geometry = BABYLON.Geometry.Parse(vertexData, scene, rootUrl);\r\n            return geometry;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static loadTransformNode(parsedTransformNode: any, scene: BABYLON.Scene, rootUrl: string): Nullable<BABYLON.TransformNode> {\r\n        // TransformNode\r\n        if (parsedTransformNode !== undefined && parsedTransformNode !== null) {\r\n            var node = BABYLON.TransformNode.Parse(parsedTransformNode, scene, rootUrl);\r\n            return node;\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    public static loadMesh(parsedMesh: any, scene: BABYLON.Scene, rootUrl: string): Nullable<BABYLON.AbstractMesh> {\r\n        // Mesh\r\n        if (parsedMesh !== undefined && parsedMesh !== null) {\r\n            var mesh = <BABYLON.AbstractMesh>BABYLON.Mesh.Parse(parsedMesh, scene, rootUrl);\r\n            return mesh;\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    public static loadCamera(parsedCamera: any, scene: BABYLON.Scene): Nullable<BABYLON.Camera> {\r\n        // Camera\r\n        if (parsedCamera !== undefined && parsedCamera !== null) {\r\n            var camera = BABYLON.Camera.Parse(parsedCamera, scene);\r\n            return camera;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static loadAnimationGroup(parsedAnimationGroup: any, scene: BABYLON.Scene): Nullable<BABYLON.AnimationGroup> {\r\n        // AnimationGroup\r\n        if (parsedAnimationGroup !== undefined && parsedAnimationGroup !== null) {\r\n            var animationGroup = BABYLON.AnimationGroup.Parse(parsedAnimationGroup, scene);\r\n            return animationGroup;\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    public static setBabylonParent(scene: BABYLON.Scene): void {\r\n        let index, cache = 0;\r\n        // Browsing all the graph to connect the dots\r\n        for (let index = 0, cache = scene.cameras.length; index < cache; index++) {\r\n            var camera = scene.cameras[index];\r\n            if (camera._waitingParentId) {\r\n                camera.parent = scene.getLastEntryByID(camera._waitingParentId);\r\n                camera._waitingParentId = null;\r\n            }\r\n        }\r\n\r\n        for (index = 0, cache = scene.lights.length; index < cache; index++) {\r\n            let light = scene.lights[index];\r\n            if (light && light._waitingParentId) {\r\n                light.parent = scene.getLastEntryByID(light._waitingParentId);\r\n                light._waitingParentId = null;\r\n            }\r\n        }\r\n\r\n        //加载完所有资源以后，设立父子关系，加入在自己的引擎中，这些关系有scene数据确立，可以取消此处的操作\r\n        // Connect parents & children and parse actions\r\n        for (index = 0, cache = scene.transformNodes.length; index < cache; index++) {\r\n            var transformNode = scene.transformNodes[index];\r\n            if (transformNode._waitingParentId) {\r\n                transformNode.parent = scene.getLastEntryByID(transformNode._waitingParentId);\r\n                transformNode._waitingParentId = null;\r\n            }\r\n        }\r\n        for (index = 0, cache = scene.meshes.length; index < cache; index++) {\r\n            var mesh = scene.meshes[index];\r\n            if (mesh._waitingParentId) {\r\n                mesh.parent = scene.getLastEntryByID(mesh._waitingParentId);\r\n                mesh._waitingParentId = null;\r\n            }\r\n        }\r\n\r\n        // freeze world matrix application\r\n        // 此部分为babylon隐藏方法\r\n        // for (index = 0, cache = scene.meshes.length; index < cache; index++) {\r\n        //     var currentMesh = scene.meshes[index];\r\n        //     if (currentMesh._waitingFreezeWorldMatrix) {\r\n        //         currentMesh.freezeWorldMatrix();\r\n        //         currentMesh._waitingFreezeWorldMatrix = null;\r\n        //     } else {\r\n        //         currentMesh.computeWorldMatrix(true);\r\n        //     }\r\n        // }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n","import { VeryCamera } from \"../lib\";\r\n\r\nexport class Config {\r\n\r\n    public static prefix: string = '/assets/';\r\n\r\n\r\n    public static projectID: string = '';\r\n    public static projectName: string = '';\r\n    public static projectData: any = {};\r\n\r\n    public static userID: string = '';\r\n    public static username: string = '';\r\n\r\n    public static assetsData: any = {};\r\n\r\n    public static scenesData: any = {};\r\n    public static sceneIndex: number = 0;\r\n    public static sceneName: string = '';\r\n\r\n    public static tableAssetsID: string = '';\r\n    public static tableName: string = '';\r\n    public static tableData: any = null;\r\n\r\n\r\n    public static cameras: VeryCamera[] = [];\r\n\r\n\r\n    public constructor() {\r\n\r\n    }\r\n\r\n\r\n    public static addCamera(camera: VeryCamera): void {\r\n        Config.cameras.push(camera);\r\n    }\r\n\r\n\r\n}","///// <reference path=\"./dts/babylon.d.ts\"/>\r\n\r\nimport { Config } from \"./config\";\r\nimport { Loader } from \"./loader\";\r\n\r\n// import { VE_Objects, VE_Manager } from \"../veryengine/veryEngine\";\r\n\r\n// import { BabylonEngine, Time } from \"../veryengine/babylon\";\r\n\r\nexport class Game {\r\n    private _canvas: HTMLCanvasElement;\r\n    private _fps: HTMLElement;\r\n    private _table!: HTMLElement;\r\n    private _showFps: boolean = true;\r\n    private _engine!: BABYLON.Engine;\r\n    private _scene!: BABYLON.Scene;\r\n    // private _camera!: BABYLON.FreeCamera;\r\n\r\n    constructor(canvasElement: HTMLCanvasElement, fps: HTMLElement) {\r\n        new Loader();\r\n        this._canvas = canvasElement;\r\n        VR.BabylonEngine.Canvas = this._canvas;\r\n        this._fps = fps;\r\n        // this._engine = new BABYLON.Engine(this._canvas, true);\r\n        this._table = document.getElementById(\"VeryTable\")!;\r\n    }\r\n\r\n    /**\r\n     * 创建场景，并且启动\r\n     */\r\n    createScene(datas: any): Game {\r\n\r\n        // console.log('createScene');\r\n\r\n        // 假设有运行中的engine，先停止，重新初始化\r\n        if (this._engine) {\r\n            // TODO: 对象中相关数据dispose\r\n            VR.VE_Manager.dispose();\r\n            // console.log(VE_Manager.projects.projects);\r\n            this._engine.dispose();\r\n        }\r\n        this._engine = new BABYLON.Engine(this._canvas, true);\r\n        VR.BabylonEngine.Engine = this._engine;\r\n        // Resize\r\n        let engine = this._engine;\r\n        window.addEventListener(\"resize\", function () {\r\n            engine.resize();\r\n        });\r\n\r\n        this._scene = new BABYLON.Scene(this._engine);\r\n        VR.BabylonEngine.Scene = this._scene;\r\n        VR.Time.start();\r\n\r\n        this._scene.clearColor = new BABYLON.Color4(116 / 255, 116 / 255, 116 / 255, 1);\r\n\r\n        // TODO: 设定相机\r\n        // var camera = new BABYLON.ArcRotateCamera('Default', 100, 50, 50, new BABYLON.Vector3(0, 0, 0), this._scene);\r\n        // camera.setPosition(new BABYLON.Vector3(0, 1, -20));\r\n        // camera.attachControl(this._canvas, true);\r\n\r\n        // let inputMap: { [key: string]: boolean } = {};\r\n\r\n        // TODO: 加载过度动画开\r\n        // engine.hideLoadingUI();\r\n\r\n        engine.displayLoadingUI();\r\n\r\n        // 加载资源\r\n        // console.warn(Config.scenesData);\r\n        editor.call('scene:raw', Config.scenesData, this.startVeryEngine.bind(this), datas);\r\n\r\n\r\n        engine.hideLoadingUI();\r\n\r\n        // 发布版编辑器\r\n        this._scene.onKeyboardObservable.add(kbInfo => {\r\n            if (kbInfo.type === BABYLON.KeyboardEventTypes.KEYDOWN) {\r\n                if (kbInfo.event.keyCode === 81 && kbInfo.event.ctrlKey && kbInfo.event.altKey) { //Ctrl + Q\r\n                    // console.log('Ctrl + Alt + Q');\r\n                    this.toggleDebug();\r\n                }\r\n            }\r\n        });\r\n\r\n        this._engine.runRenderLoop(() => {\r\n            // if (this._canvas.width !== this._canvas.clientWidth) {\r\n            //     this._engine.resize();\r\n            // }\r\n\r\n            if (this._scene) {\r\n                if (this._scene.activeCamera) {\r\n                    this._scene.render();\r\n                }\r\n            }\r\n\r\n            // if (this._showFps) {\r\n            // \tthis.updateFpsPos();\r\n            // }\r\n\r\n\r\n        });\r\n\r\n        // GUI Test\r\n        // var advancedTexture = BABYLON.GUI.AdvancedDynamicTexture.CreateFullscreenUI(\"UI\");\r\n\r\n        // var createRectangle = function () {\r\n        //     var rect1 = new BABYLON.GUI.Rectangle();\r\n        //     rect1.width = 0.2;\r\n        //     rect1.height = \"40px\";\r\n        //     rect1.cornerRadius = 20;\r\n        //     rect1.color = \"Orange\";\r\n        //     rect1.thickness = 4;\r\n        //     rect1.background = \"green\";\r\n        //     advancedTexture.addControl(rect1);\r\n        //     return rect1;\r\n        // }\r\n\r\n        // createRectangle().horizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_RIGHT;\r\n        // createRectangle().horizontalAlignment = BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_LEFT;\r\n\r\n        // createRectangle().verticalAlignment = BABYLON.GUI.Control.VERTICAL_ALIGNMENT_TOP;\r\n        // createRectangle().verticalAlignment = BABYLON.GUI.Control.VERTICAL_ALIGNMENT_BOTTOM;\r\n\r\n        return this;\r\n    }\r\n\r\n\r\n    startVeryEngine(datas: any): void {\r\n        let entrance: VR.VeryEngine = new VR.VeryEngine();\r\n        // let projectName = \"测试项目\";\r\n        // console.log(`空行数：${hot1.countEmptyRows()}`);\r\n        // console.warn(datas);\r\n        try {\r\n            \r\n            entrance.init(datas, Config.projectName);\r\n        } catch (e) { // TODO: 可能会影响效率\r\n            console.error(e);\r\n        }\r\n\r\n        let objects: VR.VE_Objects = VR.VE_Manager.objects(Config.projectName);\r\n        // 全局渲染帧循环\r\n        this._scene.onBeforeRenderObservable.add(() => {\r\n            // 添加帧函数\r\n            // VR.Time._sum();\r\n\r\n            // 触发响应循环\r\n            for (let i: number = 0; i < objects.count; i++) {\r\n                let objectID: string = objects.getObjectID(i);\r\n                objects.getVeryObject(objectID).update();\r\n            }\r\n\r\n        });\r\n\r\n        this._scene.onKeyboardObservable.add(kbInfo => {\r\n            if (kbInfo.type === BABYLON.KeyboardEventTypes.KEYDOWN) {\r\n                // console.log(kbInfo.event.key);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 启动渲染循环；\r\n     */\r\n    animate(): Game {\r\n        this._engine.runRenderLoop(() => {\r\n            if (this._canvas.width !== this._canvas.clientWidth) {\r\n                this._engine.resize();\r\n            }\r\n\r\n            if (this._scene) {\r\n                // 正交相机画面比例控制\r\n                for (let i = 0, len = Config.cameras.length; i < len; i++) {\r\n                    Config.cameras[i].resize(false);\r\n                }\r\n                this._scene.render();\r\n            }\r\n\r\n            if (this._showFps) {\r\n                this.updateFpsPos();\r\n            }\r\n\r\n\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 属性编辑器UI界面控制；\r\n     */\r\n    toggleDebug(): Game {\r\n        if (this._engine) {\r\n            // Always showing the debug layer, because you can close it by itself\r\n            var scene = this._engine.scenes[0];\r\n            if (scene.debugLayer.isVisible()) {\r\n                scene.debugLayer.hide();\r\n            }\r\n            else {\r\n                // 此处修改了babylon.d.ts文件\r\n                scene.debugLayer.show({ embedMode: true });\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 更新fps显示及显示位置\r\n     */\r\n    updateFpsPos(): void {\r\n        if (this._fps) {\r\n            // this._fps.style.right = document.body.clientWidth - (this._table.clientWidth + this._canvas.clientWidth) + \"px\";\r\n\r\n            this._fps.innerHTML = this._engine.getFps().toFixed() + \" fps\";\r\n        }\r\n    }\r\n}\r\n","export * from './game';\r\nexport * from './scenes';\r\nexport * from './config';\r\nexport * from './loader';\r\nexport * from './babylonloader';","import { Ajax, AjaxRequest, Observer, Tools } from \"../lib\";\r\nimport { BabylonLoader } from \"./babylonloader\";\r\nimport { Config } from \"./config\";\r\n\r\nexport class Loader {\r\n\r\n\r\n    public constructor() {\r\n\r\n        editor.method('initAssets', (assets_data: any) => {\r\n            if (assets_data.assets)\r\n                onLoad(assets_data.assets);\r\n        });\r\n\r\n        // 加载assets数据，data为assets数据\r\n        var onLoad = function (data: any) {\r\n            editor.call('assets:progress', 0.5);\r\n\r\n            var count = 0;\r\n            let assetsLength: number = Object.getOwnPropertyNames(data).length;\r\n            // 加载Asset资源\r\n            var load = function (asset_data: any) {\r\n                editor.call('loadAsset', asset_data, function () {\r\n                    count++;\r\n                    editor.call('assets:progress', (count / assetsLength) * 0.5 + 0.5);\r\n                    if (count >= assetsLength) {\r\n                        editor.call('assets:progress', 1);\r\n                        editor.emit('assets:load');\r\n                    }\r\n                });\r\n            };\r\n\r\n            for (let key in data) {\r\n                load(data[key]);\r\n            }\r\n\r\n        };\r\n\r\n\r\n        editor.method('scene:raw', function (data: any, fn: Function, datas: any) {\r\n            // editor.call('selector:clear');\r\n            // editor.call('entities:clear');\r\n            // editor.call('attributes:clear');\r\n\r\n            // console.log(data);\r\n            // console.log(data.entities);\r\n\r\n            // var total = Object.keys(data.entities).length;\r\n            // var i = 0;\r\n\r\n            // list\r\n            for (var key in data.entities) {\r\n                let entity = new Observer(data.entities[key]);\r\n                // editor.call('entities:add', entity);\r\n                // p.progress = (++i / total) * 0.8 + 0.1;\r\n                // console.warn(entity);\r\n                if (entity.get('type') !== 'root') {\r\n                    editor.call('create:scene:element', entity);\r\n                }\r\n            }\r\n            count = meshEntity.length;\r\n            index = 0;\r\n            for (var i = 0; i < meshEntity.length; i++) {\r\n                // 模型异步加载，因为mesh需要先加载.babylon文件；\r\n                // console.warn('scene创建mesh：' + entity.get('name'));\r\n                editor.call('scene:mesh:create', meshEntity[i], fn, datas);\r\n            }\r\n            if(meshEntity.length === 0) {\r\n                fn(datas);\r\n            };\r\n            // p.progress = 1;\r\n\r\n            // loadedEntities = true;\r\n            editor.emit('entities:load');\r\n        });\r\n\r\n\r\n        var childIndex: { [key: string]: any } = {};\r\n        var entitiesIndex: { [key: string]: any } = {};\r\n        editor.method('create:scene:element', (entity: Observer) => {\r\n            // console.log('create scene element');\r\n            // console.error(entity);\r\n            if (entity.get('type') === 'light') {\r\n                // Lights\r\n                let lightWraper = BabylonLoader.createLightWraper(entity.get('subtype'), entity.get('name'), VR.BabylonEngine.Scene);\r\n\r\n                // lightWraper.light.setEnabled(entity.has('enabled') ? entity.get('enabled') : true);\r\n                lightWraper.light.intensity = entity.has('intensity') ? entity.get('intensity') : 1;\r\n                if (entity.has('diffuse') && entity.get('diffuse').length === 3) {\r\n                    lightWraper.light.diffuse = BABYLON.Color3.FromArray(entity.get('diffuse'));\r\n                }\r\n                if (entity.has('specular') && entity.get('specular').length === 3) {\r\n                    lightWraper.light.specular = BABYLON.Color3.FromArray(entity.get('specular'));\r\n                }\r\n                if (lightWraper.light instanceof BABYLON.SpotLight) {\r\n                    if (entity.has('angle')) {\r\n                        lightWraper.light.angle = entity.get('angle');\r\n                    }\r\n                    if (entity.has('exponent')) {\r\n                        lightWraper.light.exponent = entity.get('exponent');\r\n                    }\r\n                }\r\n\r\n                lightWraper.id = entity.get('resource_id');\r\n                entitiesIndex[entity.get('resource_id')] = lightWraper;\r\n                entity.node = lightWraper;\r\n\r\n                if (entity.has('enabled')) {\r\n                    lightWraper.setEnabled(entity.get('enabled'));\r\n                }\r\n                if (entity.has('position') && entity.get('position').length === 3) {\r\n                    lightWraper.position = BABYLON.Vector3.FromArray(entity.get('position'));\r\n                }\r\n                if (entity.has('rotation') && entity.get('rotation').length === 3) {\r\n                    lightWraper.rotation = Tools.eulerAngleToRadian(BABYLON.Vector3.FromArray(entity.get('rotation')));\r\n                    // 环境光不跟着父物体发生位置变化\r\n                    if (lightWraper.type === BABYLON.Light.LIGHTTYPEID_HEMISPHERICLIGHT) {\r\n                        (<BABYLON.HemisphericLight>lightWraper.light).direction.copyFrom(lightWraper.up);\r\n                    }\r\n                }\r\n                if (entity.has('scale') && entity.get('scale').length === 3) {\r\n                    lightWraper.scaling = BABYLON.Vector3.FromArray(entity.get('scale'));\r\n                }\r\n\r\n                childAndParent(entity, lightWraper);\r\n            } else if (entity.get('type') === 'camera') {\r\n                // Cameras\r\n                // 默认创建universalCamera，把input控制全删除\r\n                let cameraWraper = BabylonLoader.createCameraWraper(entity.get('name'), VR.BabylonEngine.Scene, VR.BabylonEngine.Canvas);\r\n\r\n                // TODO: camera视窗\r\n                // let w = VeryEngine.viewEngine.getRenderWidth();\r\n                // let h = VeryEngine.viewEngine.getRenderHeight();\r\n                // // cameraWraper.camera.viewport = new BABYLON.Viewport(4 / w, (h - 241) / h, 260 / w, 200 / h);\r\n\r\n                // cameraWraper.camera.viewport = new BABYLON.Viewport(Config.x / w, (h - Config.y) / h, Config.width / w, Config.height / h);\r\n                VR.BabylonEngine.Scene.activeCameras.push(cameraWraper.camera);\r\n\r\n                cameraWraper.id = entity.get('resource_id');\r\n                entitiesIndex[entity.get('resource_id')] = cameraWraper;\r\n                entity.node = cameraWraper;\r\n\r\n                if (entity.has('enabled')) {\r\n                    cameraWraper.setEnabled(entity.get('enabled'));\r\n                }\r\n                if (entity.has('position') && entity.get('position').length === 3) {\r\n                    cameraWraper.position = BABYLON.Vector3.FromArray(entity.get('position'));\r\n                }\r\n                if (entity.has('rotation') && entity.get('rotation').length === 3) {\r\n                    cameraWraper.rotation = Tools.eulerAngleToRadian(BABYLON.Vector3.FromArray(entity.get('rotation')));\r\n                }\r\n                if (entity.has('scale') && entity.get('scale').length === 3) {\r\n                    cameraWraper.scaling = BABYLON.Vector3.FromArray(entity.get('scale'));\r\n                }\r\n\r\n                if (entity.has('checkCollisions')) {\r\n                    if (cameraWraper.camera instanceof BABYLON.FreeCamera) {\r\n                        cameraWraper.camera.checkCollisions = entity.get('checkCollisions');\r\n                    }\r\n                }\r\n                if (entity.has('applyGravity')) {\r\n                    if (cameraWraper.camera instanceof BABYLON.FreeCamera) {\r\n                        cameraWraper.camera.applyGravity = entity.get('applyGravity');\r\n                    }\r\n                }\r\n\r\n                if (entity.has('viewport')) {\r\n                    // 编辑器条件下不用管\r\n                    let arr = entity.get('viewport');\r\n                    if (arr && arr.length && arr.length === 4) {\r\n                        cameraWraper.camera.viewport = new BABYLON.Viewport(arr[0], arr[1], arr[2], arr[3]);\r\n                    }\r\n                }\r\n\r\n                // TODO: 设置clearColor\r\n                if (entity.has('clearColor')) {\r\n                    let arr = entity.get('clearColor');\r\n                    if (arr && arr.length && arr.length === 4) {\r\n                        cameraWraper.clearColor = new BABYLON.Color4(arr[0], arr[1], arr[2], arr[3]);\r\n                    }\r\n                } else {\r\n                    cameraWraper.clearColor = new BABYLON.Color4(45 / 255, 145 / 255, 186 / 255, 1);\r\n                }\r\n\r\n                if (entity.has('mode')) {\r\n                    cameraWraper.mode = entity.get('mode');\r\n                }\r\n                if (entity.has('fov')) {\r\n                    cameraWraper.fov = entity.get('fov');\r\n                }\r\n                if (entity.has('inertia')) {\r\n                    cameraWraper.inertia = entity.get('inertia');\r\n                }\r\n                if (entity.has('orthoSize')) {\r\n                    cameraWraper.orthoSize = entity.get('orthoSize');\r\n                }\r\n\r\n                // VeryEngine.addCamera(cameraWraper);\r\n\r\n\r\n                // 设置viewport\r\n                cameraWraper.resize(false);\r\n                // 先不要渲染出来\r\n                // cameraWraper.renderCamera(false);\r\n\r\n                Config.addCamera(cameraWraper);\r\n\r\n                childAndParent(entity, cameraWraper);\r\n            } else if (entity.get('type') === 'empty') {\r\n                // 空物体\r\n                let empty = new BABYLON.TransformNode(entity.get('name'), VR.BabylonEngine.Scene);\r\n                entity.node = empty;\r\n                empty.id = entity.get('resource_id');\r\n                empty.position = BABYLON.Vector3.FromArray(entity.get('position'));\r\n                empty.rotation = Tools.eulerAngleToRadian(BABYLON.Vector3.FromArray(entity.get('rotation')));\r\n                empty.scaling = BABYLON.Vector3.FromArray(entity.get('scale'));\r\n                empty.isEnabled(entity.get('enabled'));\r\n                childAndParent(entity, empty);\r\n            } else if (entity.get('type') === 'primitive') {\r\n                if (entity.get('subtype') && entity.get('subtype') === 'box') {\r\n                    // box\r\n                    var box = BABYLON.MeshBuilder.CreateBox(entity.get('name'), { size: 100 }, VR.BabylonEngine.Scene);\r\n\r\n                    // var box = BABYLON.Mesh.CreateBox(entity.get('name'), 1, VeryEngine.viewScene);\r\n                    entity.node = box;\r\n                    entitiesIndex[entity.get('resource_id')] = box;\r\n                    box.id = entity.get('resource_id');\r\n\r\n                    if (entity.has('enabled')) {\r\n                        box.setEnabled(entity.get('enabled'));\r\n                    }\r\n                    if (entity.has('position') && entity.get('position').length === 3) {\r\n                        box.position = BABYLON.Vector3.FromArray(entity.get('position'));\r\n                    }\r\n                    if (entity.has('rotation') && entity.get('rotation').length === 3) {\r\n                        box.rotation = Tools.eulerAngleToRadian(BABYLON.Vector3.FromArray(entity.get('rotation')));\r\n                    }\r\n                    if (entity.has('scale') && entity.get('scale').length === 3) {\r\n                        box.scaling = BABYLON.Vector3.FromArray(entity.get('scale'));\r\n                    }\r\n                    if (entity.has('checkCollisions')) {\r\n                        box.checkCollisions = entity.get('checkCollisions');\r\n                    }\r\n                    if (entity.has('pickable')) {\r\n                        box.isPickable = entity.get('pickable');\r\n                    }\r\n                    if (entity.has('isVisible')) {\r\n                        box.isVisible = entity.get('isVisible');\r\n                    }\r\n                    // 加载自定义关联材质\r\n                    if (entity.get('material_id')) {\r\n\r\n                    }\r\n                    childAndParent(entity, box);\r\n                } else if (entity.get('subtype') && entity.get('subtype') === 'sphere') {\r\n                    // box\r\n                    var box = BABYLON.MeshBuilder.CreateSphere(entity.get('name'), { segments: 20, diameter: 100 }, VR.BabylonEngine.Scene);\r\n\r\n                    // var box = BABYLON.Mesh.CreateBox(entity.get('name'), 1, VeryEngine.viewScene);\r\n                    entity.node = box;\r\n                    entitiesIndex[entity.get('resource_id')] = box;\r\n                    box.id = entity.get('resource_id');\r\n\r\n                    if (entity.has('enabled')) {\r\n                        box.setEnabled(entity.get('enabled'));\r\n                    }\r\n                    if (entity.has('position') && entity.get('position').length === 3) {\r\n                        box.position = BABYLON.Vector3.FromArray(entity.get('position'));\r\n                    }\r\n                    if (entity.has('rotation') && entity.get('rotation').length === 3) {\r\n                        box.rotation = Tools.eulerAngleToRadian(BABYLON.Vector3.FromArray(entity.get('rotation')));\r\n                    }\r\n                    if (entity.has('scale') && entity.get('scale').length === 3) {\r\n                        box.scaling = BABYLON.Vector3.FromArray(entity.get('scale'));\r\n                    }\r\n                    if (entity.has('checkCollisions')) {\r\n                        box.checkCollisions = entity.get('checkCollisions');\r\n                    }\r\n                    if (entity.has('pickable')) {\r\n                        box.isPickable = entity.get('pickable');\r\n                    }\r\n                    if (entity.has('isVisible')) {\r\n                        box.isVisible = entity.get('isVisible');\r\n                    }\r\n                    // 加载自定义关联材质\r\n                    if (entity.get('material_id')) {\r\n\r\n                    }\r\n                    childAndParent(entity, box);\r\n                } else if (entity.get('subtype') && entity.get('subtype') === 'plane') {\r\n                    // box\r\n                    var box = BABYLON.MeshBuilder.CreateGround(entity.get('name'), { width: 5000, height: 5000, subdivisions: 10 }, VR.BabylonEngine.Scene);\r\n\r\n                    // var box = BABYLON.Mesh.CreateBox(entity.get('name'), 1, VeryEngine.viewScene);\r\n                    entity.node = box;\r\n                    entitiesIndex[entity.get('resource_id')] = box;\r\n                    box.id = entity.get('resource_id');\r\n\r\n                    if (entity.has('enabled')) {\r\n                        box.setEnabled(entity.get('enabled'));\r\n                    }\r\n                    if (entity.has('position') && entity.get('position').length === 3) {\r\n                        box.position = BABYLON.Vector3.FromArray(entity.get('position'));\r\n                    }\r\n                    if (entity.has('rotation') && entity.get('rotation').length === 3) {\r\n                        box.rotation = Tools.eulerAngleToRadian(BABYLON.Vector3.FromArray(entity.get('rotation')));\r\n                    }\r\n                    if (entity.has('scale') && entity.get('scale').length === 3) {\r\n                        box.scaling = BABYLON.Vector3.FromArray(entity.get('scale'));\r\n                    }\r\n                    if (entity.has('checkCollisions')) {\r\n                        box.checkCollisions = entity.get('checkCollisions');\r\n                    }\r\n                    if (entity.has('pickable')) {\r\n                        box.isPickable = entity.get('pickable');\r\n                    }\r\n                    if (entity.has('isVisible')) {\r\n                        box.isVisible = entity.get('isVisible');\r\n                    }\r\n                    // 加载自定义关联材质\r\n                    if (entity.get('material_id')) {\r\n\r\n                    }\r\n                    childAndParent(entity, box);\r\n                } else if (entity.get('subtype') && entity.get('subtype') === 'cylinder') {\r\n                    // box\r\n                    var box = BABYLON.MeshBuilder.CreateCylinder(entity.get('name'), { height: 200, diameter: 100 }, VR.BabylonEngine.Scene);\r\n\r\n                    // var box = BABYLON.Mesh.CreateBox(entity.get('name'), 1, VeryEngine.viewScene);\r\n                    entity.node = box;\r\n                    entitiesIndex[entity.get('resource_id')] = box;\r\n                    box.id = entity.get('resource_id');\r\n\r\n                    if (entity.has('enabled')) {\r\n                        box.setEnabled(entity.get('enabled'));\r\n                    }\r\n                    if (entity.has('position') && entity.get('position').length === 3) {\r\n                        box.position = BABYLON.Vector3.FromArray(entity.get('position'));\r\n                    }\r\n                    if (entity.has('rotation') && entity.get('rotation').length === 3) {\r\n                        box.rotation = Tools.eulerAngleToRadian(BABYLON.Vector3.FromArray(entity.get('rotation')));\r\n                    }\r\n                    if (entity.has('scale') && entity.get('scale').length === 3) {\r\n                        box.scaling = BABYLON.Vector3.FromArray(entity.get('scale'));\r\n                    }\r\n                    if (entity.has('checkCollisions')) {\r\n                        box.checkCollisions = entity.get('checkCollisions');\r\n                    }\r\n                    if (entity.has('pickable')) {\r\n                        box.isPickable = entity.get('pickable');\r\n                    }\r\n                    if (entity.has('isVisible')) {\r\n                        box.isVisible = entity.get('isVisible');\r\n                    }\r\n                    // 加载自定义关联材质\r\n                    if (entity.get('material_id')) {\r\n\r\n                    }\r\n                    childAndParent(entity, box);\r\n                }\r\n                // console.warn(box);\r\n            } else if (entity.get('type') === 'mesh') {\r\n                // 模型异步加载，因为mesh需要先加载.babylon文件；\r\n                // console.warn('scene创建mesh：' + entity.get('name'));\r\n                meshEntity.push(entity);\r\n            } else if (entity.get('type') === '2d-gui') {\r\n                if (entity.get('subtype') && entity.get('subtype') === 'root') {\r\n                    let canvas2D = BABYLON.GUI.AdvancedDynamicTexture.CreateFullscreenUI(entity.get('name'));\r\n                    // GUIManager.add2DCanvas(entity.get('resource_id'), canvas2D);\r\n                    entity.node = canvas2D;\r\n                    set2DGUITransform(canvas2D.rootContainer, entity);\r\n                    // GUIManager.addUniqueIDIndex(canvas2D.uniqueId, entity.get('resource_id'));\r\n                    entitiesIndex[entity.get('resource_id')] = canvas2D.rootContainer;\r\n\r\n                    childAndParent(entity, canvas2D.rootContainer);\r\n                    VR.GUIManager.createCanvas(canvas2D);\r\n                } else if (entity.get('subtype') && entity.get('subtype') === 'panel') {\r\n                    let panel = new BABYLON.GUI.Rectangle(entity.get('name'));\r\n                    entity.node = panel;\r\n                    set2DGUITransform(panel, entity);\r\n                    if (entity.has('gui.color')) {\r\n                        panel.color = Tools.rgba2hsvString(entity.get('gui.color'));\r\n                    }\r\n                    if (entity.has('gui.background')) {\r\n                        panel.background = Tools.rgba2hsvString(entity.get('gui.background'));\r\n                    }\r\n                    if (entity.has('gui.thickness')) {\r\n                        panel.thickness = entity.get('gui.thickness')\r\n                    }\r\n                    if (entity.has('gui.cornerRadius')) {\r\n                        panel.cornerRadius = entity.get('gui.cornerRadius')\r\n                    }\r\n                    entitiesIndex[entity.get('resource_id')] = panel;\r\n\r\n                    childAndParent(entity, panel);\r\n                    VR.GUIManager.addControl(panel);\r\n                } else if (entity.get('subtype') && entity.get('subtype') === 'button') {\r\n                    let btn = BABYLON.GUI.Button.CreateImageWithCenterTextButton(entity.get('name'), '', '');\r\n                    entity.node = btn;\r\n                    set2DGUITransform(btn, entity);\r\n                    if (entity.has('gui.color')) {\r\n                        btn.color = Tools.rgba2hsvString(entity.get('gui.color'));\r\n                    }\r\n                    if (entity.has('gui.background')) {\r\n                        btn.background = Tools.rgba2hsvString(entity.get('gui.background'));\r\n                    }\r\n                    if (entity.has('gui.thickness')) {\r\n                        btn.thickness = entity.get('gui.thickness')\r\n                    }\r\n                    if (entity.has('gui.cornerRadius')) {\r\n                        btn.cornerRadius = entity.get('gui.cornerRadius')\r\n                    }\r\n                    if (entity.has('gui.text')) {\r\n                        btn.textBlock!.text = entity.get('gui.text')\r\n                    }\r\n                    if (entity.has('gui.fontSize')) {\r\n                        btn.fontSize = entity.get('gui.fontSize');\r\n                        btn.textBlock!.fontSize = entity.get('gui.fontSize');\r\n                    }\r\n                    if (entity.has('gui.textColor')) {\r\n                        btn.textBlock!.color = Tools.rgba2hsvString(entity.get('gui.textColor'));\r\n                    }\r\n                    if (entity.has('gui.source') && entity.get('gui.source')) {\r\n                        let assetID = entity.get('gui.source');\r\n                        ossfile.getUrl(Config.projectID, assetID, BabylonLoader.assetsData.assets[assetID].name, BabylonLoader.assetsData.assets[assetID].file.hash).then(response => {\r\n                            btn.image!.source = response;\r\n                        });\r\n                    }\r\n                    entitiesIndex[entity.get('resource_id')] = btn;\r\n\r\n                    childAndParent(entity, btn);\r\n                    VR.GUIManager.addControl(btn);\r\n                } else if (entity.get('subtype') && entity.get('subtype') === 'image') {\r\n                    let img = new BABYLON.GUI.Image(entity.get('name'), '');\r\n                    entity.node = img;\r\n                    set2DGUITransform(img, entity);\r\n                    if (entity.has('gui.color')) {\r\n                        img.color = Tools.rgba2hsvString(entity.get('gui.color'));\r\n                    }\r\n                    if (entity.has('gui.source') && entity.get('gui.source')) {\r\n                        let assetID = entity.get('gui.source');\r\n                        ossfile.getUrl(Config.projectID, assetID, BabylonLoader.assetsData.assets[assetID].name, BabylonLoader.assetsData.assets[assetID].file.hash).then(response => {\r\n                            img.source = response;\r\n                        });\r\n                    }\r\n\r\n                    entitiesIndex[entity.get('resource_id')] = img;\r\n\r\n                    childAndParent(entity, img);\r\n                    VR.GUIManager.addControl(img);\r\n                } else if (entity.get('subtype') && entity.get('subtype') === 'text') {\r\n                    let text = new BABYLON.GUI.TextBlock(entity.get('name'), '');\r\n                    entity.node = text;\r\n                    set2DGUITransform(text, entity);\r\n                    if (entity.has('gui.color')) {\r\n                        text.color = Tools.rgba2hsvString(entity.get('gui.color'));\r\n                    }\r\n                    if (entity.has('gui.fontSize')) {\r\n                        text.fontSize = entity.get('gui.fontSize');\r\n                    }\r\n                    if (entity.has('gui.text')) {\r\n                        text.text = entity.get('gui.text');\r\n                    }\r\n                    if (entity.has('gui.textWrapping')) {\r\n                        text.textWrapping = entity.get('gui.textWrapping');\r\n                    }\r\n                    if (entity.has('gui.textHorizontalAlignment')) {\r\n                        text.textHorizontalAlignment = entity.get('gui.textHorizontalAlignment');\r\n                    }\r\n                    if (entity.has('gui.textVerticalAlignment')) {\r\n                        text.textVerticalAlignment = entity.get('gui.textVerticalAlignment');\r\n                    }\r\n                    entitiesIndex[entity.get('resource_id')] = text;\r\n\r\n                    childAndParent(entity, text);\r\n                    VR.GUIManager.addControl(text);\r\n                } else if (entity.get('subtype') && entity.get('subtype') === 'input') {\r\n                    let input = new BABYLON.GUI.InputText(entity.get('name'), '');\r\n                    entity.node = input;\r\n                    set2DGUITransform(input, entity);\r\n                    if (entity.has('gui.color')) {\r\n                        input.color = Tools.rgba2hsvString(entity.get('gui.color'));\r\n                    }\r\n                    if (entity.has('gui.background')) {\r\n                        input.background = Tools.rgba2hsvString(entity.get('gui.background'));\r\n                    }\r\n                    if (entity.has('gui.thickness')) {\r\n                        input.thickness = entity.get('gui.thickness')\r\n                    }\r\n                    if (entity.has('gui.fontSize')) {\r\n                        input.fontSize = entity.get('gui.fontSize');\r\n                    }\r\n                    if (entity.has('gui.placeholderColor')) {\r\n                        input.placeholderColor = Tools.rgba2hsvString(entity.get('gui.placeholderColor'));\r\n                    }\r\n                    if (entity.has('gui.placeholderText')) {\r\n                        input.placeholderText = entity.get('gui.placeholderText');\r\n                    }\r\n                    if (entity.has('gui.focusedBackground')) {\r\n                        input.focusedBackground = Tools.rgba2hsvString(entity.get('gui.focusedBackground'));\r\n                    }\r\n                    if (entity.has('gui.text')) {\r\n                        input.text = entity.get('gui.text');\r\n                    }\r\n                    entitiesIndex[entity.get('resource_id')] = input;\r\n\r\n                    childAndParent(entity, input);\r\n                    VR.GUIManager.addControl(input);\r\n                } else if (entity.get('subtype') && entity.get('subtype') === 'checkbox') {\r\n                    let checkbox = new BABYLON.GUI.RadioButton(entity.get('name'));\r\n                    entity.node = checkbox;\r\n                    set2DGUITransform(checkbox, entity);\r\n                    if (entity.has('gui.color')) {\r\n                        checkbox.color = Tools.rgba2hsvString(entity.get('gui.color'));\r\n                    }\r\n                    if (entity.has('gui.background')) {\r\n                        checkbox.background = Tools.rgba2hsvString(entity.get('gui.background'));\r\n                    }\r\n                    if (entity.has('gui.thickness')) {\r\n                        checkbox.thickness = entity.get('gui.thickness')\r\n                    }\r\n                    if (entity.has('gui.isChecked')) {\r\n                        checkbox.isChecked = entity.get('gui.isChecked')\r\n                    }\r\n                    entitiesIndex[entity.get('resource_id')] = checkbox;\r\n\r\n                    childAndParent(entity, checkbox);\r\n                    VR.GUIManager.addControl(checkbox);\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n        let childAndParent = (entity: Observer, node: Nullable<BABYLON.Node> | Nullable<BABYLON.GUI.Control>) => {\r\n            // children\r\n            let children = entity.get('children');\r\n            for (var i = 0; i < children.length; i++) {\r\n                childIndex[children[i]] = {\r\n                    index: i,\r\n                    parent: node\r\n                };\r\n\r\n                if (entitiesIndex[children[i]]) {\r\n                    insertChild(node, entitiesIndex[children[i]], i, entity.get('resource_id'));\r\n                }\r\n            }\r\n\r\n            // parenting\r\n            if (!entity.get('parent')) {\r\n                // babylon root\r\n            } else {\r\n                // child\r\n                var details = childIndex[entity.get('resource_id')];\r\n                if (details && details.parent) {\r\n                    insertChild(details.parent, node, details.index, entity.get('resource_id'));\r\n                }\r\n            }\r\n        }\r\n\r\n        let insertChild = (parent: Nullable<BABYLON.Node> | Nullable<BABYLON.GUI.Control>, node: Nullable<BABYLON.Node> | Nullable<BABYLON.GUI.Control>, index: number, resource_id: string) => {\r\n            if (node && node instanceof BABYLON.Node) {\r\n                if (parent === null || parent instanceof BABYLON.Node) {\r\n                    node.parent = parent;\r\n                }\r\n            } else if (node && node instanceof BABYLON.GUI.Control) {\r\n                if (parent instanceof BABYLON.GUI.Container) {\r\n                    parent.addControl(node);\r\n                    let last = parent.children.pop();\r\n                    parent.children.splice(index, 0, last!);\r\n                    // GUIManager.addUniqueIDIndex(node.uniqueId, resource_id);\r\n                }\r\n            }\r\n        }\r\n\r\n        let set2DGUITransform = (control: BABYLON.GUI.Control, entity: Observer) => {\r\n            if (entity.has('gui.isVisible')) {\r\n                control.isVisible = entity.get('gui.isVisible');\r\n            }\r\n            if (entity.has('gui.x')) {\r\n                if (entity.has('gui.xType') && entity.get('gui.xType') === 1) {\r\n                    control.left = entity.get('gui.x') + '%';\r\n                } else {\r\n                    control.left = entity.get('gui.x') + 'px';\r\n                }\r\n            }\r\n            if (entity.has('gui.y')) {\r\n                if (entity.has('gui.yType') && entity.get('gui.yType') === 1) {\r\n                    control.top = entity.get('gui.y') + '%';\r\n                } else {\r\n                    control.top = entity.get('gui.y') + 'px';\r\n                }\r\n            }\r\n            if (entity.has('gui.width')) {\r\n                if (entity.has('gui.widthType') && entity.get('gui.widthType') === 1) {\r\n                    control.width = entity.get('gui.width') + '%';\r\n                } else {\r\n                    control.width = entity.get('gui.width') + 'px';\r\n                }\r\n            }\r\n            if (entity.has('gui.height')) {\r\n                if (entity.has('gui.heightType') && entity.get('gui.heightType') === 1) {\r\n                    control.height = entity.get('gui.height') + '%';\r\n                } else {\r\n                    control.height = entity.get('gui.height') + 'px';\r\n                }\r\n            }\r\n            if (entity.has('gui.scaleX')) {\r\n                control.scaleX = entity.get('gui.scaleX');\r\n            }\r\n            if (entity.has('gui.scaleY')) {\r\n                control.scaleY = entity.get('gui.scaleY');\r\n            }\r\n            if (entity.has('gui.horizontal_alignment')) {\r\n                control.horizontalAlignment = entity.get('gui.horizontal_alignment');\r\n            }\r\n            if (entity.has('gui.vertical_alignment')) {\r\n                control.verticalAlignment = entity.get('gui.vertical_alignment');\r\n            }\r\n            if (entity.has('gui.alpha')) {\r\n                control.alpha = entity.get('gui.alpha');\r\n            }\r\n            if (entity.has('gui.rotation')) {\r\n                control.rotation = Tools.eulerAngleFloatToRadian(entity.get('gui.rotation'));\r\n            }\r\n            // if (entity.has('gui.isHighlighted')) {\r\n            //     control.isHighlighted = entity.get('gui.isHighlighted');\r\n            // }\r\n\r\n        }\r\n\r\n        editor.method('scene:mesh:create', (entity: Observer, fn: Function, datas: any) => {\r\n            loadBabylon(entity, fn, datas);\r\n        });\r\n        let count = 0;\r\n        let index = 0;\r\n        var meshEntity: Observer[] = [];\r\n        let loadingBabylonFlag: { [key: string]: boolean } = {};\r\n        let toLoadEntity: { [key: string]: Observer[] } = {};\r\n        let loadBabylon = async (entity: Observer, fn: Function, datas: any) => {\r\n            let assetID: string = entity.get('asset_id');\r\n            let dataBabylon: any = null;\r\n\r\n            if (BabylonLoader.hasBabylobData(assetID)) {\r\n                dataBabylon = BabylonLoader.getParsedBabylonData(assetID);\r\n                // BabylonLoader.assembleBabylon(assetID, dataBabylon);\r\n                // 关联mesh\r\n                assembleSceneMesh(entity, dataBabylon);\r\n                index++;\r\n                if (index === count) {\r\n                    index = 0; count = 0; meshEntity = [];\r\n                    fn(datas);\r\n                }\r\n            } else {\r\n                if (assetID in loadingBabylonFlag) {\r\n                    toLoadEntity[assetID].push(entity);\r\n                } else {\r\n                    loadingBabylonFlag[assetID] = true;\r\n                    toLoadEntity[assetID] = [entity];\r\n                    // console.warn(BabylonLoader.assetsData);\r\n                    // 直接返回babylon json格式内容数据\r\n                    // 直接返回babylon json格式内容数据\r\n                    var name = BabylonLoader.assetsData.assets[assetID].name;\r\n                    ossfile.getJsonAsset(Config.projectID, assetID, name, BabylonLoader.assetsData.assets[assetID].file.hash).then(response => {\r\n                        dataBabylon = JSON.parse(response);\r\n                        BabylonLoader.babylonCacheData[assetID] = dataBabylon;\r\n                        BabylonLoader.parseBabylon(assetID, dataBabylon);\r\n                        BabylonLoader.parseBabylon(assetID, dataBabylon);\r\n                        dataBabylon = BabylonLoader.getParsedBabylonData(assetID);\r\n                        toLoadEntity[assetID].forEach(async (item: Observer) => {\r\n                            await assembleSceneMesh(item, dataBabylon);\r\n                            index++;\r\n                            if (index == count) {\r\n                                index = 0; count = 0; meshEntity = [];\r\n                                fn(datas);\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        let assembleSceneMesh = async (entity: Observer, parsedBabylon: any) => {\r\n            // TODO: 暂时未考虑TransformNode数据的情况\r\n            if (parsedBabylon) {\r\n                let assetID: string = entity.get('asset_id');\r\n                // 先从.babylon提取原始mesh数据\r\n                let meshID: string = entity.get('babylon_id');\r\n                if (parsedBabylon.meshes[meshID]) {\r\n                    let meshData = parsedBabylon.meshes[meshID];\r\n                    // 结合scene和babylon数据，更新mesh信息\r\n                    meshData.position = entity.has('position') && entity.get('position') ? entity.get('position') : meshData.position;\r\n                    let recordRotation = entity.get('rotation');\r\n                    if (recordRotation && recordRotation.length > 0) {\r\n                        recordRotation = Tools.vector3ToArray(Tools.eulerAngleToRadian(BABYLON.Vector3.FromArray(recordRotation)));\r\n                    } else {\r\n                        recordRotation = meshData.rotation;\r\n                    }\r\n                    meshData.rotation = recordRotation;\r\n                    meshData.scale = entity.has('scale') && entity.get('scale') ? entity.get('scale') : meshData.scal;\r\n                    meshData.name = entity.has('name') && entity.get('name') ? entity.get('name') : meshData.name;\r\n                    meshData.id = entity.has('resource_id') && entity.get('resource_id') ? entity.get('resource_id') : meshData.id;\r\n                    meshData.isEnabled = entity.has('enabled') ? entity.get('enabled') : meshData.isEnabled;\r\n                    meshData.isVisible = entity.has('isVisible') ? entity.get('isVisible') : meshData.isVisible;\r\n                    // TODO：发布状态下，听数据的\r\n                    meshData.pickable = entity.has('pickable') ? entity.get('pickable') : meshData.pickable;\r\n                    // TODO：scene编辑条件下默认就是加载状态；\r\n                    // meshData.pickable = true;\r\n                    meshData.checkCollisions = entity.has('checkCollisions') ? entity.get('checkCollisions') : meshData.checkCollisions;\r\n                    meshData.materialId = entity.has('material_id') ? entity.get('material_id') : meshData.materialId;\r\n                    // 要注意是否为root id\r\n                    meshData.parentId = entity.has('parent') ? entity.get('parent') : meshData.parentId;\r\n\r\n\r\n                    // 判断是否关联了geometry\r\n                    if (meshData.geometryId) {\r\n                        if (VR.BabylonEngine.Scene.getGeometryByID(meshData.geometryId) === null) {\r\n                            if (parsedBabylon.geometries && parsedBabylon.geometries[meshData.geometryId]) {\r\n                                let vertexData = parsedBabylon.geometries[meshData.geometryId];\r\n                                BabylonLoader.loadGeometry(vertexData, VR.BabylonEngine.Scene, '');\r\n                            }\r\n                        }\r\n                    }\r\n                    // 组装material\r\n                    // console.error(meshData.materialId);\r\n                    if (meshData.materialId) {\r\n                        if (VR.BabylonEngine.Scene.getMaterialByID(meshData.materialId) === null) {\r\n                            // console.error(BabylonLoader.assetsData.babylon[assetID]);\r\n                            if (BabylonLoader.assetsData.babylon[assetID]) {\r\n                                let mats = BabylonLoader.assetsData.babylon[assetID]['materials'];\r\n                                if (mats && mats[meshData.materialId]) {\r\n                                    let matAssetID = mats[meshData.materialId].asset_id;\r\n                                    if (BabylonLoader.assetsData.assets[matAssetID]) {\r\n                                        let newMat = BabylonLoader.assetsData.assets[matAssetID].data;\r\n\r\n                                        // 检测texture\r\n                                        let textureUrl = \"\";\r\n                                        if (newMat.diffuseTexture && newMat.diffuseTexture.texture_id) {\r\n                                            let assetID = newMat.diffuseTexture.texture_id;\r\n                                            textureUrl = await ossfile.getUrl(Config.projectID, assetID, BabylonLoader.assetsData.assets[assetID].name, BabylonLoader.assetsData.assets[assetID].file.hash)\r\n                                            newMat.diffuseTexture.name = textureUrl;\r\n                                        }\r\n                                        if (newMat.specularTexture && newMat.specularTexture.texture_id) {\r\n                                            let assetID = newMat.specularTexture.texture_id;\r\n                                            textureUrl = await ossfile.getUrl(Config.projectID, assetID, BabylonLoader.assetsData.assets[assetID].name, BabylonLoader.assetsData.assets[assetID].file.hash)\r\n                                            newMat.specularTexture.name = textureUrl;\r\n                                        }\r\n                                        if (newMat.reflectionTexture && newMat.reflectionTexture.texture_id) {\r\n                                            let assetID = newMat.reflectionTexture.texture_id;\r\n                                            textureUrl = await ossfile.getUrl(Config.projectID, assetID, BabylonLoader.assetsData.assets[assetID].name, BabylonLoader.assetsData.assets[assetID].file.hash)\r\n                                            newMat.reflectionTexture.name = textureUrl;\r\n                                        }\r\n                                        if (newMat.refractionTexture && newMat.refractionTexture.texture_id) {\r\n                                            let assetID = newMat.refractionTexture.texture_id;\r\n                                            textureUrl = await ossfile.getUrl(Config.projectID, assetID, BabylonLoader.assetsData.assets[assetID].name, BabylonLoader.assetsData.assets[assetID].file.hash)\r\n                                            newMat.refractionTexture.name = textureUrl;\r\n                                        }\r\n                                        if (newMat.emissiveTexture && newMat.emissiveTexture.texture_id) {\r\n                                            let assetID = newMat.emissiveTexture.texture_id;\r\n                                            textureUrl = await ossfile.getUrl(Config.projectID, assetID, BabylonLoader.assetsData.assets[assetID].name, BabylonLoader.assetsData.assets[assetID].file.hash)\r\n                                            newMat.emissiveTexture.name = textureUrl;\r\n                                        }\r\n                                        if (newMat.bumpTexture && newMat.bumpTexture.texture_id) {\r\n                                            let assetID = newMat.bumpTexture.texture_id;\r\n                                            textureUrl = await ossfile.getUrl(Config.projectID, assetID, BabylonLoader.assetsData.assets[assetID].name, BabylonLoader.assetsData.assets[assetID].file.hash)\r\n                                            newMat.bumpTexture.name = textureUrl;\r\n                                        }\r\n                                        if (newMat.opacityTexture && newMat.opacityTexture.texture_id) {\r\n                                            let assetID = newMat.opacityTexture.texture_id;\r\n                                            textureUrl = await ossfile.getUrl(Config.projectID, assetID, BabylonLoader.assetsData.assets[assetID].name, BabylonLoader.assetsData.assets[assetID].file.hash)\r\n                                            newMat.opacityTexture.name = textureUrl;\r\n                                        }\r\n                                        if (newMat.ambientTexture && newMat.ambientTexture.texture_id) {\r\n                                            let assetID = newMat.ambientTexture.texture_id;\r\n                                            textureUrl = await ossfile.getUrl(Config.projectID, assetID, BabylonLoader.assetsData.assets[assetID].name, BabylonLoader.assetsData.assets[assetID].file.hash)\r\n                                            newMat.ambientTexture.name = textureUrl;\r\n                                        }\r\n                                        if (newMat.lightmapTexture && newMat.lightmapTexture.texture_id) {\r\n                                            let assetID = newMat.lightmapTexture.texture_id;\r\n                                            textureUrl = await ossfile.getUrl(Config.projectID, assetID, BabylonLoader.assetsData.assets[assetID].name, BabylonLoader.assetsData.assets[assetID].file.hash)\r\n                                            newMat.lightmapTexture.name = textureUrl;\r\n                                        }\r\n\r\n                                        BabylonLoader.loadMaterial(newMat, VR.BabylonEngine.Scene, '');\r\n                                    } else {\r\n                                        console.warn('scene mesh warn');\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                console.warn('scene mesh warn');\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // 加载mesh\r\n                    let mesh = BabylonLoader.loadMesh(meshData, VR.BabylonEngine.Scene, '');\r\n                    entity.node = mesh;\r\n                    entitiesIndex[entity.get('resource_id')] = mesh;\r\n                    childAndParent(entity, mesh);\r\n                } else {\r\n                    console.warn('scene mesh warn');\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n}","export class Scenes {\r\n\r\n\r\n\r\n  public constructor() {\r\n    // connect to server\r\n    // load project data\r\n    // analysis data\r\n    // load original model\r\n    // load scene object from original model\r\n    \r\n  }\r\n\r\n\r\n\r\n\r\n}","export * from './lib';\r\nexport * from './game';","import { Events } from \"../lib\";\r\n\r\nexport class Ajax {\r\n\r\n    public constructor(args: object | string) {\r\n        if (typeof (args) === 'string')\r\n            args = { url: args };\r\n\r\n        return new AjaxRequest(args);\r\n    }\r\n\r\n    public static get(url: string): AjaxRequest {\r\n        return new AjaxRequest({ url: url });\r\n    }\r\n\r\n    public static post(url: string, data: any): AjaxRequest {\r\n        return new AjaxRequest({\r\n            method: 'POST',\r\n            url: url,\r\n            data: data\r\n        });\r\n    }\r\n\r\n    public static put(url: string, data: any): AjaxRequest {\r\n        return new AjaxRequest({\r\n            method: 'PUT',\r\n            url: url,\r\n            data: data\r\n        });\r\n    }\r\n\r\n    public static delete(url: string): AjaxRequest {\r\n        return new AjaxRequest({\r\n            method: 'DELETE',\r\n            url: url\r\n        });\r\n    }\r\n\r\n    public static params: { [key: string]: any } = {};\r\n\r\n    public static param(name: string, value: any): void {\r\n        Ajax.params[name] = value;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class AjaxRequest extends Events {\r\n\r\n    private _progress: number = 0;\r\n\r\n    private _xhr: XMLHttpRequest;\r\n\r\n    public notJson: boolean;\r\n\r\n    public constructor(args: any) {\r\n        super();\r\n\r\n        if (!args) {\r\n            throw new Error('ajax请求无参数，请检查！')\r\n        }\r\n\r\n        this._progress = 0.0;\r\n        this.emit('progress', this._progress);\r\n\r\n        this._xhr = new XMLHttpRequest();\r\n\r\n        // send cookies\r\n        if (args.cookies)\r\n            this._xhr.withCredentials = true;\r\n\r\n        // events\r\n        this._xhr.addEventListener('load', this._onLoad.bind(this), false);\r\n        // this._xhr.addEventListener('progress', this._onProgress.bind(this), false);\r\n        this._xhr.upload.addEventListener('progress', this._onProgress.bind(this), false);\r\n        this._xhr.addEventListener('error', this._onError.bind(this), false);\r\n        this._xhr.addEventListener('abort', this._onAbort.bind(this), false);\r\n\r\n        // url\r\n        let url: string = args.url;\r\n\r\n        // query\r\n        if (args.query && Object.keys(args.query).length) {\r\n            if (url.indexOf('?') === -1) {\r\n                url += '?';\r\n            }\r\n\r\n            var query = [];\r\n            for (var key in args.query) {\r\n                query.push(key + '=' + args.query[key]);\r\n            }\r\n\r\n            url += query.join('&');\r\n        }\r\n\r\n        // templating\r\n        var parts = url.split('{{');\r\n        if (parts.length > 1) {\r\n            for (var i = 1; i < parts.length; i++) {\r\n                var ends = parts[i].indexOf('}}');\r\n                var key = parts[i].slice(0, ends);\r\n\r\n                if (Ajax.params[key] === undefined)\r\n                    continue;\r\n\r\n                // replace\r\n                parts[i] = Ajax.params[key] + parts[i].slice(ends + 2);\r\n            }\r\n\r\n            url = parts.join('');\r\n        }\r\n\r\n        // open request\r\n        this._xhr.open(args.method || 'GET', url, true);\r\n\r\n        // 返回数据是否为json格式\r\n        this.notJson = args.notJson || false;\r\n\r\n        // header for PUT/POST\r\n        if (!args.ignoreContentType && (args.method === 'PUT' || args.method === 'POST' || args.method === 'DELETE'))\r\n            this._xhr.setRequestHeader('Content-Type', 'application/json');\r\n\r\n        // TODO: 权限header参数\r\n        // if (args.auth && config.accessToken) {\r\n        //     this._xhr.setRequestHeader('Authorization', 'Bearer ' + config.accessToken);\r\n        // }\r\n\r\n        if (args.headers) {\r\n            for (var key in args.headers)\r\n                this._xhr.setRequestHeader(key, args.headers[key]);\r\n        }\r\n\r\n        // stringify data if needed\r\n        if (args.data && typeof (args.data) !== 'string' && !(args.data instanceof FormData)) {\r\n            args.data = JSON.stringify(args.data);\r\n        }\r\n\r\n        // make request\r\n        this._xhr.send(args.data || null);\r\n    }\r\n\r\n    private _onLoad(): void {\r\n        this._progress = 1.0;\r\n        this.emit('progress', 1.0);\r\n\r\n        if (this._xhr.status === 200 || this._xhr.status === 201) {\r\n            if (this.notJson) {\r\n                this.emit('load', this._xhr.status, this._xhr.responseText);\r\n            } else {\r\n                try {\r\n                    var json = JSON.parse(this._xhr.responseText);\r\n                } catch (ex) {\r\n                    this.emit('error', this._xhr.status || 0, new Error('invalid json'));\r\n                    return;\r\n                }\r\n                this.emit('load', this._xhr.status, json);\r\n            }\r\n        } else {\r\n            try {\r\n                var json = JSON.parse(this._xhr.responseText);\r\n                var msg = json.message;\r\n                if (!msg) {\r\n                    msg = json.error || (json.response && json.response.error);\r\n                }\r\n\r\n                if (!msg) {\r\n                    msg = this._xhr.responseText;\r\n                }\r\n\r\n                this.emit('error', this._xhr.status, msg);\r\n            } catch (ex) {\r\n                this.emit('error', this._xhr.status);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _onError(evt: any): void {\r\n        this.emit('error', 0, evt);\r\n    }\r\n\r\n    private _onAbort(evt: any): void {\r\n        this.emit('error', 0, evt);\r\n    }\r\n\r\n    private _onProgress(evt: any): void {\r\n        if (!evt.lengthComputable)\r\n            return;\r\n\r\n        var progress = evt.loaded / evt.total;\r\n\r\n        if (progress !== this._progress) {\r\n            this._progress = progress;\r\n            this.emit('progress', this._progress);\r\n        }\r\n    }\r\n\r\n    public abort(): void {\r\n        this._xhr.abort();\r\n    }\r\n\r\n\r\n}","import { Events } from \"./events\";\r\n\r\nexport class Editor extends Events {\r\n\r\n  // 相较于Events，同一个函数名只可代表一个函数；\r\n\r\n  // 某个name对应的某个事件，name与Function是1对1的关系；\r\n  private _hooks: { [key: string]: Function } = {};\r\n\r\n  public constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * 添加全局函数，函数名与函数本体一一对应，不能重名；\r\n   * @param name 函数名；\r\n   * @param fn 函数本体；\r\n   */\r\n  public method(name: string, fn: Function): void {\r\n    if (this._hooks[name] !== undefined) {\r\n      throw new Error(\"can't override hook: \" + name);\r\n    }\r\n    this._hooks[name] = fn;\r\n  };\r\n\r\n  /**\r\n   * 移除某个函数；\r\n   * @param name 函数名；\r\n   */\r\n  public methodRemove(name: string): void {\r\n    delete this._hooks[name];\r\n  };\r\n\r\n  /**\r\n   * 执行某个函数；\r\n   * @param name 函数名；\r\n   */\r\n  public call(name: string, ...args: any[]): any {\r\n    if (this._hooks[name]) {\r\n      var args = Array.prototype.slice.call(arguments, 1);\r\n\r\n      try {\r\n        return this._hooks[name].apply(null, args);\r\n      } catch (ex) {\r\n        console.error(\r\n          \"%c%s %c(editor.method error)\",\r\n          \"color: #06f\",\r\n          name,\r\n          \"color: #f00\"\r\n        );\r\n        console.error(ex.stack);\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n}","export class Events {\r\n\r\n    // 相较于Editor，同一个函数名可包含一系列函数，不仅仅是一个，且有once功能；\r\n  \r\n    public get suspendEvents(): boolean {\r\n      return this._suspendEvents;\r\n    }\r\n    public set suspendEvents(val: boolean) {\r\n      this._suspendEvents = val;\r\n    }\r\n    private _suspendEvents: boolean = false;\r\n  \r\n    // 某个name对应的事件数组，name与Function是1对多的关系；\r\n    private _events: { [key: string]: Function[] } = {};\r\n  \r\n    public constructor() {\r\n  \r\n    }\r\n  \r\n    /**\r\n     * 添加事件数组，若name相同，则在数组末尾继续添加；\r\n     * @param name 函数名；\r\n     * @param fn 函数本体；\r\n     */\r\n    public on(name: string, fn: Function): EventHandle {\r\n      let events: Function[] = this._events[name];\r\n      if (events === undefined) {\r\n        this._events[name] = [fn];\r\n      } else {\r\n        if (events.indexOf(fn) == -1) {\r\n          events.push(fn);\r\n        }\r\n      }\r\n      return new EventHandle(this, name, fn);\r\n    }\r\n  \r\n    /**\r\n     * emit后只执行一次；\r\n     * @param name 函数名；\r\n     * @param fn 函数本体；\r\n     */\r\n    public once(name: string, fn: Function): EventHandle {\r\n      let self = this;\r\n      let evt: EventHandle = this.on(name, function (\r\n        arg0: any,\r\n        arg1: any,\r\n        arg2: any,\r\n        arg3: any,\r\n        arg4: any,\r\n        arg5: any,\r\n        arg6: any,\r\n        arg7: any\r\n      ) {\r\n        fn.call(self, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);\r\n        evt.unbind();\r\n      });\r\n      return evt;\r\n    }\r\n  \r\n    /**\r\n     * 执行事件；\r\n     * @param name 函数名；\r\n     * @param arg0 函数参数1，可选；\r\n     * @param arg1 函数参数2，可选；\r\n     * @param arg2 函数参数3，可选；\r\n     * @param arg3 函数参数4，可选；\r\n     * @param arg4 函数参数5，可选；\r\n     * @param arg5 函数参数6，可选；\r\n     * @param arg6 函数参数7，可选；\r\n     * @param arg7 函数参数8，可选；\r\n     */\r\n    public emit(name: string,\r\n      arg0?: any,\r\n      arg1?: any,\r\n      arg2?: any,\r\n      arg3?: any,\r\n      arg4?: any,\r\n      arg5?: any,\r\n      arg6?: any,\r\n      arg7?: any\r\n    ): Events {\r\n      if (this._suspendEvents) return this;\r\n  \r\n      let events: Function[] = this._events[name];\r\n      if (!events) return this;\r\n  \r\n      // 返回新数组\r\n      events = events.slice(0);\r\n  \r\n      for (let i: number = 0; i < events.length; i++) {\r\n        if (!events[i]) continue;\r\n        try {\r\n          events[i].call(this, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7);\r\n        } catch (ex) {\r\n          console.info(\"%c%s %c(event error)\", \"color: #06f\", name, \"color: #f00\");\r\n          console.log(ex.stack);\r\n        }\r\n      }\r\n  \r\n      return this;\r\n    };\r\n  \r\n    /**\r\n     * 取消Events事件绑定，若name为空，则清空events；\r\n     * @param name 函数名；\r\n     * @param fn 函数本体；\r\n     */\r\n    public unbind(name?: string, fn?: Function): Events {\r\n      if (name) {\r\n        let events: Function[] = this._events[name];\r\n        if (!events) return this;\r\n  \r\n        if (fn) {\r\n          let i: number = events.indexOf(fn);\r\n          if (i !== -1) {\r\n            if (events.length === 1) {\r\n              delete this._events[name];\r\n            } else {\r\n              events.splice(i, 1);\r\n            }\r\n          }\r\n        } else {\r\n          delete this._events[name];\r\n        }\r\n      } else {\r\n        this._events = {};\r\n      }\r\n  \r\n      return this;\r\n    };\r\n  \r\n  }\r\n  \r\n  \r\n  export class EventHandle {\r\n  \r\n    public name: Nullable<string>;\r\n  \r\n    public owner: Nullable<Events>;\r\n  \r\n    public fn: Nullable<Function>;\r\n  \r\n    public constructor(owner: Events, name: string, fn: Function) {\r\n      this.owner = owner;\r\n      this.name = name;\r\n      this.fn = fn;\r\n    }\r\n  \r\n    public unbind(): void {\r\n      if (!this.owner) return;\r\n  \r\n      this.owner.unbind(this.name!, this.fn!);\r\n  \r\n      this.owner = null;\r\n      this.name = null;\r\n      this.fn = null;\r\n    }\r\n  \r\n    public call(): void {\r\n      if (!this.fn) return;\r\n  \r\n      this.fn.call(\r\n        this.owner!,\r\n        arguments[0],\r\n        arguments[1],\r\n        arguments[2],\r\n        arguments[3],\r\n        arguments[4],\r\n        arguments[5],\r\n        arguments[6],\r\n        arguments[7]\r\n      );\r\n    }\r\n  \r\n    public on(name: string, fn: Function): EventHandle {\r\n      return this.owner!.on(name, fn);\r\n    }\r\n  \r\n  }","export class GUID {\r\n\r\n    /**\r\n     * 创建GUID唯一标志，注意：采用大数法，有很小的可能性会重复，一般够用；\r\n     */\r\n    public static create(): string {\r\n      return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c: string) {\r\n        let r = Math.random() * 16 | 0,\r\n          v = (c === 'x') ? r : (r & 0x3 | 0x8);\r\n        return v.toString(16);\r\n      });\r\n    }\r\n  \r\n  }","export * from './events';\r\nexport * from './editor';\r\nexport * from './observer';\r\nexport * from './tools';\r\nexport * from './guid';\r\nexport * from './ajax';\r\nexport * from './very-light';\r\nexport * from './very-camera';","import { Events } from './events';\r\n\r\n//  TODO： 当前暂不考虑赋值会超出现有类型的情况，比如原来是个number，赋值为了array；\r\nexport class Observer extends Events {\r\n\r\n    public get className(): string {\r\n        return 'Observer';\r\n    }\r\n\r\n    public origin: any;\r\n\r\n    private SEPARATOR: string = '.';\r\n\r\n\r\n    private _destroyed: boolean;\r\n    public _path: string;\r\n    // TODO\r\n    public _keys: string[]; // 记录对象的key、value值；\r\n\r\n\r\n    public _data: { [key: string]: any }; // 采用此对象，完整记录所有值；\r\n    public _data2: { [key: string]: any }; // 采用此对象，完整记录所有值；\r\n    public _dataType: { [key: string]: boolean } = {}; // 暂时只判断是否为array分拆而成的类型；\r\n    public _dataType2: { [key: string]: boolean } = {}; // 暂时只判断是否为array分拆而成的类型；\r\n\r\n\r\n\r\n\r\n    public _parent: any; // 当前父物体\r\n    // public _parentPath: string;\r\n    private _parentField: any;\r\n    private _parentKey: any;\r\n\r\n    private _silent: boolean;\r\n\r\n    public history!: History;\r\n    // private sync!: History;\r\n\r\n    public node: any = null;\r\n\r\n    public reparenting: boolean = false;\r\n    private _pathsWithDuplicates: { [key: string]: boolean } = {};\r\n\r\n    // entity, assets, components: script, 一般components, selector, history\r\n    public constructor(data: any, options?: any) {\r\n        super();\r\n\r\n        this.origin = data;\r\n        options = options || {};\r\n\r\n\r\n\r\n\r\n\r\n        this._destroyed = false;\r\n        this._path = '';\r\n        this._keys = [];\r\n        this._data = {};\r\n\r\n        this._data2 = {};\r\n\r\n        // array paths where duplicate entries are allowed - normally\r\n        // we check if an array already has a value before inserting it\r\n        // but if the array path is in here we'll allow it\r\n        if (options.pathsWithDuplicates) {\r\n            this._pathsWithDuplicates = {};\r\n            for (let i = 0; i < options.pathsWithDuplicates.length; i++) {\r\n                this._pathsWithDuplicates[options.pathsWithDuplicates[i]] = true;\r\n            }\r\n        }\r\n\r\n        this.patchData(data);\r\n\r\n        // for (let ke in this._data) {\r\n        //   debug.log('key: ' + ke);\r\n        //   debug.log(this._data[ke]);\r\n        // }\r\n\r\n        // this._parent = options.parent || null;\r\n        // this._parentPath = options.parentPath || '';\r\n        // this._parentField = options.parentField || null;\r\n        // this._parentKey = options.parentKey || null;\r\n\r\n        this._silent = false;\r\n    }\r\n\r\n    public patchData(data: any): void {\r\n        if (typeof data !== 'object') {\r\n            debug.warn(this.className + ': 不是正确的json对象，打印：\\n' + data);\r\n            return;\r\n        }\r\n\r\n        for (let key in data) {\r\n            if (typeof data[key] === 'object') {\r\n                // 对象属性\r\n                // debug.log('对象属性：' + key);\r\n                // debug.log(data[key]);\r\n                // this._prepare(this, key, data[key]);\r\n                this.parserObject(key, key, data[key]);\r\n            } else {\r\n                // 一般属性\r\n                // debug.log('一般属性：' + key);\r\n                // debug.log(data[key]);\r\n                this.set(key, data[key]);\r\n                this._dataType[key] = false;\r\n                this._dataType2[key] = false;\r\n                // this.set(key, data[key]);\r\n            }\r\n        }\r\n    }\r\n\r\n    // TODO: 若设置值为object，需要再parse\r\n    public set(path: string, value: any): void {\r\n        // console.warn(path + ' : ' + value);\r\n        let oldValue = this._data[path];\r\n        // console.warn(path);\r\n        // console.warn(value);\r\n        let keys = path.split('.');\r\n        let parentID = '';\r\n        for (let i = 0; i < keys.length - 1; i++) {\r\n            if (i === 0) {\r\n                parentID = keys[i];\r\n            } else {\r\n                parentID += this.SEPARATOR + keys[i];\r\n            }\r\n        }\r\n        // 数组处理，其他形式暂不考虑\r\n        if (keys.length > 1 && this._dataType[path]) {\r\n            let index = parseInt(keys[keys.length - 1]);\r\n            this._data[path] = value;\r\n            // 上一级数组修改\r\n            this._data[parentID][index] = value;\r\n        } else {\r\n            // if (value instanceof Array) {\r\n            //     value = value.slice(0);\r\n            // }\r\n            this._data[path] = value;\r\n            this.updateChildData(path, value);\r\n            this._data2[path] = value;\r\n        }\r\n        // console.warn(this._data);\r\n\r\n        // if (parentID && this._dataType2[parentID] && this.isNumber(keys[keys.length - 1])) {\r\n        //     this._data2[parentID][parseInt(keys[keys.length - 1])] = value;\r\n        // }\r\n\r\n        this.emit(path + ':set', value, oldValue);\r\n        this.emit('*:set', path, value, oldValue);\r\n    }\r\n\r\n    private isNumber(str: string): boolean {\r\n        var n = Number(str);\r\n        return !isNaN(n) ? true : false;\r\n    }\r\n\r\n    private updateChildData(path: string, value: any): void {\r\n        if (value instanceof Array) {\r\n            for (let key in this._data) {\r\n                if (key.startsWith(path + this.SEPARATOR)) {\r\n                    delete this._data[key];\r\n                    delete this._dataType[key];\r\n                }\r\n            }\r\n            let newPath = '';\r\n            for (let i = 0; i < value.length; i++) {\r\n                newPath = path + this.SEPARATOR + i.toString();\r\n                this._data[newPath] = value[i];\r\n                this._dataType[newPath] = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    // TODO\r\n    public unset(path: string, value: any): boolean {\r\n        // console.log(path + ' : ' + value);\r\n        if (!this.has(path)) {\r\n            return false;\r\n        }\r\n        let oldValue = this._data[path];\r\n        delete this._data[path];\r\n        delete this._dataType[path];\r\n\r\n        delete this._data2[path];\r\n        delete this._dataType2[path];\r\n\r\n        this.emit(path + ':set', value, oldValue);\r\n        this.emit('*:set', path, value, oldValue);\r\n\r\n        return true;\r\n    }\r\n\r\n    // 在数组的某个指定位置增加值\r\n    public insert(path: string, value: any, ind: number | undefined): boolean {\r\n        // console.error(path + ':insert-value: ' + value);\r\n        // console.warn(this._data);\r\n        if (!this.has(path) || !(this._data[path] instanceof Array)) {\r\n            return false;\r\n        }\r\n        let arr = this._data[path];\r\n        if (value instanceof Array) {\r\n            value = value.slice(0);\r\n        }\r\n        // if (!this._pathsWithDuplicates || !this._pathsWithDuplicates[path]) {\r\n        //     if (arr.indexOf(value) !== -1) {\r\n        //         return false;\r\n        //     }\r\n        // }\r\n        if (ind === undefined) {\r\n            arr.push(value);\r\n            ind = arr.length - 1;\r\n        } else {\r\n            arr.splice(ind, 0, value);\r\n        }\r\n        this.updateChildData(path, arr);\r\n        // TODO\r\n        // let arr2 = this._data2[path];\r\n        // console.error(arr2);\r\n        // if (arr2) {\r\n        //     // if (!this._pathsWithDuplicates || !this._pathsWithDuplicates[path]) {\r\n        //     //     if (arr2.indexOf(value) !== -1) {\r\n        //     //         return false;\r\n        //     //     }\r\n        //     // }\r\n        //     if (ind === undefined) {\r\n        //         arr2.push(value);\r\n        //     } else {\r\n        //         arr2.splice(ind, 0, value);\r\n        //     }\r\n        // }\r\n        // console.error(arr2);\r\n        \r\n        // console.warn(this._data);\r\n        this.emit(path + ':insert', value, ind);\r\n        this.emit('*:insert', path, value, ind);\r\n\r\n        return true;\r\n    }\r\n\r\n    // 删除数组指定某个序号的值\r\n    public remove(path: string, ind: number): boolean {\r\n        if (!this.has(path) || !(this._data[path] instanceof Array)) {\r\n            return false;\r\n        }\r\n        let arr = this._data[path];\r\n        if (arr.length < ind) return false;\r\n        let value = arr[ind];\r\n        arr.splice(ind, 1);\r\n        this.updateChildData(path, arr);\r\n\r\n        // TODO\r\n        // let arr2 = this._data2[path];\r\n        // if (arr2 && arr2.length >= ind) {\r\n        //     arr2.splice(ind, 1);\r\n        // }\r\n\r\n        this.emit(path + ':remove', value, ind);\r\n        this.emit('*:remove', path, value, ind);\r\n        return true;\r\n    }\r\n\r\n    // 删除数组中的某个value值\r\n    public removeValue(path: string, value: any): boolean {\r\n        if (!this.has(path) || !(this._data[path] instanceof Array)) {\r\n            return false;\r\n        }\r\n        let arr = this._data[path];\r\n        let ind = arr.indexOf(value);\r\n        if (ind === -1) {\r\n            return false;\r\n        }\r\n        let oldValue = arr[ind];\r\n        arr.splice(ind, 1);\r\n        this.updateChildData(path, arr);\r\n\r\n        // TODO\r\n        // let arr2 = this._data2[path];\r\n        // if (arr2 && ind >= 0) {\r\n        //     arr2.splice(ind, 1);\r\n        // }\r\n\r\n        // console.warn('删除');\r\n        // console.warn(this._data);\r\n        // console.warn(this._data2);\r\n\r\n        this.emit(path + ':remove', oldValue, ind);\r\n        this.emit('*:remove', path, oldValue, ind);\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    public move(path: string, indOld: number, indNew: number): boolean {\r\n        if (!this.has(path) || !(this._data[path] instanceof Array)) {\r\n            return false;\r\n        }\r\n\r\n        let indNew2 = indNew;\r\n\r\n        let arr = this._data[path];\r\n        if (arr.length < indOld || arr.length < indNew || indOld === indNew) return false;\r\n        let oldValue = arr[indOld]\r\n        arr.splice(indOld, 1);\r\n        if (indNew === -1) indNew = arr.length;\r\n        arr.splice(indNew, 0, oldValue);\r\n        this.updateChildData(path, arr);\r\n\r\n        // TODO\r\n        // let arr2 = this._data2[path];\r\n        // if (arr2) {\r\n        //     if (arr2.length < indOld || arr2.length < indNew2 || indOld === indNew2) {\r\n\r\n        //     } else {\r\n        //         let oldValue2 = arr2[indOld]\r\n        //         arr2.splice(indOld, 1);\r\n        //         if (indNew2 === -1) indNew2 = arr2.length;\r\n        //         arr2.splice(indNew2, 0, oldValue2);\r\n        //     }\r\n        // }\r\n\r\n        this.emit(path + ':move', oldValue, indNew, indOld);\r\n        this.emit('*:move', path, oldValue, indNew, indOld);\r\n        return true;\r\n    }\r\n\r\n    public parserObject(prefix: string, key: string, value: any): void {\r\n        // 先保存一份\r\n        this.set(prefix, value);\r\n        this._dataType[prefix] = false;\r\n\r\n        let path: string;\r\n        let type: string = typeof value;\r\n\r\n        if (type === 'object' && value instanceof Array) {\r\n            this._dataType2[prefix] = true;\r\n            for (let i = 0; i < value.length; i++) {\r\n                path = prefix + this.SEPARATOR + i.toString();\r\n                this.set(path, value[i]);\r\n                this._dataType[path] = true;\r\n                // 数组元素还是对象的情况暂时不处理\r\n            }\r\n        } else if (type === 'object' && value instanceof Object) {\r\n\r\n            for (let key2 in value) {\r\n                if (typeof value[key2] === 'object') {\r\n                    // 递归解析\r\n                    this.parserObject(prefix + this.SEPARATOR + key2, key2, value[key2]);\r\n                } else {\r\n                    path = prefix + this.SEPARATOR + key2;\r\n                    this.set(path, value[key2]);\r\n                    this._dataType[path] = false;\r\n                    this._dataType2[prefix] = false;\r\n\r\n                }\r\n            }\r\n        } else {\r\n            // 目前看，null和undefined会经过这里\r\n            // debug.warn(this.className + '.parserObject, 为止数据类型:' + value);\r\n        }\r\n    }\r\n\r\n\r\n    public has(path: string): boolean {\r\n        return path in this._data;\r\n    }\r\n\r\n    public get(path: string): any {\r\n        if (path in this._data) {\r\n            return this._data[path];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    public propagate(evt: any) {\r\n        let that = this;\r\n        return function (path: string, arg1: any, arg2: any, arg3: any) {\r\n            if (!that._parent) return;\r\n\r\n            let key = that._parentKey;\r\n            if (!key && that._parentField instanceof Array) {\r\n                key = that._parentField.indexOf(that);\r\n\r\n                if (key === -1) return;\r\n            }\r\n\r\n            // path = that._parentPath + '.' + key + '.' + path;\r\n\r\n            let state;\r\n            if (that._silent) state = that._parent.silence();\r\n\r\n            that._parent.emit(path + ':' + evt, arg1, arg2, arg3);\r\n            that._parent.emit('*:' + evt, path, arg1, arg2, arg3);\r\n\r\n            if (that._silent) that._parent.silenceRestore(state);\r\n        };\r\n    }\r\n\r\n\r\n    public destroy(): void {\r\n        if (this._destroyed) return;\r\n        this._destroyed = true;\r\n        this.emit('destroy');\r\n        this.unbind();\r\n    }\r\n}\r\n\r\nexport interface History {\r\n    enabled?: boolean;\r\n}\r\n","export class Tools {\r\n\r\n\r\n    public constructor() {\r\n\r\n    }\r\n\r\n\r\n    public static eulerAngleToRadian(val: BABYLON.Vector3): BABYLON.Vector3 {\r\n        let para: number = Math.PI / 180;\r\n        return val.multiplyByFloats(para, para, para);\r\n    }\r\n\r\n    public static radianToEulerAngle(val: BABYLON.Vector3): BABYLON.Vector3 {\r\n        let para: number = 180 / Math.PI;\r\n        return val.multiplyByFloats(para, para, para);\r\n    }\r\n\r\n    public static eulerAngleFloatToRadian(euler_angle: number): number {\r\n        return euler_angle * Math.PI / 180;\r\n    }\r\n\r\n    public static radianFloatToEulerAngle(radian: number): number {\r\n        return radian * 180 / Math.PI;\r\n    }\r\n\r\n    public static vector3ToArray(val: BABYLON.Vector3): number[] {\r\n        return [val.x, val.y, val.z];\r\n    }\r\n\r\n    public static quatTransfromVector3(quat: BABYLON.Quaternion, vec3: BABYLON.Vector3): BABYLON.Vector3 {\r\n        let res = BABYLON.Vector3.Zero();\r\n\r\n        var x = vec3.x, y = vec3.y, z = vec3.z;\r\n        var qx = quat.x, qy = quat.y, qz = quat.z, qw = quat.w;\r\n\r\n        // calculate quat * vec\r\n        var ix = qw * x + qy * z - qz * y;\r\n        var iy = qw * y + qz * x - qx * z;\r\n        var iz = qw * z + qx * y - qy * x;\r\n        var iw = -qx * x - qy * y - qz * z;\r\n\r\n        // calculate result * inverse quat\r\n        res.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n        res.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n        res.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n\r\n        return res;\r\n    }\r\n\r\n    public static quatMultiplyVector3(rotation: BABYLON.Quaternion, point: BABYLON.Vector3): BABYLON.Vector3 {\r\n        let num = rotation.x * 2;\r\n        let num2 = rotation.y * 2;\r\n        let num3 = rotation.z * 2;\r\n        let num4 = rotation.x * num;\r\n        let num5 = rotation.y * num2;\r\n        let num6 = rotation.z * num3;\r\n        let num7 = rotation.x * num2;\r\n        let num8 = rotation.x * num3;\r\n        let num9 = rotation.y * num3;\r\n        let num10 = rotation.w * num;\r\n        let num11 = rotation.w * num2;\r\n        let num12 = rotation.w * num3;\r\n        let result: BABYLON.Vector3 = BABYLON.Vector3.Zero();\r\n        result.x = (1 - (num5 + num6)) * point.x + (num7 - num12) * point.y + (num8 + num11) * point.z;\r\n        result.y = (num7 + num12) * point.x + (1 - (num4 + num6)) * point.y + (num9 - num10) * point.z;\r\n        result.z = (num8 - num11) * point.x + (num9 + num10) * point.y + (1 - (num4 + num5)) * point.z;\r\n        return result;\r\n    }\r\n\r\n\r\n    public static clampAngle(angle: number, min: number, max: number): number {\r\n        if (angle < -360)\r\n            angle += 360;\r\n        if (angle > 360)\r\n            angle -= 360;\r\n        if (angle < min) {\r\n            angle = min;\r\n        } else if (angle > max) {\r\n            angle = max;\r\n        }\r\n        return angle;\r\n    }\r\n\r\n    public static worldToScreenPoint(world_point: BABYLON.Vector3, scene: BABYLON.Scene, camera: BABYLON.TargetCamera, engine: BABYLON.Engine): BABYLON.Vector3 {\r\n        return BABYLON.Vector3.Project(\r\n            world_point,\r\n            BABYLON.Matrix.Identity(),\r\n            scene.getTransformMatrix(),\r\n            camera.viewport.toGlobal(\r\n                engine.getRenderWidth(),\r\n                engine.getRenderHeight(),\r\n            ),\r\n        );\r\n    }\r\n\r\n    public static lerpVector2(vec1: BABYLON.Vector2, vec2: BABYLON.Vector2, rate: number): BABYLON.Vector2 {\r\n        let res = BABYLON.Vector2.Zero();\r\n        if (rate < 0) rate = 0;\r\n        if (rate > 1) rate = 1;\r\n        res.x = vec1.x + rate * (vec2.x - vec1.x);\r\n        res.y = vec1.y + rate * (vec2.y - vec1.y);\r\n        return res;\r\n    }\r\n\r\n    public static lerpVector3(vec1: BABYLON.Vector3, vec2: BABYLON.Vector3, rate: number): BABYLON.Vector3 {\r\n        let res = BABYLON.Vector3.Zero();\r\n        if (rate < 0) rate = 0;\r\n        if (rate > 1) rate = 1;\r\n        res.x = vec1.x + rate * (vec2.x - vec1.x);\r\n        res.y = vec1.y + rate * (vec2.y - vec1.y);\r\n        res.z = vec1.z + rate * (vec2.z - vec1.z);\r\n        return res;\r\n    }\r\n\r\n    public static lerpVector4(vec1: BABYLON.Vector4, vec2: BABYLON.Vector4, rate: number): BABYLON.Vector4 {\r\n        let res = BABYLON.Vector4.Zero();\r\n        if (rate < 0) rate = 0;\r\n        if (rate > 1) rate = 1;\r\n        res.x = vec1.x + rate * (vec2.x - vec1.x);\r\n        res.y = vec1.y + rate * (vec2.y - vec1.y);\r\n        res.z = vec1.z + rate * (vec2.z - vec1.z);\r\n        res.w = vec1.w + rate * (vec2.w - vec1.w);\r\n        return res;\r\n    }\r\n\r\n\r\n    public static transformLocalToWorldDirection(node: BABYLON.Node, local_direction: BABYLON.Vector3): BABYLON.Vector3 {\r\n        if (node) {\r\n            let matrix: BABYLON.Matrix = node.computeWorldMatrix();\r\n            return BABYLON.Vector3.TransformCoordinates(local_direction, matrix).subtract((node as any).getAbsolutePosition());\r\n        } else {\r\n            return local_direction;\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    // public static sha1(val: any): string {\r\n    //     return SHA1.SHA1(val);\r\n    // }\r\n\r\n\r\n\r\n    public static rgb2hsv(rgb: number[]): number[] {\r\n        var rr, gg, bb,\r\n            r = rgb[0] / 255,\r\n            g = rgb[1] / 255,\r\n            b = rgb[2] / 255,\r\n            h = 0, s,\r\n            v = Math.max(r, g, b),\r\n            diff = v - Math.min(r, g, b),\r\n            diffc = function (c: number) {\r\n                return (v - c) / 6 / diff + 1 / 2;\r\n            };\r\n\r\n        if (diff == 0) {\r\n            h = s = 0;\r\n        } else {\r\n            s = diff / v;\r\n            rr = diffc(r);\r\n            gg = diffc(g);\r\n            bb = diffc(b);\r\n\r\n            if (r === v) {\r\n                h = bb - gg;\r\n            } else if (g === v) {\r\n                h = (1 / 3) + rr - bb;\r\n            } else if (b === v) {\r\n                h = (2 / 3) + gg - rr;\r\n            }\r\n            if (h < 0) {\r\n                h += 1;\r\n            } else if (h > 1) {\r\n                h -= 1;\r\n            }\r\n        }\r\n        return [h, s, v];\r\n    }\r\n\r\n    public static hsv2rgb(hsv: number[]): number[] {\r\n        var h = hsv[0];\r\n        var s = hsv[1];\r\n        var v = hsv[2];\r\n        var r = 0, g = 0, b = 0, i, f, p, q, t;\r\n        // if (h && s === undefined && v === undefined) {\r\n        //     s = h.s, v = h.v, h = h.h;\r\n        // }\r\n        i = Math.floor(h * 6);\r\n        f = h * 6 - i;\r\n        p = v * (1 - s);\r\n        q = v * (1 - f * s);\r\n        t = v * (1 - (1 - f) * s);\r\n        switch (i % 6) {\r\n            case 0: r = v, g = t, b = p; break;\r\n            case 1: r = q, g = v, b = p; break;\r\n            case 2: r = p, g = v, b = t; break;\r\n            case 3: r = p, g = q, b = v; break;\r\n            case 4: r = t, g = p, b = v; break;\r\n            case 5: r = v, g = p, b = q; break;\r\n        }\r\n        return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\r\n    }\r\n\r\n    public static rgba2hsvString(rgba: number[]): string {\r\n        rgba = Tools.to255rgba(rgba);\r\n        let colorStr = '#';\r\n        for (let i = 0, len = rgba.length; i < len; i++) {\r\n            let hex = ('0' + rgba[i].toString(16)).slice(-2);\r\n            colorStr += hex;\r\n        }\r\n        return colorStr;\r\n    }\r\n\r\n    /*\r\n    var rgba2hsvString = (rgba) => {\r\n        var colorStr = '#';\r\n        for (let i = 0, len = rgba.length; i < len; i++) {\r\n            let hex = ('0' + rgba[i].toString(16)).slice(-2);\r\n            colorStr += hex;\r\n        }\r\n        return colorStr;\r\n    }\r\n\r\n    var hsvString2rgba = (hsv) => {\r\n        var colorChange = [];\r\n        for (var i = 1; i < hsv.length; i += 2) {\r\n            colorChange.push(parseInt('0x' + hsv.slice(i, i + 2)));\r\n        }\r\n        \r\n        var rgbaSmall = [];\r\n        for(var i = 0; i < colorChange.length; i++) {\r\n            rgbaSmall.push(colorChange[i] / 255.0);\r\n        }\r\n        return rgbaSmall;\r\n    }\r\n    */\r\n\r\n    public static hsvString2rgba(hsv: string): number[] {\r\n        var colorChange = [];\r\n        for (var i = 1; i < hsv.length; i += 2) {\r\n            colorChange.push(parseInt('0x' + hsv.slice(i, i + 2)));\r\n        }\r\n        colorChange = Tools.toSmallrgba(colorChange);\r\n        return colorChange;\r\n    }\r\n\r\n    public static to255rgba(rgba: number[]): number[] {\r\n        let rgba255: number[] = [];\r\n        rgba.forEach((element: number) => {\r\n            rgba255.push(element * 255);\r\n        });\r\n        return rgba255;\r\n    }\r\n\r\n    public static toSmallrgba(rgba: number[]): number[] {\r\n        let rgbaSmall: number[] = [];\r\n        rgba.forEach((element: number) => {\r\n            rgbaSmall.push(element / 255.0);\r\n        });\r\n        return rgbaSmall;\r\n    }\r\n\r\n\r\n\r\n}","// import { VeryEngine } from \"../../engine\";\r\n// import { Config } from \"../global\";\r\n// import { Viewport } from \"../viewport\";\r\n\r\n\r\nexport class VeryCamera extends BABYLON.TransformNode {\r\n\r\n    private _canvas: HTMLCanvasElement;\r\n    private _width: number;\r\n    private _height: number;\r\n\r\n    public get mode(): number {\r\n        return this.camera.mode;\r\n    }\r\n    public set mode(val: number) {\r\n        this.camera.mode = val;\r\n        if (val === BABYLON.Camera.ORTHOGRAPHIC_CAMERA) {\r\n            this.orthoSize = this._orthoSize;\r\n        }\r\n    }\r\n\r\n    public get fov(): number {\r\n        return this.camera.fov;\r\n    }\r\n    public set fov(val: number) {\r\n        this.camera.fov = val;\r\n    }\r\n\r\n    public get inertia(): number {\r\n        return this.camera.inertia;\r\n    }\r\n    public set inertia(val: number) {\r\n        this.camera.inertia = val;\r\n    }\r\n\r\n    private _orthoSize: number = 0;\r\n    public get orthoSize(): number {\r\n        if (this.camera.mode === BABYLON.Camera.ORTHOGRAPHIC_CAMERA) {\r\n            this._orthoSize = this.camera!.orthoRight! / this._scene.getEngine().getRenderWidth() / this.camera.viewport.width;\r\n            return this._orthoSize;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n    public set orthoSize(val: number) {\r\n        this._orthoSize = val;\r\n        if (this.camera.mode === BABYLON.Camera.ORTHOGRAPHIC_CAMERA) {\r\n            this.camera.orthoRight = val * this._scene.getEngine().getRenderWidth() * this.camera.viewport.width;\r\n            this.camera.orthoLeft = -val * this._scene.getEngine().getRenderWidth() * this.camera.viewport.width;\r\n            this.camera.orthoTop = val * this._scene.getEngine().getRenderHeight() * this.camera.viewport.height;\r\n            this.camera.orthoBottom = -val * this._scene.getEngine().getRenderHeight() * this.camera.viewport.height;\r\n        }\r\n    }\r\n\r\n    private _clearColor: Nullable<BABYLON.Color4> = null;\r\n    public get clearColor(): Nullable<BABYLON.Color4> {\r\n        if (this._clearColor === null) {\r\n            this._clearColor = new BABYLON.Color4(1, 1, 1, 1);\r\n        }\r\n        this._clearColor.copyFrom(this._scene.clearColor);\r\n        return this._clearColor;\r\n    }\r\n\r\n    public set clearColor(value: Nullable<BABYLON.Color4>) {\r\n        this._clearColor = value;\r\n        if (this._scene.activeCameras[0] === this.camera && value) {\r\n            this._scene.clearColor.copyFrom(value);\r\n        }\r\n    }\r\n\r\n    public get minZ(): number {\r\n        return this.camera.minZ;\r\n    }\r\n    public set minZ(val: number) {\r\n        this.camera.minZ = val;\r\n    }\r\n\r\n    public get maxZ(): number {\r\n        return this.camera.minZ;\r\n    }\r\n    public set maxZ(val: number) {\r\n        this.camera.maxZ = val;\r\n    }\r\n\r\n    public get checkCollisions(): boolean {\r\n        return (<BABYLON.FreeCamera>this.camera).checkCollisions;\r\n    }\r\n    public set checkCollisions(val: boolean) {\r\n        (<BABYLON.FreeCamera>this.camera).checkCollisions = val;\r\n    }\r\n\r\n    public get applyGravity(): boolean {\r\n        return (<BABYLON.FreeCamera>this.camera).applyGravity;\r\n    }\r\n    public set applyGravity(val: boolean) {\r\n        (<BABYLON.FreeCamera>this.camera).applyGravity = val;\r\n    }\r\n\r\n    public camera: BABYLON.TargetCamera;\r\n\r\n    // public get mode()\r\n\r\n    public constructor(camera: BABYLON.TargetCamera, scene: BABYLON.Scene, canvas: HTMLCanvasElement) {\r\n        super(camera.name, scene);\r\n        this.camera = camera;\r\n        camera.name += '-Camera';\r\n        this._canvas = canvas;\r\n        this._width = canvas.width;\r\n        this._height = canvas.height;\r\n        this.position.copyFrom(camera.position);\r\n        this.rotation.copyFrom(camera.rotation);\r\n        camera.parent = this;\r\n        camera.position = BABYLON.Vector3.Zero();\r\n        camera.rotation = BABYLON.Vector3.Zero();\r\n        camera.inputs.clear();\r\n\r\n    }\r\n\r\n    private _backupViewport: BABYLON.Viewport = new BABYLON.Viewport(0, 0, 1, 1);\r\n    private _render: boolean = true;\r\n    public renderCamera(render: boolean): void {\r\n        if (this._render === render) return;\r\n        this._render = render;\r\n        if (render) {\r\n            this.camera.viewport = this._backupViewport.clone();\r\n        } else {\r\n            this._backupViewport = this.camera.viewport.clone();\r\n            this.camera.viewport = new BABYLON.Viewport(0, 0, 0, 0);\r\n        }\r\n    }\r\n\r\n    // orthographic相机在窗口resize后需要刷新；\r\n    public resize(editor?: boolean): void {\r\n        if (this.camera && this._canvas) {\r\n            if (this._canvas.width !== this._width || this._canvas.height !== this._height) {\r\n                this._width = this._canvas.width;\r\n                this._height = this._canvas.height;\r\n\r\n                let w = this._scene.getEngine().getRenderWidth();\r\n                let h = this._scene.getEngine().getRenderHeight();\r\n\r\n                // if (editor) {\r\n                //     if (this !== VeryEngine.viewCamera) {\r\n                //         if (this._render) {\r\n                //             this.camera.viewport = new BABYLON.Viewport(Config.x / w, (h - Config.y) / h, Config.width / w, Config.height / h);\r\n                //         } else {\r\n                //             this._backupViewport = new BABYLON.Viewport(Config.x / w, (h - Config.y) / h, Config.width / w, Config.height / h);\r\n                //         }\r\n                //         // console.warn(this.camera.viewport);\r\n                //     }\r\n                // }\r\n\r\n                if (this.camera.mode === BABYLON.Camera.ORTHOGRAPHIC_CAMERA) {\r\n                    this.camera.orthoRight = this._orthoSize * w * this.camera.viewport.width;\r\n                    this.camera.orthoLeft = -this._orthoSize * w * this.camera.viewport.width;\r\n                    this.camera.orthoTop = this._orthoSize * h * this.camera.viewport.height;\r\n                    this.camera.orthoBottom = -this._orthoSize * h * this.camera.viewport.height;\r\n                } else {\r\n\r\n                }\r\n\r\n                // console.log('设置ortho参数: ' + this._orthoSize);\r\n                // console.warn(this.camera);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n}","export class VeryLight extends BABYLON.TransformNode {\r\n\r\n\r\n    public light: BABYLON.Light;\r\n\r\n    public get type(): number {\r\n        return this.light.getTypeID();\r\n    }\r\n\r\n    public get intensity(): number {\r\n        return this.light.intensity;\r\n    }\r\n    public set intensity(value: number) {\r\n        this.light.intensity = value;\r\n    }\r\n\r\n    public get diffuse(): BABYLON.Color3 {\r\n        return this.light.diffuse;\r\n    }\r\n    public set diffuse(value: BABYLON.Color3) {\r\n        this.light.diffuse = value;\r\n    }\r\n\r\n    public get specular(): BABYLON.Color3 {\r\n        return this.light.specular;\r\n    }\r\n    public set specular(value: BABYLON.Color3) {\r\n        this.light.specular = value;\r\n    }\r\n\r\n    public get angle(): number {\r\n        if (this.light instanceof BABYLON.SpotLight) {\r\n            return this.light.angle;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n    public set angle(value: number) {\r\n        if (this.light instanceof BABYLON.SpotLight) {\r\n            this.light.angle = value;\r\n        }\r\n    }\r\n\r\n    public get exponent(): number {\r\n        if (this.light instanceof BABYLON.SpotLight) {\r\n            return this.light.exponent;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n    public set exponent(value: number) {\r\n        if (this.light instanceof BABYLON.SpotLight) {\r\n            this.light.exponent = value;\r\n        }\r\n    }\r\n\r\n\r\n    public constructor(light: BABYLON.Light, scene: BABYLON.Scene) {\r\n        super(light.name, scene);\r\n        light.name += '-Light';\r\n        // light\r\n        this.light = light;\r\n        this.position.copyFrom(light.getAbsolutePosition());\r\n        // this.rotation = BABYLON.Vector3.Zero();\r\n        light.parent = this;\r\n        \r\n    }\r\n\r\n    // public isEnabled(): boolean {\r\n    //     return this.light.isEnabled();\r\n    // }\r\n\r\n    // public setEnabled(value: boolean) {\r\n    //     this.light.setEnabled(value);\r\n    // }\r\n\r\n}","import { BabylonLoader, Config, Game } from './game';\r\nimport { Editor } from './lib';\r\n\r\nexport * from './index';\r\n\r\nlet game!: Game;\r\nlet initFlag: boolean = false;\r\nlet dataLoaded: boolean = false;\r\nlet dataLoaded2: boolean = false;\r\n\r\n// let path1: string = '';\r\n// let path2: string = '';\r\nlet datas: any;\r\n\r\n// 添加到全局变量\r\nwindow.editor = new Editor();\r\n// if (typeof String.prototype.startsWith != 'function') {\r\n//     String.prototype.startsWith = function (prefix) {\r\n//         return this.slice(0, prefix.length) === prefix;\r\n//     };\r\n// }\r\n\r\nvar projectID = window.location.pathname.substring(9);\r\n\r\n/**\r\n * 初始化入口；\r\n */\r\nfunction initGame(): void {\r\n    let canvas = <HTMLCanvasElement>document.getElementById('renderCanvas');\r\n    let fpsLabel = document.getElementById('fpsLabel');\r\n    if (canvas !== null && fpsLabel !== null) {\r\n        game = new Game(canvas, fpsLabel);\r\n        game.createScene(datas).animate();  // 链式调用\r\n    }\r\n}\r\n\r\nfunction runBtn(): void {\r\n    if (game) {\r\n        game.createScene(datas).animate();\r\n    }\r\n}\r\n\r\nfunction toggleDebug(): void {\r\n    if (game) {\r\n        game.toggleDebug();\r\n    }\r\n}\r\n\r\n\r\nfunction init(): void {\r\n    // 等待表格数据加载完成\r\n    if (dataLoaded && dataLoaded2) {\r\n        initGame();\r\n    } else {\r\n        setTimeout(init, 500);\r\n    }\r\n}\r\n\r\n\r\nfunction loadResources(): void {\r\n\r\n    var projectID = window.location.pathname.substring(9);\r\n    Config.projectID = projectID;\r\n    ossfile.login(projectID, document.referrer)\r\n        .then(data => {\r\n            if (data.code === \"00000\") {\r\n                Config.projectName = data.data;\r\n                editor.call('getAssets');\r\n            }\r\n            else {\r\n                console.error('load project error: ' + data.message);\r\n            }\r\n        })\r\n        .catch(\r\n            error => {\r\n                console.error('load project error: ');\r\n                console.error(error);\r\n            }\r\n        );\r\n\r\n    editor.method('getAssets', () => {\r\n        ossfile.getJsonConfig(projectID, \"assets\")\r\n            .then(response => {\r\n                var data = JSON.parse(response);\r\n                Config.assetsData = data;\r\n                BabylonLoader.assetsData = data;\r\n                // editor.call('initAssets', Config.assetsData);\r\n                // 加载完assets数据再加载scene数据，便于解析scene过程中使用assets数据\r\n                editor.call('getScenes');\r\n                // 加载表格判断\r\n                if (data.assets) {\r\n                    for (let key in data.assets) {\r\n                        if (data.assets[key].type === 'table') {\r\n                            Config.tableAssetsID = key;\r\n                            Config.tableName = data.assets[key].name;\r\n                        }\r\n                    }\r\n                }\r\n                // console.warn(Config.tableAssetsID);\r\n                if (Config.tableAssetsID !== '') {\r\n                    editor.call('loadTable');\r\n                } else {\r\n                    dataLoaded = true;\r\n                }\r\n            })\r\n            .catch(\r\n                error => {\r\n                    console.error(error);\r\n                }\r\n            );\r\n    });\r\n\r\n\r\n    editor.method('getScenes', () => {\r\n        // scenes data\r\n        ossfile.getJsonConfig(projectID, \"scenes\")\r\n            .then(response => {\r\n                var data = JSON.parse(response);\r\n                let lastScene: number = data.last;\r\n                Config.scenesData = data.scenes[lastScene];\r\n                Config.sceneIndex = lastScene;\r\n                Config.sceneName = Config.scenesData.name;\r\n\r\n                document.title = Config.projectName + ' - ' + Config.sceneName + ' - 万维引擎';\r\n                // console.log(Config.scenesData);\r\n                dataLoaded2 = true;\r\n            })\r\n            .catch(\r\n                error => {\r\n                    console.error(error);\r\n                }\r\n            );\r\n    });\r\n\r\n\r\n    editor.method('loadTable', () => {\r\n        // 获取表格数据\r\n        ossfile.getJsonAsset(projectID, Config.tableAssetsID, \"table\")\r\n            .then(function (response) {\r\n                let data = JSON.parse(response);\r\n                // 先将json转化为字符串\r\n                let tempData = JSON.stringify(data);\r\n                // 对字符串再进行反转义\r\n                tempData = escape2Html(tempData);\r\n                // 转化为json后，赋值给表格\r\n                // hot1.loadData(JSON.parse(tempData).table);\r\n                // console.log(JSON.parse(tempData).table);\r\n                datas = JSON.parse(tempData).table;\r\n                Config.tableData = datas;\r\n                // console.warn(datas);\r\n                dataLoaded = true;\r\n            })\r\n            .catch(function (error) {\r\n                console.log('load error: ' + error);\r\n            });\r\n    });\r\n\r\n\r\n\r\n}\r\n\r\nloadResources();\r\n\r\n\r\n\r\n\r\n//HTML标签转义（< -> &lt;）\r\nfunction html2Escape(sHtml: any) {\r\n    var temp: any = document.createElement('div');\r\n    temp.textContent != null\r\n        ? (temp.textContent = sHtml)\r\n        : (temp.innerText = sHtml);\r\n    var output = temp.innerHTML;\r\n    temp = null;\r\n    return output;\r\n}\r\n\r\n//HTML标签反转义（&lt; -> <）\r\nfunction escape2Html(str: any) {\r\n    var temp: any = document.createElement('div');\r\n    temp.innerHTML = str;\r\n    var output = temp.innerText || temp.textContent;\r\n    temp = null;\r\n    return output;\r\n}\r\n\r\n// 关联按钮\r\n// document.getElementById('runButton')!.addEventListener('click', runBtn);\r\n\r\n// // 关联按钮\r\n// document.getElementById('debugButton')!.addEventListener('click', toggleDebug);\r\n\r\n// 启动引擎\r\n// 第一次启动时，先异步加载数据后再初始化，后期可以直接点击按钮进行加载；\r\ninit();\r\n// loadData2()\r\n//   .then(function (hot: HandTable) {\r\n//     console.log(hot.getData());\r\n//   }\r\n//   );\r\n"]}